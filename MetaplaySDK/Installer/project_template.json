{"Version": 1, "Date": "2025-01-13", "Files": [{"Path": "Assets/MetaplayHelloWorld.meta", "Text": "fileFormatVersion: 2\nguid: 243d1c763826d8f47bdf8aa43762f0af\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/MetaplayHelloWorld/ApplicationStateManager.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\n#if UNITY_WEBGL && !UNITY_EDITOR\n#define UNITY_WEBGL_BUILD\n#endif\n\nusing Game.Logic;\nusing Metaplay.Core;\nusing Metaplay.Core.Message;\nusing Metaplay.Unity;\nusing Metaplay.Unity.DefaultIntegration;\nusing System;\nusing System.Text;\nusing UnityEngine;\nusing UnityEngine.UI;\n\n// This file contains Metaplay sample code. It can be adapted to suit your project's needs or you can\n// replace the functionality completely with your own.\nnamespace Metaplay.Sample\n{\n    /// <summary>\n    /// Declare concrete MetaplayClient class for type-safe access to player context from game code.\n    /// </summary>\n    public class MetaplayClient : MetaplayClientBase<PlayerModel>\n    {\n    }\n\n    /// <summary>\n    /// Manages the application's lifecycle, including mock loading state, Metaplay server connectivity, and failure states.\n    /// This class is a simplified version of a state manager that a real game would have, but in such a manner that the\n    /// integration of Metaplay into such a state manager is exemplified.\n    ///\n    /// Also implements <see cref=\"IMetaplayLifecycleDelegate\"/> to get callbacks from Metaplay on connectivity events and\n    /// error states.\n    /// </summary>\n    public class ApplicationStateManager : MonoBehaviour, IMetaplayLifecycleDelegate, IPlayerModelClientListener\n    {\n        /// <summary>\n        /// Represents the state of the application.\n        /// </summary>\n        public enum ApplicationState\n        {\n            /// <summary>\n            /// Application is being started.\n            /// </summary>\n            AppStart,\n\n            /// <summary>\n            /// Connecting to the server. A real application would also load its assets here.\n            /// </summary>\n            Initializing,\n\n            /// <summary>\n            /// Session with server has been established and we're playing the game.\n            /// </summary>\n            Game,\n        }\n\n        // When connection to server is not established, display connection status.\n        public GameObject       ConnectionStatusCanvas;     // Canvas that contains the connection status info. Shown only when no active connection exists.\n        public Text             ConnectionStatusText;       // Text to display status of connection.\n        public Text             ConnectingSpinner;          // Spinner in connecting state.\n        public GameObject       ConnectionErrorPopup;       // Popup shown when a connection error happens.\n        public Text             ConnectionErrorInfoText;    // Info text within ConnectionErrorPopup describing the error.\n        public GameManager      GameManagerPrefab;          // Prefab for the in-game state, spawned when a session with the server is established.\n\n        // Runtime state\n        ApplicationState        _applicationState = ApplicationState.AppStart;  // Begin in the AppStart state.\n        GameManager             _gameManager;                                   // Instance of the GameManager, spawned when the player state is received from the server.\n\n        void Awake()\n        {\n            // When the app starts, make sure the connection error info is hidden.\n            ConnectionErrorPopup.SetActive(false);\n        }\n\n        void Start()\n        {\n            // Initialize Metaplay SDK.\n            MetaplayClient.Initialize(new MetaplayClientOptions\n            {\n                // Hook all the lifecycle and connectivity callbacks back to this class.\n                LifecycleDelegate = this,\n            });\n\n            // Switch to initializing state, to start connecting to the server.\n            SwitchToState(ApplicationState.Initializing);\n        }\n\n        void Update()\n        {\n            // Update Metaplay connections and game logic\n            MetaplayClient.Update();\n\n            // Update connection UI (visible when session is not active)\n            UpdateConnectionStatusUI();\n        }\n\n        /// <summary>\n        /// Switch the application's state and perform actions relevant to the state transition.\n        /// </summary>\n        /// <param name=\"newState\"></param>\n        void SwitchToState(ApplicationState newState)\n        {\n            Debug.Log($\"Switching to state {newState} (from {_applicationState})\");\n\n            switch (newState)\n            {\n                case ApplicationState.AppStart:\n                    // Cannot enter, app starts in this state.\n                    break;\n\n                case ApplicationState.Initializing:\n                    // Simulate the transition away from the Game scene by destroying the GameManager instance.\n                    // In addition to the Game scene, it's possible to arrive here from Initializing state itself,\n                    // in case the connection fails before a session was started. In that case there is no\n                    // GameManager instance.\n                    if (_gameManager != null)\n                    {\n                        Destroy(_gameManager.gameObject);\n                        _gameManager = null;\n                    }\n\n                    // Make sure connection error info is hidden.\n                    ConnectionErrorPopup.SetActive(false);\n\n                    // Start connecting to the server.\n                    MetaplayClient.Connect();\n                    break;\n\n                case ApplicationState.Game:\n                    // Make sure connection error info is hidden.\n                    ConnectionErrorPopup.SetActive(false);\n\n                    // Start the game. Simulate the transition to in-game state by spawning the GameManager.\n                    // You might want to use scene transition instead.\n                    _gameManager = Instantiate(GameManagerPrefab);\n                    break;\n            }\n\n            // Store the new state.\n            _applicationState = newState;\n        }\n\n        /// <summary>\n        /// When connection isn't yet established, show the status of connection.\n        /// </summary>\n        void UpdateConnectionStatusUI()\n        {\n            // Only show connectivity info if we don't have an established connection.\n            ConnectionStatusCanvas.SetActive(MetaplayClient.PlayerContext == null);\n\n            // Show connection status text & progress indicator.\n            ConnectionStatus connectionStatus = MetaplayClient.Connection.State.Status;\n            ConnectionStatusText.text = connectionStatus.ToString();\n            ConnectingSpinner.gameObject.SetActive(connectionStatus == ConnectionStatus.Connecting);\n            ConnectingSpinner.text = \"........\".Substring(0, (int)(Time.time * 3.0f) % 8);\n        }\n\n        /// <summary>\n        /// Handler for Reconnect button (shown after a connection attempt has failed).\n        /// </summary>\n        public void OnClickReconnect()\n        {\n            // Switch back to initializing state, to start reconnecting.\n            SwitchToState(ApplicationState.Initializing);\n        }\n\n        #region IMetaplayLifecycleDelegate\n\n        /// <summary>\n        /// A session has been successfully negotiated with the server. At this point, we also have the\n        /// relevant state initialized on the client, so we can move on to the game state.\n        /// </summary>\n        void IMetaplayLifecycleDelegate.OnSessionStarted()\n        {\n            // Hook up to updates in PlayerModel.\n            MetaplayClient.PlayerModel.ClientListener = this;\n\n            // Switch to the in-game state.\n            SwitchToState(ApplicationState.Game);\n\n            // At this point, the player state is available. For example, the following are now valid:\n            // Access player state members: MetaplayClient.PlayerModel.CurrentTime\n            // Execute player actions: MetaplayClient.PlayerContext.ExecuteAction(..);\n        }\n\n        /// <summary>\n        /// The current logical session has been lost and can no longer be resumed. This can happen for multiple\n        /// reasons, for example, if the network connection is dropped for a sufficient long time, or if the\n        /// application has been in the background for a long time, or if the server is in a maintenance mode.\n        ///\n        /// The application should react to this by showing a 'Connection Lost' dialog and present the player\n        /// with a 'Reconnect' button.\n        /// For some types of errors, it may be appropriate to omit the error popup, and auto-reconnect instead.\n        /// </summary>\n        /// <param name=\"connectionLost\">Information about why the session loss happened.</param>\n        void IMetaplayLifecycleDelegate.OnSessionLost(ConnectionLostEvent connectionLost)\n        {\n            if (connectionLost.AutoReconnectRecommended)\n            {\n                // For certain errors, we auto-reconnect straight away without\n                // prompting the player. Note that AutoReconnectRecommended is\n                // just a suggestion by the SDK and is based on the type of the\n                // error. The game does not have to obey the suggestion.\n                SwitchToState(ApplicationState.Initializing);\n            }\n            else\n            {\n                // Otherwise, show the connection error popup, with info text\n                // and a reconnect button.\n                // Despite losing the session, the game scene will linger until\n                // the player clicks on the reconnect button.\n                // MetaplayClient.PlayerModel is still available so that the\n                // game scene can continue to access it. It will remain available\n                // until the reconnection starts.\n                ShowConnectionErrorPopup(connectionLost);\n            }\n        }\n\n        /// <summary>\n        /// Metaplay failed to establish a session with the server. Show the connection error and 'Reconnect'\n        /// button so the player can try again.\n        /// </summary>\n        /// <param name=\"connectionLost\">Information about why the failure happened.</param>\n        void IMetaplayLifecycleDelegate.OnFailedToStartSession(ConnectionLostEvent connectionLost)\n        {\n            // Show the connection error popup, with info text and a reconnect button.\n            // Note that we're not in the game scene since the error occurred before\n            // the session was started. Furthermore, MetaplayClient.PlayerModel is\n            // unavailable.\n            ShowConnectionErrorPopup(connectionLost);\n        }\n\n        /// <summary>\n        /// Show a popup with the details of a connection/session error,\n        /// and a reconnect button.\n        /// </summary>\n        /// <param name=\"connectionLost\"></param>\n        void ShowConnectionErrorPopup(ConnectionLostEvent connectionLost)\n        {\n            ConnectionErrorInfoText.text = CreateConnectionLostInfoText(connectionLost);\n            ConnectionErrorPopup.SetActive(true);\n        }\n\n        /// <summary>\n        /// Convert a <see cref=\"ConnectionLostEvent\"/> into a human-readable string, for displaying in the UI.\n        /// This implementation shows quite a lot of technical detail which is useful for developers, but for\n        /// real players, you'd want to show something more compact.\n        /// </summary>\n        /// <param name=\"connectionLost\"></param>\n        /// <returns>Technical description of the connection loss event, mainly intended for developers.</returns>\n        static string CreateConnectionLostInfoText(ConnectionLostEvent connectionLost)\n        {\n            StringBuilder info = new StringBuilder();\n\n            // EnglishLocalizedReason and TechnicalErrorCode should typically be shown to players.\n            info.AppendLine($\"* Reason: {connectionLost.EnglishLocalizedReason}\");\n            info.AppendLine($\"* Technical code: {connectionLost.TechnicalErrorCode}\");\n\n            // TechnicalErrorString and ExtraTechnicalInfo are intended for analytics.\n            info.AppendLine();\n            info.AppendLine($\"* Technical error string: {connectionLost.TechnicalErrorString}\");\n            if (!string.IsNullOrEmpty(connectionLost.ExtraTechnicalInfo))\n                info.AppendLine($\"* Additional technical info: {connectionLost.ExtraTechnicalInfo}\");\n\n            // More detailed technical info that's mainly useful for developers.\n            info.AppendLine();\n            info.AppendLine($\"* Technical error: {PrettyPrint.Compact(connectionLost.TechnicalError)}\");\n\n            return info.ToString();\n        }\n\n        #endregion // IMetaplayLifecycleDelegate\n    }\n}\n"}, {"Path": "Assets/MetaplayHelloWorld/ApplicationStateManager.cs.meta", "Text": "fileFormatVersion: 2\nguid: 2ed3748f4de3f4d4f96651a9bf3e39ae\nMonoImporter:\n  externalObjects: {}\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/MetaplayHelloWorld/GameManager.cs", "Text": "using Game.Logic;\nusing Metaplay.Unity;\nusing UnityEngine;\nusing UnityEngine.UI;\n\n// This file contains Metaplay sample code. It can be adapted to suit your project's needs or you can\n// replace the functionality completely with your own.\nnamespace Metaplay.Sample\n{\n    /// <summary>\n    /// Represents the in-game application logic. Only gets spawned after a session has been\n    /// established with the server, so we can assume all the state has been setup already.\n    /// </summary>\n    public class GameManager : MonoBehaviour\n    {\n        public Text     NumClicksText;                      // Text to display the number of clicks so far.\n        public Button   ClickMeButton;                      // 'Click Me' button that invokes OnClickButton().\n        public Text     UnhealthyConnectionIndicator;       // Indicator to display when connection is in an unhealthy state.\n\n        void Update()\n        {\n            // Update the number of clicks on UI.\n            NumClicksText.text = MetaplayClient.PlayerModel.NumClicks.ToString();\n\n            // Show the unhealthy connection indicator.\n            bool connectionIsUnhealthy = MetaplayClient.ConnectionHealth == Metaplay.Unity.DefaultIntegration.ConnectionHealth.Unhealthy;\n            UnhealthyConnectionIndicator.gameObject.SetActive(connectionIsUnhealthy);\n        }\n\n        public void OnClickButton()\n        {\n            // Button was clicked, execute the action to bump PlayerModel.NumClicks (on client and server).\n            MetaplayClient.PlayerContext.ExecuteAction(new PlayerClickButton());\n        }\n    }\n}\n"}, {"Path": "Assets/MetaplayHelloWorld/GameManager.cs.meta", "Text": "fileFormatVersion: 2\nguid: 6c4c8b11b949cbf47a7ec9d6e5e11d3d\nMonoImporter:\n  externalObjects: {}\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/MetaplayHelloWorld/GameManager.prefab", "Text": "%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!1 &6016406064817157422\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 6016406064817157423}\n  - component: {fileID: 6016406064817157421}\n  - component: {fileID: 6016406064817157420}\n  m_Layer: 5\n  m_Name: Background\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &6016406064817157423\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406064817157422}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 6016406066536500953}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0, y: 0}\n  m_AnchorMax: {x: 1, y: 1}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 0, y: 0}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!222 &6016406064817157421\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406064817157422}\n  m_CullTransparentMesh: 1\n--- !u!114 &6016406064817157420\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406064817157422}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: fe87c0e1cc204ed48ad3b37840f39efc, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 0.45935676, g: 0.6539342, b: 0.9245283, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_Sprite: {fileID: 10907, guid: 0000000000000000f000000000000000, type: 0}\n  m_Type: 1\n  m_PreserveAspect: 0\n  m_FillCenter: 1\n  m_FillMethod: 4\n  m_FillAmount: 1\n  m_FillClockwise: 1\n  m_FillOrigin: 0\n  m_UseSpriteMesh: 0\n  m_PixelsPerUnitMultiplier: 1\n--- !u!1 &6016406065739904810\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 6016406065739904811}\n  - component: {fileID: 6016406065739904822}\n  - component: {fileID: 6016406065739904809}\n  - component: {fileID: 6016406065739904808}\n  m_Layer: 5\n  m_Name: ClickMeButton\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &6016406065739904811\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406065739904810}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children:\n  - {fileID: 6016406066490991685}\n  m_Father: {fileID: 6016406066536500953}\n  m_RootOrder: 2\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0, y: -13.9}\n  m_SizeDelta: {x: 160, y: 42.1937}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!222 &6016406065739904822\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406065739904810}\n  m_CullTransparentMesh: 1\n--- !u!114 &6016406065739904809\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406065739904810}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: fe87c0e1cc204ed48ad3b37840f39efc, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_Sprite: {fileID: 10905, guid: 0000000000000000f000000000000000, type: 0}\n  m_Type: 1\n  m_PreserveAspect: 0\n  m_FillCenter: 1\n  m_FillMethod: 4\n  m_FillAmount: 1\n  m_FillClockwise: 1\n  m_FillOrigin: 0\n  m_UseSpriteMesh: 0\n  m_PixelsPerUnitMultiplier: 1\n--- !u!114 &6016406065739904808\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406065739904810}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 4e29b1a8efbd4b44bb3f3716e73f07ff, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Navigation:\n    m_Mode: 3\n    m_WrapAround: 0\n    m_SelectOnUp: {fileID: 0}\n    m_SelectOnDown: {fileID: 0}\n    m_SelectOnLeft: {fileID: 0}\n    m_SelectOnRight: {fileID: 0}\n  m_Transition: 1\n  m_Colors:\n    m_NormalColor: {r: 1, g: 1, b: 1, a: 1}\n    m_HighlightedColor: {r: 0.9607843, g: 0.9607843, b: 0.9607843, a: 1}\n    m_PressedColor: {r: 0.78431374, g: 0.78431374, b: 0.78431374, a: 1}\n    m_SelectedColor: {r: 0.9607843, g: 0.9607843, b: 0.9607843, a: 1}\n    m_DisabledColor: {r: 0.78431374, g: 0.78431374, b: 0.78431374, a: 0.5019608}\n    m_ColorMultiplier: 1\n    m_FadeDuration: 0.1\n  m_SpriteState:\n    m_HighlightedSprite: {fileID: 0}\n    m_PressedSprite: {fileID: 0}\n    m_SelectedSprite: {fileID: 0}\n    m_DisabledSprite: {fileID: 0}\n  m_AnimationTriggers:\n    m_NormalTrigger: Normal\n    m_HighlightedTrigger: Highlighted\n    m_PressedTrigger: Pressed\n    m_SelectedTrigger: Selected\n    m_DisabledTrigger: Disabled\n  m_Interactable: 1\n  m_TargetGraphic: {fileID: 6016406065739904809}\n  m_OnClick:\n    m_PersistentCalls:\n      m_Calls:\n      - m_Target: {fileID: 6016406066275579136}\n        m_TargetAssemblyTypeName: GameManager, Assembly-CSharp\n        m_MethodName: OnClickButton\n        m_Mode: 1\n        m_Arguments:\n          m_ObjectArgument: {fileID: 0}\n          m_ObjectArgumentAssemblyTypeName: UnityEngine.Object, UnityEngine\n          m_IntArgument: 0\n          m_FloatArgument: 0\n          m_StringArgument: \n          m_BoolArgument: 0\n        m_CallState: 2\n--- !u!1 &6016406066037551111\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 6016406066037551106}\n  - component: {fileID: 6016406066037551109}\n  - component: {fileID: 6016406066037551108}\n  m_Layer: 5\n  m_Name: Unhealthy Connection Indicator\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 0\n--- !u!224 &6016406066037551106\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066037551111}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 6016406066536500953}\n  m_RootOrder: 3\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0, y: -83}\n  m_SizeDelta: {x: 210, y: 30}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!222 &6016406066037551109\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066037551111}\n  m_CullTransparentMesh: 1\n--- !u!114 &6016406066037551108\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066037551111}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 0.54901963, g: 0.14901961, b: 0.039215688, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 18\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 0\n    m_MaxSize: 40\n    m_Alignment: 1\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 0\n    m_VerticalOverflow: 0\n    m_LineSpacing: 1\n  m_Text: Connection is unhealthy!\n--- !u!1 &6016406066275579139\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 6016406066275579137}\n  - component: {fileID: 6016406066275579136}\n  m_Layer: 0\n  m_Name: GameManager\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!4 &6016406066275579137\nTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066275579139}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children:\n  - {fileID: 6016406066536500953}\n  m_Father: {fileID: 0}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n--- !u!114 &6016406066275579136\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066275579139}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 6c4c8b11b949cbf47a7ec9d6e5e11d3d, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  NumClicksText: {fileID: 6016406066582240670}\n  ClickMeButton: {fileID: 6016406065739904808}\n  UnhealthyConnectionIndicator: {fileID: 6016406066037551108}\n--- !u!1 &6016406066490991684\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 6016406066490991685}\n  - component: {fileID: 6016406066490991683}\n  - component: {fileID: 6016406066490991682}\n  m_Layer: 5\n  m_Name: Text\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &6016406066490991685\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066490991684}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 6016406065739904811}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0, y: 0}\n  m_AnchorMax: {x: 1, y: 1}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 0, y: 0}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!222 &6016406066490991683\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066490991684}\n  m_CullTransparentMesh: 1\n--- !u!114 &6016406066490991682\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066490991684}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 0.19607843, g: 0.19607843, b: 0.19607843, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 22\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 2\n    m_MaxSize: 40\n    m_Alignment: 4\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 0\n    m_VerticalOverflow: 0\n    m_LineSpacing: 1\n  m_Text: Click Me\n--- !u!1 &6016406066536500957\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 6016406066536500953}\n  - component: {fileID: 6016406066536500952}\n  - component: {fileID: 6016406066536500955}\n  - component: {fileID: 6016406066536500954}\n  m_Layer: 5\n  m_Name: Canvas\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &6016406066536500953\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066536500957}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 0, y: 0, z: 0}\n  m_Children:\n  - {fileID: 6016406064817157423}\n  - {fileID: 6016406066582240657}\n  - {fileID: 6016406065739904811}\n  - {fileID: 6016406066037551106}\n  m_Father: {fileID: 6016406066275579137}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0, y: 0}\n  m_AnchorMax: {x: 0, y: 0}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 0, y: 0}\n  m_Pivot: {x: 0, y: 0}\n--- !u!223 &6016406066536500952\nCanvas:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066536500957}\n  m_Enabled: 1\n  serializedVersion: 3\n  m_RenderMode: 0\n  m_Camera: {fileID: 0}\n  m_PlaneDistance: 100\n  m_PixelPerfect: 0\n  m_ReceivesEvents: 1\n  m_OverrideSorting: 0\n  m_OverridePixelPerfect: 0\n  m_SortingBucketNormalizedSize: 0\n  m_AdditionalShaderChannelsFlag: 0\n  m_SortingLayerID: 0\n  m_SortingOrder: 0\n  m_TargetDisplay: 0\n--- !u!114 &6016406066536500955\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066536500957}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 0cd44c1031e13a943bb63640046fad76, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_UiScaleMode: 1\n  m_ReferencePixelsPerUnit: 100\n  m_ScaleFactor: 1\n  m_ReferenceResolution: {x: 600, y: 600}\n  m_ScreenMatchMode: 0\n  m_MatchWidthOrHeight: 0.425\n  m_PhysicalUnit: 3\n  m_FallbackScreenDPI: 96\n  m_DefaultSpriteDPI: 96\n  m_DynamicPixelsPerUnit: 1\n  m_PresetInfoIsWorld: 0\n--- !u!114 &6016406066536500954\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066536500957}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: dc42784cf147c0c48a680349fa168899, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_IgnoreReversedGraphics: 1\n  m_BlockingObjects: 0\n  m_BlockingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n--- !u!1 &6016406066582240656\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 6016406066582240657}\n  - component: {fileID: 6016406066582240671}\n  - component: {fileID: 6016406066582240670}\n  m_Layer: 5\n  m_Name: NumClicks\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &6016406066582240657\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066582240656}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_Children: []\n  m_Father: {fileID: 6016406066536500953}\n  m_RootOrder: 1\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0, y: 43.8}\n  m_SizeDelta: {x: 116.4512, y: 30}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!222 &6016406066582240671\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066582240656}\n  m_CullTransparentMesh: 1\n--- !u!114 &6016406066582240670\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 6016406066582240656}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 26\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 2\n    m_MaxSize: 40\n    m_Alignment: 1\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 0\n    m_VerticalOverflow: 0\n    m_LineSpacing: 1\n  m_Text: 0\n"}, {"Path": "Assets/MetaplayHelloWorld/GameManager.prefab.meta", "Text": "fileFormatVersion: 2\nguid: b7c42d253b6e6a74bb01a32e238bbd47\nPrefabImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/MetaplayHelloWorld/HelloWorldScene.unity", "Text": "%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!29 &1\nOcclusionCullingSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 2\n  m_OcclusionBakeSettings:\n    smallestOccluder: 5\n    smallestHole: 0.25\n    backfaceThreshold: 100\n  m_SceneGUID: 00000000000000000000000000000000\n  m_OcclusionCullingData: {fileID: 0}\n--- !u!104 &2\nRenderSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 9\n  m_Fog: 0\n  m_FogColor: {r: 0.5, g: 0.5, b: 0.5, a: 1}\n  m_FogMode: 3\n  m_FogDensity: 0.01\n  m_LinearFogStart: 0\n  m_LinearFogEnd: 300\n  m_AmbientSkyColor: {r: 0.212, g: 0.227, b: 0.259, a: 1}\n  m_AmbientEquatorColor: {r: 0.114, g: 0.125, b: 0.133, a: 1}\n  m_AmbientGroundColor: {r: 0.047, g: 0.043, b: 0.035, a: 1}\n  m_AmbientIntensity: 1\n  m_AmbientMode: 3\n  m_SubtractiveShadowColor: {r: 0.42, g: 0.478, b: 0.627, a: 1}\n  m_SkyboxMaterial: {fileID: 0}\n  m_HaloStrength: 0.5\n  m_FlareStrength: 1\n  m_FlareFadeSpeed: 3\n  m_HaloTexture: {fileID: 0}\n  m_SpotCookie: {fileID: 10001, guid: 0000000000000000e000000000000000, type: 0}\n  m_DefaultReflectionMode: 0\n  m_DefaultReflectionResolution: 128\n  m_ReflectionBounces: 1\n  m_ReflectionIntensity: 1\n  m_CustomReflection: {fileID: 0}\n  m_Sun: {fileID: 0}\n  m_IndirectSpecularColor: {r: 0, g: 0, b: 0, a: 1}\n  m_UseRadianceAmbientProbe: 0\n--- !u!157 &3\nLightmapSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 12\n  m_GIWorkflowMode: 1\n  m_GISettings:\n    serializedVersion: 2\n    m_BounceScale: 1\n    m_IndirectOutputScale: 1\n    m_AlbedoBoost: 1\n    m_EnvironmentLightingMode: 0\n    m_EnableBakedLightmaps: 0\n    m_EnableRealtimeLightmaps: 0\n  m_LightmapEditorSettings:\n    serializedVersion: 12\n    m_Resolution: 2\n    m_BakeResolution: 40\n    m_AtlasSize: 1024\n    m_AO: 0\n    m_AOMaxDistance: 1\n    m_CompAOExponent: 1\n    m_CompAOExponentDirect: 0\n    m_ExtractAmbientOcclusion: 0\n    m_Padding: 2\n    m_LightmapParameters: {fileID: 0}\n    m_LightmapsBakeMode: 1\n    m_TextureCompression: 1\n    m_FinalGather: 0\n    m_FinalGatherFiltering: 1\n    m_FinalGatherRayCount: 256\n    m_ReflectionCompression: 2\n    m_MixedBakeMode: 2\n    m_BakeBackend: 1\n    m_PVRSampling: 1\n    m_PVRDirectSampleCount: 32\n    m_PVRSampleCount: 512\n    m_PVRBounces: 2\n    m_PVREnvironmentSampleCount: 256\n    m_PVREnvironmentReferencePointCount: 2048\n    m_PVRFilteringMode: 1\n    m_PVRDenoiserTypeDirect: 1\n    m_PVRDenoiserTypeIndirect: 1\n    m_PVRDenoiserTypeAO: 1\n    m_PVRFilterTypeDirect: 0\n    m_PVRFilterTypeIndirect: 0\n    m_PVRFilterTypeAO: 0\n    m_PVREnvironmentMIS: 1\n    m_PVRCulling: 1\n    m_PVRFilteringGaussRadiusDirect: 1\n    m_PVRFilteringGaussRadiusIndirect: 5\n    m_PVRFilteringGaussRadiusAO: 2\n    m_PVRFilteringAtrousPositionSigmaDirect: 0.5\n    m_PVRFilteringAtrousPositionSigmaIndirect: 2\n    m_PVRFilteringAtrousPositionSigmaAO: 1\n    m_ExportTrainingData: 0\n    m_TrainingDataDestination: TrainingData\n    m_LightProbeSampleCountMultiplier: 4\n  m_LightingDataAsset: {fileID: 0}\n  m_LightingSettings: {fileID: 0}\n--- !u!196 &4\nNavMeshSettings:\n  serializedVersion: 2\n  m_ObjectHideFlags: 0\n  m_BuildSettings:\n    serializedVersion: 2\n    agentTypeID: 0\n    agentRadius: 0.5\n    agentHeight: 2\n    agentSlope: 45\n    agentClimb: 0.4\n    ledgeDropHeight: 0\n    maxJumpAcrossDistance: 0\n    minRegionArea: 2\n    manualCellSize: 0\n    cellSize: 0.16666667\n    manualTileSize: 0\n    tileSize: 256\n    accuratePlacement: 0\n    maxJobWorkers: 0\n    preserveTilesOutsideBounds: 0\n    debug:\n      m_Flags: 0\n  m_NavMeshData: {fileID: 0}\n--- !u!1 &36825394\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 36825395}\n  - component: {fileID: 36825397}\n  - component: {fileID: 36825396}\n  m_Layer: 5\n  m_Name: Background\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &36825395\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 36825394}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children:\n  - {fileID: 1935766925}\n  - {fileID: 802356000}\n  m_Father: {fileID: 1981340133}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0, y: 0}\n  m_AnchorMax: {x: 1, y: 1}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 0, y: 0}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!114 &36825396\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 36825394}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: fe87c0e1cc204ed48ad3b37840f39efc, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 0.45935676, g: 0.6539342, b: 0.9245283, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_Sprite: {fileID: 10907, guid: 0000000000000000f000000000000000, type: 0}\n  m_Type: 1\n  m_PreserveAspect: 0\n  m_FillCenter: 1\n  m_FillMethod: 4\n  m_FillAmount: 1\n  m_FillClockwise: 1\n  m_FillOrigin: 0\n  m_UseSpriteMesh: 0\n  m_PixelsPerUnitMultiplier: 1\n--- !u!222 &36825397\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 36825394}\n  m_CullTransparentMesh: 1\n--- !u!1 &93842852\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 93842853}\n  - component: {fileID: 93842855}\n  - component: {fileID: 93842854}\n  m_Layer: 5\n  m_Name: Text\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &93842853\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 93842852}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children: []\n  m_Father: {fileID: 1650416390}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0, y: 0}\n  m_AnchorMax: {x: 1, y: 1}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 0, y: 0}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!114 &93842854\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 93842852}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 0.19607843, g: 0.19607843, b: 0.19607843, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 22\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 2\n    m_MaxSize: 40\n    m_Alignment: 4\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 0\n    m_VerticalOverflow: 0\n    m_LineSpacing: 1\n  m_Text: Reconnect\n--- !u!222 &93842855\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 93842852}\n  m_CullTransparentMesh: 1\n--- !u!1 &267486408\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 267486410}\n  - component: {fileID: 267486409}\n  - component: {fileID: 267486411}\n  - component: {fileID: 267486412}\n  m_Layer: 0\n  m_Name: ApplicationManager\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!114 &267486409\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 267486408}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 2ed3748f4de3f4d4f96651a9bf3e39ae, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  ConnectionStatusCanvas: {fileID: 1981340132}\n  ConnectionStatusText: {fileID: 1935766927}\n  ConnectingSpinner: {fileID: 802356001}\n  ConnectionErrorPopup: {fileID: 1635946924}\n  ConnectionErrorInfoText: {fileID: 766150483}\n  GameManagerPrefab: {fileID: 6016406066275579136, guid: b7c42d253b6e6a74bb01a32e238bbd47, type: 3}\n  ActiveEnvironment: 0\n--- !u!4 &267486410\nTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 267486408}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 396.6056, y: 226.04366, z: -50.909866}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children:\n  - {fileID: 1981340133}\n  - {fileID: 1635946925}\n  m_Father: {fileID: 0}\n  m_RootOrder: 1\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n--- !u!114 &267486411\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 267486408}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: df91b0554d0606947bd1eed145e68aa8, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  _simulatedLinkQuality: 0\n  _appearAsPlatform: 0\n--- !u!114 &267486412\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 267486408}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 0f61d1d52fef9514db4568354cdba177, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  ImportPlayer: \n--- !u!1 &682160937\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 682160940}\n  - component: {fileID: 682160939}\n  - component: {fileID: 682160938}\n  m_Layer: 0\n  m_Name: Main Camera\n  m_TagString: MainCamera\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!81 &682160938\nAudioListener:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 682160937}\n  m_Enabled: 1\n--- !u!20 &682160939\nCamera:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 682160937}\n  m_Enabled: 1\n  serializedVersion: 2\n  m_ClearFlags: 1\n  m_BackGroundColor: {r: 0.19215687, g: 0.3019608, b: 0.4745098, a: 0}\n  m_projectionMatrixMode: 1\n  m_GateFitMode: 2\n  m_FOVAxisMode: 0\n  m_SensorSize: {x: 36, y: 24}\n  m_LensShift: {x: 0, y: 0}\n  m_FocalLength: 50\n  m_NormalizedViewPortRect:\n    serializedVersion: 2\n    x: 0\n    y: 0\n    width: 1\n    height: 1\n  near clip plane: 0.3\n  far clip plane: 1000\n  field of view: 60\n  orthographic: 1\n  orthographic size: 5\n  m_Depth: -1\n  m_CullingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n  m_RenderingPath: -1\n  m_TargetTexture: {fileID: 0}\n  m_TargetDisplay: 0\n  m_TargetEye: 3\n  m_HDR: 1\n  m_AllowMSAA: 1\n  m_AllowDynamicResolution: 0\n  m_ForceIntoRT: 0\n  m_OcclusionCulling: 1\n  m_StereoConvergence: 10\n  m_StereoSeparation: 0.022\n--- !u!4 &682160940\nTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 682160937}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: -10}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children: []\n  m_Father: {fileID: 0}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n--- !u!1 &766150481\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 766150482}\n  - component: {fileID: 766150484}\n  - component: {fileID: 766150483}\n  m_Layer: 5\n  m_Name: Connection Error Info\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &766150482\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 766150481}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children: []\n  m_Father: {fileID: 1511498391}\n  m_RootOrder: 2\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0, y: 6}\n  m_SizeDelta: {x: 343.8395, y: 134.2029}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!114 &766150483\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 766150481}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 0.5471698, g: 0.14710802, b: 0.038714837, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 12\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 1\n    m_MaxSize: 40\n    m_Alignment: 0\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 0\n    m_VerticalOverflow: 0\n    m_LineSpacing: 1\n  m_Text: (connection lost info)\n--- !u!222 &766150484\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 766150481}\n  m_CullTransparentMesh: 1\n--- !u!1 &802355999\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 802356000}\n  - component: {fileID: 802356002}\n  - component: {fileID: 802356001}\n  m_Layer: 5\n  m_Name: Connecting Spinner\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &802356000\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 802355999}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children: []\n  m_Father: {fileID: 36825395}\n  m_RootOrder: 1\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0, y: 26.9}\n  m_SizeDelta: {x: 78.3501, y: 14.4105}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!114 &802356001\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 802355999}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 26\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 2\n    m_MaxSize: 40\n    m_Alignment: 7\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 1\n    m_VerticalOverflow: 1\n    m_LineSpacing: 1\n  m_Text: ...\n--- !u!222 &802356002\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 802355999}\n  m_CullTransparentMesh: 1\n--- !u!1 &1044551695\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 1044551698}\n  - component: {fileID: 1044551697}\n  - component: {fileID: 1044551696}\n  m_Layer: 0\n  m_Name: EventSystem\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!114 &1044551696\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1044551695}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 4f231c4fb786f3946a6b90b886c48677, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_HorizontalAxis: Horizontal\n  m_VerticalAxis: Vertical\n  m_SubmitButton: Submit\n  m_CancelButton: Cancel\n  m_InputActionsPerSecond: 10\n  m_RepeatDelay: 0.5\n  m_ForceModuleActive: 0\n--- !u!114 &1044551697\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1044551695}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 76c392e42b5098c458856cdf6ecaaaa1, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_FirstSelected: {fileID: 0}\n  m_sendNavigationEvents: 1\n  m_DragThreshold: 10\n--- !u!4 &1044551698\nTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1044551695}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children: []\n  m_Father: {fileID: 0}\n  m_RootOrder: 2\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n--- !u!1 &1511498390\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 1511498391}\n  - component: {fileID: 1511498393}\n  - component: {fileID: 1511498392}\n  m_Layer: 5\n  m_Name: Background\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &1511498391\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1511498390}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children:\n  - {fileID: 1865048903}\n  - {fileID: 1650416390}\n  - {fileID: 766150482}\n  m_Father: {fileID: 1635946925}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 400, y: 300}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!114 &1511498392\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1511498390}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: fe87c0e1cc204ed48ad3b37840f39efc, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 0.33708617, g: 0.59580237, b: 0.9528302, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_Sprite: {fileID: 10907, guid: 0000000000000000f000000000000000, type: 0}\n  m_Type: 1\n  m_PreserveAspect: 0\n  m_FillCenter: 1\n  m_FillMethod: 4\n  m_FillAmount: 1\n  m_FillClockwise: 1\n  m_FillOrigin: 0\n  m_UseSpriteMesh: 0\n  m_PixelsPerUnitMultiplier: 1\n--- !u!222 &1511498393\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1511498390}\n  m_CullTransparentMesh: 1\n--- !u!1 &1635946924\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 1635946925}\n  - component: {fileID: 1635946929}\n  - component: {fileID: 1635946928}\n  - component: {fileID: 1635946927}\n  m_Layer: 5\n  m_Name: Connection Error Popup\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 0\n--- !u!224 &1635946925\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1635946924}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 0, y: 0, z: 0}\n  m_ConstrainProportionsScale: 0\n  m_Children:\n  - {fileID: 1511498391}\n  m_Father: {fileID: 267486410}\n  m_RootOrder: 1\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0, y: 0}\n  m_AnchorMax: {x: 0, y: 0}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 0, y: 0}\n  m_Pivot: {x: 0, y: 0}\n--- !u!114 &1635946927\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1635946924}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: dc42784cf147c0c48a680349fa168899, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_IgnoreReversedGraphics: 1\n  m_BlockingObjects: 0\n  m_BlockingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n--- !u!114 &1635946928\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1635946924}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 0cd44c1031e13a943bb63640046fad76, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_UiScaleMode: 1\n  m_ReferencePixelsPerUnit: 100\n  m_ScaleFactor: 1\n  m_ReferenceResolution: {x: 600, y: 600}\n  m_ScreenMatchMode: 0\n  m_MatchWidthOrHeight: 0.425\n  m_PhysicalUnit: 3\n  m_FallbackScreenDPI: 96\n  m_DefaultSpriteDPI: 96\n  m_DynamicPixelsPerUnit: 1\n  m_PresetInfoIsWorld: 0\n--- !u!223 &1635946929\nCanvas:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1635946924}\n  m_Enabled: 1\n  serializedVersion: 3\n  m_RenderMode: 0\n  m_Camera: {fileID: 0}\n  m_PlaneDistance: 100\n  m_PixelPerfect: 0\n  m_ReceivesEvents: 1\n  m_OverrideSorting: 0\n  m_OverridePixelPerfect: 0\n  m_SortingBucketNormalizedSize: 0\n  m_AdditionalShaderChannelsFlag: 0\n  m_SortingLayerID: 0\n  m_SortingOrder: 1000\n  m_TargetDisplay: 0\n--- !u!1 &1650416389\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 1650416390}\n  - component: {fileID: 1650416393}\n  - component: {fileID: 1650416392}\n  - component: {fileID: 1650416391}\n  m_Layer: 5\n  m_Name: Reconnect Button\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &1650416390\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1650416389}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children:\n  - {fileID: 93842853}\n  m_Father: {fileID: 1511498391}\n  m_RootOrder: 1\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0, y: -94.2}\n  m_SizeDelta: {x: 160, y: 42.1937}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!114 &1650416391\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1650416389}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 4e29b1a8efbd4b44bb3f3716e73f07ff, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Navigation:\n    m_Mode: 3\n    m_WrapAround: 0\n    m_SelectOnUp: {fileID: 0}\n    m_SelectOnDown: {fileID: 0}\n    m_SelectOnLeft: {fileID: 0}\n    m_SelectOnRight: {fileID: 0}\n  m_Transition: 1\n  m_Colors:\n    m_NormalColor: {r: 1, g: 1, b: 1, a: 1}\n    m_HighlightedColor: {r: 0.9607843, g: 0.9607843, b: 0.9607843, a: 1}\n    m_PressedColor: {r: 0.78431374, g: 0.78431374, b: 0.78431374, a: 1}\n    m_SelectedColor: {r: 0.9607843, g: 0.9607843, b: 0.9607843, a: 1}\n    m_DisabledColor: {r: 0.78431374, g: 0.78431374, b: 0.78431374, a: 0.5019608}\n    m_ColorMultiplier: 1\n    m_FadeDuration: 0.1\n  m_SpriteState:\n    m_HighlightedSprite: {fileID: 0}\n    m_PressedSprite: {fileID: 0}\n    m_SelectedSprite: {fileID: 0}\n    m_DisabledSprite: {fileID: 0}\n  m_AnimationTriggers:\n    m_NormalTrigger: Normal\n    m_HighlightedTrigger: Highlighted\n    m_PressedTrigger: Pressed\n    m_SelectedTrigger: Selected\n    m_DisabledTrigger: Disabled\n  m_Interactable: 1\n  m_TargetGraphic: {fileID: 1650416392}\n  m_OnClick:\n    m_PersistentCalls:\n      m_Calls:\n      - m_Target: {fileID: 267486409}\n        m_TargetAssemblyTypeName: ApplicationStateManager, Assembly-CSharp\n        m_MethodName: OnClickReconnect\n        m_Mode: 1\n        m_Arguments:\n          m_ObjectArgument: {fileID: 0}\n          m_ObjectArgumentAssemblyTypeName: UnityEngine.Object, UnityEngine\n          m_IntArgument: 0\n          m_FloatArgument: 0\n          m_StringArgument: \n          m_BoolArgument: 0\n        m_CallState: 2\n--- !u!114 &1650416392\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1650416389}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: fe87c0e1cc204ed48ad3b37840f39efc, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_Sprite: {fileID: 10905, guid: 0000000000000000f000000000000000, type: 0}\n  m_Type: 1\n  m_PreserveAspect: 0\n  m_FillCenter: 1\n  m_FillMethod: 4\n  m_FillAmount: 1\n  m_FillClockwise: 1\n  m_FillOrigin: 0\n  m_UseSpriteMesh: 0\n  m_PixelsPerUnitMultiplier: 1\n--- !u!222 &1650416393\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1650416389}\n  m_CullTransparentMesh: 1\n--- !u!1 &1865048902\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 1865048903}\n  - component: {fileID: 1865048905}\n  - component: {fileID: 1865048904}\n  m_Layer: 5\n  m_Name: Title\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &1865048903\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1865048902}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children: []\n  m_Father: {fileID: 1511498391}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0.0000014305, y: 100.7}\n  m_SizeDelta: {x: 210.8202, y: 30}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!114 &1865048904\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1865048902}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 26\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 2\n    m_MaxSize: 40\n    m_Alignment: 1\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 0\n    m_VerticalOverflow: 0\n    m_LineSpacing: 1\n  m_Text: 'Connection Error!\n\n'\n--- !u!222 &1865048905\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1865048902}\n  m_CullTransparentMesh: 1\n--- !u!1 &1935766924\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 1935766925}\n  - component: {fileID: 1935766926}\n  - component: {fileID: 1935766927}\n  m_Layer: 5\n  m_Name: Connection Status\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &1935766925\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1935766924}\n  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 1, y: 1, z: 1}\n  m_ConstrainProportionsScale: 0\n  m_Children: []\n  m_Father: {fileID: 36825395}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0.5, y: 0.5}\n  m_AnchorMax: {x: 0.5, y: 0.5}\n  m_AnchoredPosition: {x: 0.0000014305, y: 55.699986}\n  m_SizeDelta: {x: 210.8202, y: 30}\n  m_Pivot: {x: 0.5, y: 0.5}\n--- !u!222 &1935766926\nCanvasRenderer:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1935766924}\n  m_CullTransparentMesh: 1\n--- !u!114 &1935766927\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1935766924}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 5f7201a12d95ffc409449d95f23cf332, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_Material: {fileID: 0}\n  m_Color: {r: 1, g: 1, b: 1, a: 1}\n  m_RaycastTarget: 1\n  m_RaycastPadding: {x: 0, y: 0, z: 0, w: 0}\n  m_Maskable: 1\n  m_OnCullStateChanged:\n    m_PersistentCalls:\n      m_Calls: []\n  m_FontData:\n    m_Font: {fileID: 10102, guid: 0000000000000000e000000000000000, type: 0}\n    m_FontSize: 26\n    m_FontStyle: 0\n    m_BestFit: 0\n    m_MinSize: 2\n    m_MaxSize: 40\n    m_Alignment: 1\n    m_AlignByGeometry: 0\n    m_RichText: 1\n    m_HorizontalOverflow: 0\n    m_VerticalOverflow: 0\n    m_LineSpacing: 1\n  m_Text: (status)\n--- !u!1 &1981340132\nGameObject:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  serializedVersion: 6\n  m_Component:\n  - component: {fileID: 1981340133}\n  - component: {fileID: 1981340136}\n  - component: {fileID: 1981340135}\n  - component: {fileID: 1981340134}\n  m_Layer: 5\n  m_Name: Connection Status Canvas\n  m_TagString: Untagged\n  m_Icon: {fileID: 0}\n  m_NavMeshLayer: 0\n  m_StaticEditorFlags: 0\n  m_IsActive: 1\n--- !u!224 &1981340133\nRectTransform:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1981340132}\n  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n  m_LocalPosition: {x: 0, y: 0, z: 0}\n  m_LocalScale: {x: 0, y: 0, z: 0}\n  m_ConstrainProportionsScale: 0\n  m_Children:\n  - {fileID: 36825395}\n  m_Father: {fileID: 267486410}\n  m_RootOrder: 0\n  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n  m_AnchorMin: {x: 0, y: 0}\n  m_AnchorMax: {x: 0, y: 0}\n  m_AnchoredPosition: {x: 0, y: 0}\n  m_SizeDelta: {x: 0, y: 0}\n  m_Pivot: {x: 0, y: 0}\n--- !u!114 &1981340134\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1981340132}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: dc42784cf147c0c48a680349fa168899, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_IgnoreReversedGraphics: 1\n  m_BlockingObjects: 0\n  m_BlockingMask:\n    serializedVersion: 2\n    m_Bits: 4294967295\n--- !u!114 &1981340135\nMonoBehaviour:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1981340132}\n  m_Enabled: 1\n  m_EditorHideFlags: 0\n  m_Script: {fileID: 11500000, guid: 0cd44c1031e13a943bb63640046fad76, type: 3}\n  m_Name: \n  m_EditorClassIdentifier: \n  m_UiScaleMode: 1\n  m_ReferencePixelsPerUnit: 100\n  m_ScaleFactor: 1\n  m_ReferenceResolution: {x: 600, y: 600}\n  m_ScreenMatchMode: 0\n  m_MatchWidthOrHeight: 0.425\n  m_PhysicalUnit: 3\n  m_FallbackScreenDPI: 96\n  m_DefaultSpriteDPI: 96\n  m_DynamicPixelsPerUnit: 1\n  m_PresetInfoIsWorld: 0\n--- !u!223 &1981340136\nCanvas:\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_GameObject: {fileID: 1981340132}\n  m_Enabled: 1\n  serializedVersion: 3\n  m_RenderMode: 0\n  m_Camera: {fileID: 0}\n  m_PlaneDistance: 100\n  m_PixelPerfect: 0\n  m_ReceivesEvents: 1\n  m_OverrideSorting: 0\n  m_OverridePixelPerfect: 0\n  m_SortingBucketNormalizedSize: 0\n  m_AdditionalShaderChannelsFlag: 0\n  m_SortingLayerID: 0\n  m_SortingOrder: 0\n  m_TargetDisplay: 0\n"}, {"Path": "Assets/MetaplayHelloWorld/HelloWorldScene.unity.meta", "Text": "fileFormatVersion: 2\nguid: 10f296fba72a88b439d9c8c82961a1aa\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/SharedCode.meta", "Text": "fileFormatVersion: 2\nguid: f99c5bee59751a54eb406557ada2b5e9\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/SharedCode/GameConfigs.meta", "Text": "\ufefffileFormatVersion: 2\nguid: 809e149705ab4b6090c94dbc38420d20\ntimeCreated: 1715755208"}, {"Path": "Assets/SharedCode/GameConfigs/MyGameConfigBuildIntegration.cs", "Text": "\ufeffusing System.Collections.Generic;\nusing Metaplay.Core.Config;\n\nnamespace Game.Logic.GameConfigs\n{\n    /// <summary>\n    /// This is the integration hook for Game config and localization builds.\n    /// We recommend implementing <see cref=\"GetAvailableLocalizationsBuildSources\"/> and\n    /// <see cref=\"GetAvailableGameConfigBuildSources\"/> to enable dashboard builds and share sources in the project.\n    /// </summary>\n    public class MyGameGameConfigBuildIntegration : GameConfigBuildIntegration\n    {\n        public override IEnumerable<GameConfigBuildSource> GetAvailableLocalizationsBuildSources(string sourcePropertyInBuildParams)\n        {\n            // Return the predefined build sources here, for example:\n            // return new GameConfigBuildSource[] { new GoogleSheetBuildSource(\"Development\", \"SPREADSHEET_ID\") };\n            // Note that Google Sheets require going through the setup https://docs.metaplay.io/feature-cookbooks/game-configs/implementing-google-sheets-integration.html\n            return base.GetAvailableLocalizationsBuildSources(sourcePropertyInBuildParams);\n        }\n\n        public override IEnumerable<GameConfigBuildSource> GetAvailableGameConfigBuildSources(string sourcePropertyInBuildParams)\n        {\n            // Return the predefined build sources here, for example:\n            // return new GameConfigBuildSource[] { new GoogleSheetBuildSource(\"Development\", \"SPREADSHEET_ID\") };\n            // Note that Google Sheets require going through the setup https://docs.metaplay.io/feature-cookbooks/game-configs/implementing-google-sheets-integration.html\n            return base.GetAvailableGameConfigBuildSources(sourcePropertyInBuildParams);\n        }\n    }\n}"}, {"Path": "Assets/SharedCode/GameConfigs/MyGameConfigBuildIntegration.cs.meta", "Text": "\ufefffileFormatVersion: 2\nguid: 76f31a5c057b442583442f27e35ea4de\ntimeCreated: 1715755217"}, {"Path": "Assets/SharedCode/GlobalOptions.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Metaplay.Core;\nusing Metaplay.Core.Localization;\n\nnamespace Game.Logic\n{\n    public class GlobalOptions : IMetaplayCoreOptionsProvider\n    {\n        /// <summary>\n        /// Game-specific constant options for core Metaplay SDK.\n        /// </summary>\n        public MetaplayCoreOptions Options { get; } = new MetaplayCoreOptions(\n            projectName:            \"HelloWorld\",\n            supportedLogicVersions: new MetaVersionRange(1, 1),\n            clientLogicVersion:     1,\n            guildInviteCodeSalt:    0x17,\n            sharedNamespaces:       new string[] { \"Game.Logic\" },\n            defaultLanguage:        LanguageId.FromString(\"en\"),\n            featureFlags: new MetaplayFeatureFlags\n            {\n                EnableLocalizations = false\n            });\n    }\n}\n"}, {"Path": "Assets/SharedCode/GlobalOptions.cs.meta", "Text": "fileFormatVersion: 2\nguid: 90b3ff7643cd1ab4f9852602460d08a2\nMonoImporter:\n  externalObjects: {}\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/SharedCode/Player.meta", "Text": "fileFormatVersion: 2\nguid: 6aee5214ca4a11b4da2c0ac90062ac98\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/SharedCode/Player/PlayerActions.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Metaplay.Core.Model;\nusing Metaplay.Core.Player;\n\nnamespace Game.Logic\n{\n    /// <summary>\n    /// Game-specific player action class, which attaches all game-specific actions to <see cref=\"PlayerModel\"/>.\n    /// </summary>\n    public abstract class PlayerAction : PlayerActionCore<PlayerModel>\n    {\n    }\n\n    /// <summary>\n    /// Registry for game-specific ActionCodes, used by the individual PlayerAction classes.\n    /// </summary>\n    public static class ActionCodes\n    {\n        public const int PlayerClickButton = 5000;\n    }\n\n    /// <summary>\n    /// Game-specific results returned from <see cref=\"PlayerActionCore.Execute(PlayerModel, bool)\"/>.\n    /// </summary>\n    public static class ActionResult\n    {\n        // Shadow success result\n        public static readonly MetaActionResult Success             = MetaActionResult.Success;\n\n        // Game-specific results\n        public static readonly MetaActionResult UnknownError        = new MetaActionResult(nameof(UnknownError));\n    }\n\n    // Game-specific example action: bump PlayerModel.NumClicked, triggered by button tap\n\n    [ModelAction(ActionCodes.PlayerClickButton)]\n    public class PlayerClickButton : PlayerAction\n    {\n        public PlayerClickButton() { }\n\n        public override MetaActionResult Execute(PlayerModel player, bool commit)\n        {\n            if (commit)\n            {\n                player.NumClicks += 1;\n                player.Log.Info(\"Button clicked!\");\n            }\n\n            return ActionResult.Success;\n        }\n    }\n}\n"}, {"Path": "Assets/SharedCode/Player/PlayerActions.cs.meta", "Text": "fileFormatVersion: 2\nguid: 40ae1dd298cb77a469565ce3485352b7\nMonoImporter:\n  externalObjects: {}\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/SharedCode/Player/PlayerModel.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Metaplay.Core;\nusing Metaplay.Core.Config;\nusing Metaplay.Core.Model;\nusing Metaplay.Core.Player;\nusing System.Runtime.Serialization;\n\nnamespace Game.Logic\n{\n    /// <summary>\n    /// Class for storing the state and updating the logic for a single player.\n    /// </summary>\n    [MetaSerializableDerived(1)]\n    [SupportedSchemaVersions(1, 1)]\n    public class PlayerModel :\n        PlayerModelBase<\n            PlayerModel,\n            PlayerStatisticsCore\n            >\n    {\n        public const int TicksPerSecond = 10;\n        protected override int GetTicksPerSecond() => TicksPerSecond;\n\n        [IgnoreDataMember] public IPlayerModelServerListener ServerListener { get; set; } = EmptyPlayerModelServerListener.Instance;\n        [IgnoreDataMember] public IPlayerModelClientListener ClientListener { get; set; } = EmptyPlayerModelClientListener.Instance;\n\n        // Player profile\n        [MetaMember(100)] public sealed override EntityId           PlayerId    { get; set; }\n        [MetaMember(101), NoChecksum] public sealed override string PlayerName  { get; set; }\n        [MetaMember(102)] public sealed override int                PlayerLevel { get; set; }\n\n        // Game-specific state\n        [MetaMember(200)] public int                                NumClicks   { get; set; } = 0;  // Number of times the button has been clicked\n\n        protected override void GameInitializeNewPlayerModel(MetaTime now, ISharedGameConfig gameConfig, EntityId playerId, string name)\n        {\n            // Setup initial state for new player\n            PlayerId    = playerId;\n            PlayerName  = name;\n        }\n\n        #region Schema migrations\n\n        // Example migration from schema v1 to v2\n        //[MigrationFromVersion(1)]\n        //void Migrate1To2()\n        //{\n        //    NumClicks += 10;\n        //}\n\n        #endregion\n    }\n}\n"}, {"Path": "Assets/SharedCode/Player/PlayerModel.cs.meta", "Text": "fileFormatVersion: 2\nguid: 827f00a3352b9f44f9164bc9e1e5581c\nMonoImporter:\n  externalObjects: {}\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/SharedCode/Player/PlayerModelListeners.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nnamespace Game.Logic\n{\n    public interface IPlayerModelServerListener\n    {\n    }\n\n    public interface IPlayerModelClientListener\n    {\n    }\n\n    public class EmptyPlayerModelServerListener : IPlayerModelServerListener\n    {\n        public static readonly EmptyPlayerModelServerListener Instance = new EmptyPlayerModelServerListener();\n    }\n\n    public class EmptyPlayerModelClientListener : IPlayerModelClientListener\n    {\n        public static readonly EmptyPlayerModelClientListener Instance = new EmptyPlayerModelClientListener();\n    }\n}\n"}, {"Path": "Assets/SharedCode/Player/PlayerModelListeners.cs.meta", "Text": "fileFormatVersion: 2\nguid: 2ed3ff7a887d942409d79f07a2ded018\nMonoImporter:\n  externalObjects: {}\n  serializedVersion: 2\n  defaultReferences: []\n  executionOrder: 0\n  icon: {instanceID: 0}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/SharedCode/SharedCode.asmdef", "Text": "{\n    \"name\": \"SharedCode\",\n    \"rootNamespace\": \"\",\n    \"references\": [\n        \"Metaplay\"\n    ],\n    \"includePlatforms\": [],\n    \"excludePlatforms\": [],\n    \"allowUnsafeCode\": false,\n    \"overrideReferences\": true,\n    \"precompiledReferences\": [],\n    \"autoReferenced\": true,\n    \"defineConstraints\": [],\n    \"versionDefines\": [],\n    \"noEngineReferences\": true\n}"}, {"Path": "Assets/SharedCode/SharedCode.asmdef.meta", "Text": "fileFormatVersion: 2\nguid: 93a30d819a8992c489e805a7f320b054\nAssemblyDefinitionImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/StreamingAssets.meta", "Text": "fileFormatVersion: 2\nguid: bc2f13298e882164a8a4bedbee0128aa\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Assets/StreamingAssets/SharedGameConfig.mpa", "Bytes": "TUNBIQAAAAVHtUcIuCbI1nDuh9eFYgkIAAABifQF4P0AAAAFIkluQXBwUHJvZHVjdHMubXBj7qja\nBkWxS5f49u1rOUBy0gAAAAAAAAACGkxhbmd1YWdlcy5tcGMslTkFeyNkdc8DS2Cs1tGeAAAAAAAA\nABIeT2ZmZXJHcm91cHMubXBj7qjaBkWxS5f49u1rOUBy0gAAAAAAAAACFE9mZmVycy5tcGPuqNoG\nRbFLl/j27Ws5QHLSAAAAAAAAAAIkUGxheWVyU2VnbWVudHMubXBj7qjaBkWxS5f49u1rOUBy0gAA\nAAAAAAACFAAUAgwCBGVuDAQORW5nbGlzaBEUABQAFAA=\n"}, {"Path": "Assets/StreamingAssets/SharedGameConfig.mpa.meta", "Text": "fileFormatVersion: 2\nguid: 77ced9696dd4c8a49a62d8d75093015d\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n"}, {"Path": "Backend/.gitignore", "Text": "!*.csproj\n!*.sln\nobj/\nbin/\n"}, {"Path": "Backend/BotClient/BotClient.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Game.Logic;\nusing Metaplay.BotClient;\nusing Metaplay.Cloud.Entity;\nusing Metaplay.Core;\nusing Metaplay.Core.Client;\nusing Metaplay.Core.Config;\nusing Metaplay.Core.InAppPurchase;\nusing Metaplay.Core.InGameMail;\nusing Metaplay.Core.Message;\nusing Metaplay.Core.Model;\nusing Metaplay.Core.Player;\nusing System;\nusing System.Threading.Tasks;\n\nnamespace Game.BotClient\n{\n    public enum BotClientState\n    {\n        Connecting,\n        Main,\n    }\n\n    // BotClient\n\n    [EntityConfig]\n    internal class BotClientConfig : BotClientConfigBase\n    {\n        public override Type EntityActorType => typeof(BotClient);\n    }\n\n    public class BotClient : BotClientBase\n    {\n        BotClientState              State { get; set; } = BotClientState.Connecting;\n\n        PlayerModel                _playerModel => (PlayerModel)_playerContext.Journal.StagedModel;\n        DefaultPlayerClientContext _playerContext;\n\n        protected override IPlayerClientContext PlayerContext => _playerContext;\n\n        public BotClient(EntityId entityId) : base(entityId)\n        {\n        }\n\n        protected override void PreStart()\n        {\n            base.PreStart();\n        }\n\n        protected override void RegisterHandlers()\n        {\n            base.RegisterHandlers();\n        }\n\n        protected override string GetCurrentStateLabel() => State.ToString();\n\n        protected override Task OnUpdate()\n        {\n            // Tick current state (when connected)\n            switch (State)\n            {\n                case BotClientState.Main:\n                    TickMainState();\n                    break;\n            }\n\n            return Task.CompletedTask;\n        }\n\n        protected override Task OnNetworkMessage(MetaMessage message)\n        {\n            //_log.Debug(\"OnNetworkMessage: {Message}\", PrettyPrint.Compact(message));\n            switch (message)\n            {\n                case SessionProtocol.SessionStartSuccess success:\n                    // HandleStartSession handles the player model setup\n                    State = BotClientState.Main;\n                    break;\n\n                case PlayerAckActions ackActions:\n                    _playerContext.PurgeSnapshotsUntil(JournalPosition.FromTickOperationStep(ackActions.UntilPositionTick, ackActions.UntilPositionOperation, ackActions.UntilPositionStep));\n                    break;\n\n                case PlayerExecuteUnsynchronizedServerAction executeUnsynchronizedServerAction:\n                    _playerContext.ExecuteServerAction(executeUnsynchronizedServerAction);\n                    break;\n\n                case PlayerChecksumMismatch checksumMismatch:\n                    // On mismatch, report it and terminate bot (to avoid spamming)\n                    _log.Warning(\"PlayerChecksumMismatch: tick={Tick}, actionIndex={ActionIndex}\", checksumMismatch.Tick, checksumMismatch.ActionIndex);\n                    _playerContext.ResolveChecksumMismatch(checksumMismatch);\n                    RequestShutdown();\n                    break;\n\n                default:\n                    _log.Warning(\"Unknown message received: {Message}\", PrettyPrint.Compact(message));\n                    break;\n            }\n\n            return Task.CompletedTask;\n        }\n\n        protected override void HandleStartSession(SessionProtocol.SessionStartSuccess success, IPlayerModelBase playerModelBase, ISharedGameConfig gameConfig)\n        {\n            PlayerModel playerModel = (PlayerModel)playerModelBase;\n            //playerModel.ClientListener = this;\n\n            _playerContext = new DefaultPlayerClientContext(\n                _logChannel,\n                playerModel,\n                success.PlayerState,\n                _actualPlayerId,\n                _logicVersion,\n                timelineHistory: null,\n                SendToServer,\n                MetaTime.Now);\n        }\n\n        void TickMainState()\n        {\n            _log.Debug(\"Tick player (currentTick={CurrentTick})..\", _playerModel.CurrentTick);\n        }\n\n        [MessageHandler]\n        void HandleInitializeBot(BotCoordinator.InitializeBot _)\n        {\n            _log.Debug(\"Initializing bot\");\n        }\n\n        static async Task<int> Main(string[] cmdLineArgs)\n        {\n            using (BotClientMain program = new BotClientMain())\n                return await program.RunBotsAsync(cmdLineArgs);\n        }\n    }\n}\n"}, {"Path": "Backend/BotClient/BotClient.csproj", "Text": "<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <OutputType>Exe</OutputType>\n    <Version>0.1.0.0</Version>\n    <LangVersion>Latest</LangVersion>\n    <RunWorkingDirectory>$(MSBuildProjectDirectory)</RunWorkingDirectory>\n    <ServerGarbageCollection>true</ServerGarbageCollection>\n    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <ProjectReference Include=\"$(MetaplayServerPath)\\CodeAnalyzers\\Metaplay.CodeAnalyzers.csproj\">\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n      <OutputItemType>Analyzer</OutputItemType>\n    </ProjectReference>\n    <ProjectReference Include=\"$(MetaplayServerPath)\\CodeAnalyzers.Shared\\Metaplay.CodeAnalyzers.Shared.csproj\">\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n      <OutputItemType>Analyzer</OutputItemType>\n    </ProjectReference>\n    <ProjectReference Include=\"..\\SharedCode\\SharedCode.csproj\" />\n    <ProjectReference Include=\"$(MetaplayServerPath)\\BotClient\\Metaplay.BotClient.csproj\" />\n  </ItemGroup>\n\n</Project>\n"}, {"Path": "Backend/BotClient/Config/Options.base.yaml", "Text": "\nBot:\n  MaxBots:                  1\n  SpawnRate:                10\n  ExpectedSessionDuration:  00:02:00\n  #ForceConflictingPlayerId: true\n"}, {"Path": "Backend/BotClient/Config/Options.local.yaml", "Text": "# Runtime options when running the BotClient locally\n"}, {"Path": "Backend/Deployments/README.md", "Text": "# Cloud Deployment Configuration\n\n## Overview\n\nThis directory contains the Helm values files required for configuring your game servers in the cloud deployments.\n\nEach environment should have a matching .yaml file to configure that specific environment. The game server Helm values files have a name that matches the environment used to configure with it: `<environmentName>-server.yaml`.\n\nNote that not all of these are necessarily used, as typically projects start with the development environments only, and the staging and production environments are introduced at a later stage.\n\n## Default Environments\n\nWhen a new project is initialized, the Helm values files are generated for the game servers of the following Metaplay default environments:\n\n* The `develop` environment is configured by `develop-server.yaml`.\n* The `stable` environment is configured by `stable-server.yaml`.\n* The `staging` environment is configured by `staging-server.yaml`.\n* The `production` environment is configured by `production-server.yaml`.\n\n## Configure a New Environment\n\nIt's easy to add new environments by copying one of the existing files. To create a Helm values file for a development environment named `feature1`, follow these steps:\n\n1. Make a copy of `develop-server.yaml` and name it `feature1-server.yaml`.\n\n2. Change the environment name inside the Helm values file to match the environment's name, so `environment: develop` becomes `environment: feature1`.\n\n3. Optionally, you can modify the list of runtime options files that are used by the environment by modifying the list of files in `config.files`.\n\nNote that you need to have a matching environment provisioned. Right now, you'll need to contact support but we are working on a feature that allows provisioning these yourself from the [developer portal](https://portal.metaplay.dev).\n"}, {"Path": "Backend/Deployments/develop-server.yaml", "Text": "# Define the name of the environment. This is rendered in the game server's UI and helps you determine which environment you are connected to.\nenvironment: develop\n\n# Define the environment family.\nenvironmentFamily: Development\n\n# Configure which runtime options files to use (located in Backend/Server/Config/)\nconfig:\n  files:\n    - \"./Config/Options.base.yaml\"\n    - \"./Config/Options.dev.yaml\"\n\n# Tell Helm to discover all other values from the infrastructure.\ntenant:\n  discoveryEnabled: true\n"}, {"Path": "Backend/Deployments/production-server.yaml", "Text": "# Define the name of the environment. This is rendered in the game server's UI and helps you determine which environment you are connected to.\nenvironment: production\n\n# Define the environment family.\nenvironmentFamily: Production\n\n# Configure which runtime options files to use (located in Backend/Server/Config/)\nconfig:\n  files:\n    - \"./Config/Options.base.yaml\"\n    - \"./Config/Options.production.yaml\"\n\n# Tell Helm to discover all other values from the infrastructure.\ntenant:\n  discoveryEnabled: true\n\n# Use a single-node deployment. This configuration will be moved elsewhere later.\nshards:\n- name: all\n  singleton: true\n  requests:\n    cpu: 1500m\n    memory: 3000M\n"}, {"Path": "Backend/Deployments/stable-server.yaml", "Text": "# Define the name of the environment. This is rendered in the game server's UI and helps you determine which environment you are connected to.\nenvironment: stable\n\n# Define the environment family.\nenvironmentFamily: Development\n\n# Configure which runtime options files to use (located in Backend/Server/Config/)\nconfig:\n  files:\n    - \"./Config/Options.base.yaml\"\n    - \"./Config/Options.dev.yaml\"\n\n# Tell Helm to discover all other values from the infrastructure.\ntenant:\n  discoveryEnabled: true\n"}, {"Path": "Backend/Deployments/staging-server.yaml", "Text": "# Define the name of the environment. This is rendered in the game server's UI and helps you determine which environment you are connected to.\nenvironment: staging\n\n# Define the environment family.\nenvironmentFamily: Staging\n\n# Configure which runtime options files to use (located in Backend/Server/Config/)\nconfig:\n  files:\n    - \"./Config/Options.base.yaml\"\n    - \"./Config/Options.staging.yaml\"\n\n# Tell Helm to discover all other values from the infrastructure.\ntenant:\n  discoveryEnabled: true\n\n# Use a single-node deployment. This configuration will be moved elsewhere later.\nshards:\n- name: all\n  singleton: true\n  requests:\n    cpu: 1500m\n    memory: 3000M\n"}, {"Path": "Backend/Directory.Build.props", "Text": "<Project>\n <PropertyGroup>\n   <MetaplaySDKPath>$(MSBuildThisFileDirectory)../{{{RELATIVE_PATH_TO_SDK}}}</MetaplaySDKPath>\n   <SharedCodePath>$(MSBuildThisFileDirectory)../Assets/SharedCode</SharedCodePath>\n   <MetaplayClientPath>$(MetaplaySDKPath)/Client</MetaplayClientPath>\n   <MetaplayServerPath>$(MetaplaySDKPath)/Backend</MetaplayServerPath>\n </PropertyGroup>\n <!-- Make paths relative to project -->\n <PropertyGroup>\n   <SharedCodePath>$([MSBuild]::MakeRelative($(MSBuildProjectDirectory), $(SharedCodePath)))</SharedCodePath>\n   <MetaplayClientPath>$([MSBuild]::MakeRelative($(MSBuildProjectDirectory), $(MetaplayClientPath)))</MetaplayClientPath>\n   <MetaplayServerPath>$([MSBuild]::MakeRelative($(MSBuildProjectDirectory), $(MetaplayServerPath)))</MetaplayServerPath>\n </PropertyGroup>\n</Project>\n"}, {"Path": "Backend/Server/Config/Options.base.yaml", "Text": "# Base options file, included for all platforms\n\n## Database\n\nDatabase:\n  # Master database version: bump version to force the older versions of the database to be reset.\n  # Useful during development, but should never be done in production.\n  MasterVersion: 1\n\n  # When your game goes live, we recommend disabling (uncommenting) NukeOnVersionMismatch so\n  # databases are never accidentally nuked!\n  # NukeOnVersionMismatch: false\n"}, {"Path": "Backend/Server/Config/Options.dev.yaml", "Text": "# Options overrides for all development environments.\n"}, {"Path": "Backend/Server/Config/Options.local.yaml", "Text": "# Option overrides when running server locally\n"}, {"Path": "Backend/Server/Config/Options.production.yaml", "Text": "# Options overrides for the production environment.\n"}, {"Path": "Backend/Server/Config/Options.staging.yaml", "Text": "# Options overrides for the staging environment.\n"}, {"Path": "Backend/Server/Config/README.md", "Text": "# Server Runtime Options\n\n## Overview\n\nThis directory contains the Runtime Options files for the various cloud environments of your game.\n\nFor more information on configuring your game server using the runtime options, take a look at [Working with Runtime Options](https://docs.metaplay.io/game-server-programming/how-to-guides/working-with-runtime-options.html).\n\n## Default Options Files\n\nThe following runtime options files are generated for new projects by default:\n\n* `Options.base.yaml` contains project-wide options and is used by all cloud environments and when the server running locally.\n* `Options.local.yaml` contains options overrides for when the server is run locally.\n* `Options.dev.yaml` contains options overrides for all development cloud environments (by default, the `develop` and `stable` environments).\n* `Options.staging.yaml` contains options overrides for the `staging` environment.\n* `Options.production.yaml` contains options overrides for the `production` environment.\n\nThe per-environment Helm values files in your project's `Backend/Deployments/*-server.yaml` specify which runtime options are in use for each environment. You can also modify the Helm values files to configure which environment uses which runtime options files.\n\nYou can use these options files to configure your game server differently in the various environments.\n"}, {"Path": "Backend/Server/Database/GameDbContext.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Metaplay.Cloud.Persistence;\n\nnamespace Game.Server.Database\n{\n    /// <summary>\n    /// Game-specific EFCore database context. Used to declare the database tables.\n    /// </summary>\n    public class GameDbContext : MetaDbContext\n    {\n        // Example table declaration:\n        //public DbSet<MyPersistedThing> Things { get; set; }\n    }\n}\n"}, {"Path": "Backend/Server/GameConfig/StaticGameConfig.mpa", "Bytes": "TUNBIQAAAAU0QP1rgboa1uKAs7OQT8nLAAABifQF4P0AAAADEl9tZXRhZGF0Ydk0tdLdYBEl7nvM\nkO6ohxMAAAAAAAAALBRTZXJ2ZXIubXBh2P0DWv4d6INXuSD1lFoOlQAAAAAAAABUFFNoYXJlZC5t\ncGHWck1whiYe+9Ns02bnftKhAAAAAAAAAQQPAhACAwIAEQ4EAAwGAR8IAAAAAAAAAAAAAAAAAAAA\nAA8KAgICABIEAA8REU1DQSEAAAAFf5Jgos56PJIjCJONTy/VOAAAAYn0BeD9AAAAASpQbGF5ZXJF\neHBlcmltZW50cy5tcGPuqNoGRbFLl/j27Ws5QHLSAAAAAAAAAAIUAE1DQSEAAAAFR7VHCLgmyNZw\n7ofXhWIJCAAAAYn0BeD9AAAABSJJbkFwcFByb2R1Y3RzLm1wY+6o2gZFsUuX+PbtazlActIAAAAA\nAAAAAhpMYW5ndWFnZXMubXBjLJU5BXsjZHXPA0tgrNbRngAAAAAAAAASHk9mZmVyR3JvdXBzLm1w\nY+6o2gZFsUuX+PbtazlActIAAAAAAAAAAhRPZmZlcnMubXBj7qjaBkWxS5f49u1rOUBy0gAAAAAA\nAAACJFBsYXllclNlZ21lbnRzLm1wY+6o2gZFsUuX+PbtazlActIAAAAAAAAAAhQAFAIMAgRlbgwE\nDkVuZ2xpc2gRFAAUABQA\n"}, {"Path": "Backend/Server/Migrations/20240503062111_InitialCreate.Designer.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    [Migration(\"20240503062111_InitialCreate\")]\n    partial class InitialCreate\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.3\");\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Database.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20240503062111_InitialCreate.cs", "Text": "\ufeffusing System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    /// <inheritdoc />\n    public partial class InitialCreate : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.CreateTable(\n                name: \"AuditLogEvents\",\n                columns: table => new\n                {\n                    EventId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    Source = table.Column<string>(type: \"varchar(256)\", maxLength: 256, nullable: false),\n                    Target = table.Column<string>(type: \"varchar(256)\", maxLength: 256, nullable: false),\n                    SourceIpAddress = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: true),\n                    SourceCountryIsoCode = table.Column<string>(type: \"varchar(16)\", maxLength: 16, nullable: true),\n                    CompressedPayload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    CompressionAlgorithm = table.Column<int>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AuditLogEvents\", x => x.EventId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AuthEntries\",\n                columns: table => new\n                {\n                    AuthKey = table.Column<string>(type: \"varchar(160)\", maxLength: 160, nullable: false),\n                    HashedAuthToken = table.Column<string>(type: \"varchar(160)\", nullable: true),\n                    PlayerId = table.Column<string>(type: \"varchar(64)\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AuthEntries\", x => x.AuthKey);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"DatabaseScanCoordinators\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_DatabaseScanCoordinators\", x => x.EntityId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"DatabaseScanWorkers\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_DatabaseScanWorkers\", x => x.EntityId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"GlobalStates\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_GlobalStates\", x => x.EntityId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"InAppPurchases\",\n                columns: table => new\n                {\n                    TransactionId = table.Column<string>(type: \"varchar(512)\", maxLength: 512, nullable: false),\n                    Event = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    IsValidReceipt = table.Column<bool>(type: \"INTEGER\", nullable: false),\n                    PlayerId = table.Column<string>(type: \"varchar(64)\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_InAppPurchases\", x => x.TransactionId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"InAppPurchaseSubscriptions\",\n                columns: table => new\n                {\n                    PlayerAndOriginalTransactionId = table.Column<string>(type: \"varchar(530)\", maxLength: 530, nullable: false),\n                    PlayerId = table.Column<string>(type: \"varchar(64)\", nullable: false),\n                    OriginalTransactionId = table.Column<string>(type: \"varchar(512)\", maxLength: 512, nullable: false),\n                    SubscriptionInfo = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_InAppPurchaseSubscriptions\", x => x.PlayerAndOriginalTransactionId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"MetaInfo\",\n                columns: table => new\n                {\n                    Version = table.Column<int>(type: \"INTEGER\", nullable: false)\n                        .Annotation(\"Sqlite:Autoincrement\", true),\n                    Timestamp = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    MasterVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    NumShards = table.Column<int>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_MetaInfo\", x => x.Version);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"PlayerDeletionRecords\",\n                columns: table => new\n                {\n                    PlayerId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    ScheduledDeletionAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    DeletionSource = table.Column<string>(type: \"varchar(128)\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_PlayerDeletionRecords\", x => x.PlayerId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"PlayerEventLogSegments\",\n                columns: table => new\n                {\n                    GlobalId = table.Column<string>(type: \"varchar(128)\", maxLength: 128, nullable: false),\n                    OwnerId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    SegmentSequentialId = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    FirstEntryTimestamp = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    LastEntryTimestamp = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_PlayerEventLogSegments\", x => x.GlobalId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"PlayerIncidents\",\n                columns: table => new\n                {\n                    IncidentId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PlayerId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    Fingerprint = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    Type = table.Column<string>(type: \"varchar(128)\", maxLength: 128, nullable: false),\n                    SubType = table.Column<string>(type: \"varchar(128)\", maxLength: 128, nullable: false),\n                    Reason = table.Column<string>(type: \"varchar(256)\", maxLength: 256, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    Compression = table.Column<int>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_PlayerIncidents\", x => x.IncidentId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"PlayerNameSearches\",\n                columns: table => new\n                {\n                    NamePart = table.Column<string>(type: \"varchar(32)\", nullable: false),\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false)\n                },\n                constraints: table =>\n                {\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Players\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: true),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false),\n                    LogicVersion = table.Column<int>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Players\", x => x.EntityId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"SegmentEstimates\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_SegmentEstimates\", x => x.EntityId);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"StaticGameConfigs\",\n                columns: table => new\n                {\n                    Id = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    MetaDataBytes = table.Column<byte[]>(type: \"longblob\", nullable: true),\n                    Name = table.Column<string>(type: \"varchar(256)\", maxLength: 256, nullable: false),\n                    Description = table.Column<string>(type: \"varchar(512)\", maxLength: 512, nullable: true),\n                    VersionHash = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: true),\n                    LastModifiedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Source = table.Column<string>(type: \"varchar(128)\", nullable: false),\n                    ArchiveBuiltAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    PublishedAt = table.Column<DateTime>(type: \"DateTime\", nullable: true),\n                    UnpublishedAt = table.Column<DateTime>(type: \"DateTime\", nullable: true),\n                    IsArchived = table.Column<bool>(type: \"tinyint\", nullable: false),\n                    TaskId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: true),\n                    FailureInfo = table.Column<string>(type: \"TEXT\", nullable: true),\n                    ArchiveBytes = table.Column<byte[]>(type: \"longblob\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_StaticGameConfigs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"StatsCollectors\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_StatsCollectors\", x => x.EntityId);\n                });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_AuditLogEvents_Source\",\n                table: \"AuditLogEvents\",\n                column: \"Source\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_AuditLogEvents_Target\",\n                table: \"AuditLogEvents\",\n                column: \"Target\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_InAppPurchaseSubscriptions_OriginalTransactionId\",\n                table: \"InAppPurchaseSubscriptions\",\n                column: \"OriginalTransactionId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_InAppPurchaseSubscriptions_PlayerId\",\n                table: \"InAppPurchaseSubscriptions\",\n                column: \"PlayerId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlayerEventLogSegments_OwnerId\",\n                table: \"PlayerEventLogSegments\",\n                column: \"OwnerId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlayerIncidents_Fingerprint_PersistedAt\",\n                table: \"PlayerIncidents\",\n                columns: new[] { \"Fingerprint\", \"PersistedAt\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlayerIncidents_PersistedAt\",\n                table: \"PlayerIncidents\",\n                column: \"PersistedAt\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlayerIncidents_PlayerId\",\n                table: \"PlayerIncidents\",\n                column: \"PlayerId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlayerNameSearches_EntityId\",\n                table: \"PlayerNameSearches\",\n                column: \"EntityId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlayerNameSearches_NamePart_EntityId\",\n                table: \"PlayerNameSearches\",\n                columns: new[] { \"NamePart\", \"EntityId\" });\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropTable(\n                name: \"AuditLogEvents\");\n\n            migrationBuilder.DropTable(\n                name: \"AuthEntries\");\n\n            migrationBuilder.DropTable(\n                name: \"DatabaseScanCoordinators\");\n\n            migrationBuilder.DropTable(\n                name: \"DatabaseScanWorkers\");\n\n            migrationBuilder.DropTable(\n                name: \"GlobalStates\");\n\n            migrationBuilder.DropTable(\n                name: \"InAppPurchases\");\n\n            migrationBuilder.DropTable(\n                name: \"InAppPurchaseSubscriptions\");\n\n            migrationBuilder.DropTable(\n                name: \"MetaInfo\");\n\n            migrationBuilder.DropTable(\n                name: \"PlayerDeletionRecords\");\n\n            migrationBuilder.DropTable(\n                name: \"PlayerEventLogSegments\");\n\n            migrationBuilder.DropTable(\n                name: \"PlayerIncidents\");\n\n            migrationBuilder.DropTable(\n                name: \"PlayerNameSearches\");\n\n            migrationBuilder.DropTable(\n                name: \"Players\");\n\n            migrationBuilder.DropTable(\n                name: \"SegmentEstimates\");\n\n            migrationBuilder.DropTable(\n                name: \"StaticGameConfigs\");\n\n            migrationBuilder.DropTable(\n                name: \"StatsCollectors\");\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20240503193515_StatisticsEvents.Designer.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    [Migration(\"20240503193515_StatisticsEvents\")]\n    partial class StatisticsEvents\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.3\");\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Database.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatisticsEvent\", b =>\n                {\n                    b.Property<string>(\"UniqueKey\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"UniqueKey\");\n\n                    b.HasIndex(\"Timestamp\");\n\n                    b.ToTable(\"StatisticsEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20240503193515_StatisticsEvents.cs", "Text": "\ufeffusing System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    /// <inheritdoc />\n    public partial class StatisticsEvents : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.CreateTable(\n                name: \"StatisticsEvents\",\n                columns: table => new\n                {\n                    UniqueKey = table.Column<string>(type: \"varchar(128)\", nullable: false),\n                    Timestamp = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_StatisticsEvents\", x => x.UniqueKey);\n                });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_StatisticsEvents_Timestamp\",\n                table: \"StatisticsEvents\",\n                column: \"Timestamp\");\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropTable(\n                name: \"StatisticsEvents\");\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20240813123544_KeyManagers.Designer.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    [Migration(\"20240813123544_KeyManagers\")]\n    partial class KeyManagers\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.7\");\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Database.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.KeyManager.PersistedKeyManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"KeyManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20240813123544_KeyManagers.cs", "Text": "\ufeffusing System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    /// <inheritdoc />\n    public partial class KeyManagers : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.CreateTable(\n                name: \"KeyManagers\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_KeyManagers\", x => x.EntityId);\n                });\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropTable(\n                name: \"KeyManagers\");\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241001113753_PlayerGuildSearchPriority.Designer.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    [Migration(\"20241001113753_PlayerGuildSearchPriority\")]\n    partial class PlayerGuildSearchPriority\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.7\");\n\n            modelBuilder.Entity(\"Metaplay.Cloud.Persistence.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.KeyManager.PersistedKeyManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"KeyManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.Property<uint>(\"Priority\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"tinyint\")\n                        .HasDefaultValue(64u);\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.HasIndex(\"Priority\", \"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241001113753_PlayerGuildSearchPriority.cs", "Text": "\ufeffusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    /// <inheritdoc />\n    public partial class PlayerGuildSearchPriority : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.AddColumn<uint>(\n                name: \"Priority\",\n                table: \"PlayerNameSearches\",\n                type: \"tinyint\",\n                nullable: false,\n                defaultValue: 64u);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlayerNameSearches_Priority_NamePart_EntityId\",\n                table: \"PlayerNameSearches\",\n                columns: new[] { \"Priority\", \"NamePart\", \"EntityId\" });\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropIndex(\n                name: \"IX_PlayerNameSearches_Priority_NamePart_EntityId\",\n                table: \"PlayerNameSearches\");\n\n            migrationBuilder.DropColumn(\n                name: \"Priority\",\n                table: \"PlayerNameSearches\");\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241126130751_LiveOpsTimelineManager.Designer.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    [Migration(\"20241126130751_LiveOpsTimelineManager\")]\n    partial class LiveOpsTimelineManager\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.7\");\n\n            modelBuilder.Entity(\"Metaplay.Cloud.Persistence.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.KeyManager.PersistedKeyManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"KeyManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.LiveOpsTimeline.PersistedLiveOpsTimelineManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"LiveOpsTimelineManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.Property<uint>(\"Priority\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"tinyint\")\n                        .HasDefaultValue(64u);\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.HasIndex(\"Priority\", \"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241126130751_LiveOpsTimelineManager.cs", "Text": "\ufeffusing System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    /// <inheritdoc />\n    public partial class LiveOpsTimelineManager : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.CreateTable(\n                name: \"LiveOpsTimelineManagers\",\n                columns: table => new\n                {\n                    EntityId = table.Column<string>(type: \"varchar(64)\", maxLength: 64, nullable: false),\n                    PersistedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false),\n                    SchemaVersion = table.Column<int>(type: \"INTEGER\", nullable: false),\n                    IsFinal = table.Column<bool>(type: \"INTEGER\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_LiveOpsTimelineManagers\", x => x.EntityId);\n                });\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropTable(\n                name: \"LiveOpsTimelineManagers\");\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241210183217_Metrics.Designer.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    [Migration(\"20241210183217_Metrics\")]\n    partial class Metrics\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.7\");\n\n            modelBuilder.Entity(\"Metaplay.Cloud.Persistence.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.KeyManager.PersistedKeyManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"KeyManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.LiveOpsTimeline.PersistedLiveOpsTimelineManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"LiveOpsTimelineManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.Property<uint>(\"Priority\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"tinyint\")\n                        .HasDefaultValue(64u);\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.HasIndex(\"Priority\", \"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.StatisticsEvents.PersistedStatisticsEvent\", b =>\n                {\n                    b.Property<string>(\"UniqueKey\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"UniqueKey\");\n\n                    b.HasIndex(\"Timestamp\");\n\n                    b.ToTable(\"StatisticsEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.StatisticsEvents.PersistedStatisticsStoragePage\", b =>\n                {\n                    b.Property<string>(\"UniqueKey\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"EndTime\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"ResolutionName\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"StartTime\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"UniqueKey\");\n\n                    b.HasIndex(\"CreatedAt\");\n\n                    b.HasIndex(\"EndTime\");\n\n                    b.HasIndex(\"StartTime\");\n\n                    b.ToTable(\"StatisticsPages\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241210183217_Metrics.cs", "Text": "\ufeffusing System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    /// <inheritdoc />\n    public partial class Metrics : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.CreateTable(\n                name: \"StatisticsPages\",\n                columns: table => new\n                {\n                    UniqueKey = table.Column<string>(type: \"varchar(128)\", nullable: false),\n                    ResolutionName = table.Column<string>(type: \"varchar(128)\", nullable: false),\n                    StartTime = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    EndTime = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"DateTime\", nullable: false),\n                    Payload = table.Column<byte[]>(type: \"longblob\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_StatisticsPages\", x => x.UniqueKey);\n                });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_StatisticsPages_CreatedAt\",\n                table: \"StatisticsPages\",\n                column: \"CreatedAt\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_StatisticsPages_EndTime\",\n                table: \"StatisticsPages\",\n                column: \"EndTime\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_StatisticsPages_StartTime\",\n                table: \"StatisticsPages\",\n                column: \"StartTime\");\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropTable(\n                name: \"StatisticsPages\");\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241211141845_FixTimestampPrecision.Designer.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    [Migration(\"20241211141845_FixTimestampPrecision\")]\n    partial class FixTimestampPrecision\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.7\");\n\n            modelBuilder.Entity(\"Metaplay.Cloud.Persistence.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.KeyManager.PersistedKeyManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"KeyManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.LiveOpsTimeline.PersistedLiveOpsTimelineManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"LiveOpsTimelineManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.Property<uint>(\"Priority\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"tinyint\")\n                        .HasDefaultValue(64u);\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.HasIndex(\"Priority\", \"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.StatisticsEvents.PersistedStatisticsEvent\", b =>\n                {\n                    b.Property<string>(\"UniqueKey\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime(3)\");\n\n                    b.HasKey(\"UniqueKey\");\n\n                    b.HasIndex(\"Timestamp\");\n\n                    b.ToTable(\"StatisticsEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.StatisticsEvents.PersistedStatisticsStoragePage\", b =>\n                {\n                    b.Property<string>(\"UniqueKey\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"EndTime\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"ResolutionName\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"StartTime\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"UniqueKey\");\n\n                    b.HasIndex(\"CreatedAt\");\n\n                    b.HasIndex(\"EndTime\");\n\n                    b.HasIndex(\"StartTime\");\n\n                    b.ToTable(\"StatisticsPages\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/20241211141845_FixTimestampPrecision.cs", "Text": "\ufeffusing System;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    /// <inheritdoc />\n    public partial class FixTimestampPrecision : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.AlterColumn<DateTime>(\n                name: \"Timestamp\",\n                table: \"StatisticsEvents\",\n                type: \"DateTime(3)\",\n                nullable: false,\n                oldClrType: typeof(DateTime),\n                oldType: \"DateTime\");\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.AlterColumn<DateTime>(\n                name: \"Timestamp\",\n                table: \"StatisticsEvents\",\n                type: \"DateTime\",\n                nullable: false,\n                oldClrType: typeof(DateTime),\n                oldType: \"DateTime(3)\");\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Migrations/GameDbContextModelSnapshot.cs", "Text": "\ufeff// <auto-generated />\nusing System;\nusing Game.Server.Database;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\n#nullable disable\n\nnamespace Server.Migrations\n{\n    [DbContext(typeof(GameDbContext))]\n    partial class GameDbContextModelSnapshot : ModelSnapshot\n    {\n        protected override void BuildModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder.HasAnnotation(\"ProductVersion\", \"8.0.7\");\n\n            modelBuilder.Entity(\"Metaplay.Cloud.Persistence.DatabaseMetaInfo\", b =>\n                {\n                    b.Property<int>(\"Version\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"MasterVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"NumShards\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"Version\");\n\n                    b.ToTable(\"MetaInfo\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.AdminApi.AuditLog.PersistedAuditLogEvent\", b =>\n                {\n                    b.Property<string>(\"EventId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"CompressedPayload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"CompressionAlgorithm\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SourceCountryIsoCode\")\n                        .HasMaxLength(16)\n                        .HasColumnType(\"varchar(16)\");\n\n                    b.Property<string>(\"SourceIpAddress\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Target\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.HasKey(\"EventId\");\n\n                    b.HasIndex(\"Source\");\n\n                    b.HasIndex(\"Target\");\n\n                    b.ToTable(\"AuditLogEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.Authentication.PersistedAuthenticationEntry\", b =>\n                {\n                    b.Property<string>(\"AuthKey\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"HashedAuthToken\")\n                        .HasColumnType(\"varchar(160)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"AuthKey\");\n\n                    b.ToTable(\"AuthEntries\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanCoordinator\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanCoordinators\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.DatabaseScan.PersistedDatabaseScanWorker\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"DatabaseScanWorkers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchase\", b =>\n                {\n                    b.Property<string>(\"TransactionId\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Event\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<bool>(\"IsValidReceipt\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"TransactionId\");\n\n                    b.ToTable(\"InAppPurchases\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.InAppPurchase.PersistedInAppPurchaseSubscription\", b =>\n                {\n                    b.Property<string>(\"PlayerAndOriginalTransactionId\")\n                        .HasMaxLength(530)\n                        .HasColumnType(\"varchar(530)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OriginalTransactionId\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"SubscriptionInfo\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.HasKey(\"PlayerAndOriginalTransactionId\");\n\n                    b.HasIndex(\"OriginalTransactionId\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.ToTable(\"InAppPurchaseSubscriptions\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.KeyManager.PersistedKeyManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"KeyManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.LiveOpsTimeline.PersistedLiveOpsTimelineManager\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"LiveOpsTimelineManagers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedGlobalState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"GlobalStates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerBase\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<int>(\"LogicVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"Players\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerEventLogSegment\", b =>\n                {\n                    b.Property<string>(\"GlobalId\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"FirstEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"LastEntryTimestamp\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"OwnerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<int>(\"SegmentSequentialId\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"GlobalId\");\n\n                    b.HasIndex(\"OwnerId\");\n\n                    b.ToTable(\"PlayerEventLogSegments\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerIncident\", b =>\n                {\n                    b.Property<string>(\"IncidentId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<int>(\"Compression\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<string>(\"Fingerprint\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"PlayerId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"Reason\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<string>(\"SubType\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasMaxLength(128)\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.HasKey(\"IncidentId\");\n\n                    b.HasIndex(\"PersistedAt\");\n\n                    b.HasIndex(\"PlayerId\");\n\n                    b.HasIndex(\"Fingerprint\", \"PersistedAt\");\n\n                    b.ToTable(\"PlayerIncidents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedPlayerSearch\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"NamePart\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(32)\");\n\n                    b.Property<uint>(\"Priority\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"tinyint\")\n                        .HasDefaultValue(64u);\n\n                    b.HasIndex(\"EntityId\");\n\n                    b.HasIndex(\"NamePart\", \"EntityId\");\n\n                    b.HasIndex(\"Priority\", \"NamePart\", \"EntityId\");\n\n                    b.ToTable(\"PlayerNameSearches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedSegmentEstimateState\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"SegmentEstimates\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStaticGameConfig\", b =>\n                {\n                    b.Property<string>(\"Id\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime>(\"ArchiveBuiltAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"ArchiveBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"varchar(512)\");\n\n                    b.Property<string>(\"FailureInfo\")\n                        .HasColumnType(\"TEXT\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"tinyint\");\n\n                    b.Property<DateTime>(\"LastModifiedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"MetaDataBytes\")\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(256)\n                        .HasColumnType(\"varchar(256)\");\n\n                    b.Property<DateTime?>(\"PublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<string>(\"TaskId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<DateTime?>(\"UnpublishedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<string>(\"VersionHash\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"StaticGameConfigs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PersistedStatsCollector\", b =>\n                {\n                    b.Property<string>(\"EntityId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<bool>(\"IsFinal\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"PersistedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<int>(\"SchemaVersion\")\n                        .HasColumnType(\"INTEGER\");\n\n                    b.HasKey(\"EntityId\");\n\n                    b.ToTable(\"StatsCollectors\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.PlayerDeletion.PlayerDeletionRecords+PersistedPlayerDeletionRecord\", b =>\n                {\n                    b.Property<string>(\"PlayerId\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"varchar(64)\");\n\n                    b.Property<string>(\"DeletionSource\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"ScheduledDeletionAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"PlayerId\");\n\n                    b.ToTable(\"PlayerDeletionRecords\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.StatisticsEvents.PersistedStatisticsEvent\", b =>\n                {\n                    b.Property<string>(\"UniqueKey\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<DateTime>(\"Timestamp\")\n                        .HasColumnType(\"DateTime(3)\");\n\n                    b.HasKey(\"UniqueKey\");\n\n                    b.HasIndex(\"Timestamp\");\n\n                    b.ToTable(\"StatisticsEvents\", (string)null);\n                });\n\n            modelBuilder.Entity(\"Metaplay.Server.StatisticsEvents.PersistedStatisticsStoragePage\", b =>\n                {\n                    b.Property<string>(\"UniqueKey\")\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<DateTime>(\"EndTime\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.Property<byte[]>(\"Payload\")\n                        .IsRequired()\n                        .HasColumnType(\"longblob\");\n\n                    b.Property<string>(\"ResolutionName\")\n                        .IsRequired()\n                        .HasColumnType(\"varchar(128)\");\n\n                    b.Property<DateTime>(\"StartTime\")\n                        .HasColumnType(\"DateTime\");\n\n                    b.HasKey(\"UniqueKey\");\n\n                    b.HasIndex(\"CreatedAt\");\n\n                    b.HasIndex(\"EndTime\");\n\n                    b.HasIndex(\"StartTime\");\n\n                    b.ToTable(\"StatisticsPages\", (string)null);\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Player/PlayerActor.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Game.Logic;\nusing Metaplay.Cloud.Entity;\nusing Metaplay.Core;\nusing Metaplay.Server;\nusing System;\nusing static System.FormattableString;\n\nnamespace Game.Server.Player\n{\n    [EntityConfig]\n    public class PlayerConfig : PlayerConfigBase\n    {\n        public override Type EntityActorType => typeof(PlayerActor);\n    }\n\n    /// <summary>\n    /// Entity actor class representing a player.\n    /// </summary>\n    public sealed class PlayerActor : PlayerActorBase<PlayerModel>, IPlayerModelServerListener\n    {\n        public PlayerActor(EntityId playerId) : base(playerId)\n        {\n        }\n\n        protected override string RandomNewPlayerName()\n        {\n            return Invariant($\"Guest {new Random().Next(100_000)}\");\n        }\n\n        protected override void OnSwitchedToModel(PlayerModel model)\n        {\n            model.ServerListener = this;\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Properties/launchSettings.json", "Text": "{\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\n  \"profiles\": {\n    \"Server\": {\n      \"commandName\": \"Project\",\n      \"launchBrowser\": false,\n      \"environmentVariables\": {\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\n      }\n    }\n  }\n}"}, {"Path": "Backend/Server/Secrets/README.txt", "Text": "We recommend storing important secrets in AWS Secrets Manager instead of in\nthe code repository. Storing secrets in the code repository is not recommended,\nbecause there they are visible to anyone who is able to read the repository\n(whether intended or leaked). Also, simply deleting a file that has been in\nthe repository is generally not enough, because it remains in the repository's\nhistory; if leaked, a secret should be rotated by revoking the old one and\nissuing a new one.\n\nDespite being named Secrets, this directory isn't treated any more\nsecurely than any of the other directories, such as for example ../Config. In\nparticular, it's in the repository like anything else, and it gets baked in the\nserver image the same way as ../Config. This directory should only be used for\nlocal development convenience and only for low-value secrets that would not\ncause damage if leaked.\n\nIn a cloud environment, the game backend is able to read its secrets from\nAWS Secrets Manager, which is a more secure place to store important secrets.\n\nYou can use the following syntax in the Options.*.yaml files (in ../Config)\nto tell the server to fetch a server from AWS Secrets Manager instead\nof the local filesystem:\n  aws-sm://<region>#<path-to-secret>\nFor example:\n  PushNotification:\n    FirebaseCredentialsPath: \"aws-sm://eu-west-1#mygame/myenvironment/firebase-credentials\"\n\nEspecially production-environment secrets should never be stored in the\nrepository. You should make sure that production and development environments\ndo not use the same secrets.\n"}, {"Path": "Backend/Server/Server.csproj", "Text": "\ufeff<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <OutputType>Exe</OutputType>\n    <Version>0.1.0.0</Version>\n    <LangVersion>Latest</LangVersion>\n    <RunWorkingDirectory>$(MSBuildProjectDirectory)</RunWorkingDirectory>\n    <StartWorkingDirectory>.</StartWorkingDirectory>\n    <ExternalConsole>true</ExternalConsole>\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\n    <ServerGarbageCollection>true</ServerGarbageCollection>\n    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <ProjectReference Include=\"$(MetaplayServerPath)\\CodeAnalyzers\\Metaplay.CodeAnalyzers.csproj\">\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n      <OutputItemType>Analyzer</OutputItemType>\n    </ProjectReference>\n    <ProjectReference Include=\"$(MetaplayServerPath)\\CodeAnalyzers.Shared\\Metaplay.CodeAnalyzers.Shared.csproj\">\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n      <OutputItemType>Analyzer</OutputItemType>\n    </ProjectReference>\n    <ProjectReference Include=\"..\\SharedCode\\SharedCode.csproj\" />\n    <ProjectReference Include=\"$(MetaplayServerPath)\\Server\\Metaplay.Server.csproj\" />\n  </ItemGroup>\n</Project>\n"}, {"Path": "Backend/Server/ServerMain.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Metaplay.Core;\nusing Metaplay.Server;\nusing System;\nusing System.Threading.Tasks;\n\nnamespace Game.Server\n{\n    /// <summary>\n    /// Game-specific server entrypoint.\n    /// </summary>\n    class ServerMain : ServerMainBase\n    {\n        public ServerMain()\n        {\n        }\n\n        protected override void HandleKeyPress(ConsoleKeyInfo key)\n        {\n            switch (key.Key)\n            {\n                case ConsoleKey.K:\n                    MetaTime before = MetaTime.Now;\n                    MetaTime.DebugTimeOffset += MetaDuration.FromMinutes(10);\n                    MetaTime after = MetaTime.Now;\n                    Console.WriteLine(\"Skipping 10min forward from {0} to {1}\", before, after);\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        static async Task<int> Main(string[] cmdLineArgs)\n        {\n            using ServerMain program = new ServerMain();\n            return await program.RunServerAsync(cmdLineArgs);\n        }\n    }\n}\n"}, {"Path": "Backend/Server/Session/SessionActor.cs", "Text": "// This file is part of Metaplay SDK which is released under the Metaplay SDK License.\n\nusing Metaplay.Cloud.Entity;\nusing Metaplay.Core;\nusing Metaplay.Server;\nusing System;\n\nnamespace Game.Server\n{\n    [EntityConfig]\n    public class SessionConfig : SessionConfigBase\n    {\n        public override Type EntityActorType => typeof(SessionActor);\n    }\n\n    public class SessionActor : SessionActorBase\n    {\n        public SessionActor(EntityId entityId) : base(entityId)\n        {\n        }\n    }\n}\n"}, {"Path": "Backend/SharedCode/SharedCode.csproj", "Text": "\ufeff<Project Sdk=\"Microsoft.NET.Sdk\" ToolsVersion=\"15.0\">\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <LangVersion>Latest</LangVersion>\n    <RootNamespace>Game.Cloud</RootNamespace>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <Compile Include=\"$(SharedCodePath)\\**\\*.cs\" LinkBase=\"SharedCode\" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <ProjectReference Include=\"$(MetaplayServerPath)\\Cloud\\Metaplay.Cloud.csproj\" />\n    <ProjectReference Include=\"$(MetaplayServerPath)\\CodeAnalyzers\\Metaplay.CodeAnalyzers.csproj\">\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n      <OutputItemType>Analyzer</OutputItemType>\n    </ProjectReference>\n    <ProjectReference Include=\"$(MetaplayServerPath)\\CodeAnalyzers.Shared\\Metaplay.CodeAnalyzers.Shared.csproj\">\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\n      <OutputItemType>Analyzer</OutputItemType>\n    </ProjectReference>\n  </ItemGroup>\n</Project>\n"}, {"Path": "Backend/global.json", "Text": "{\n  \"sdk\": {\n    \"version\": \"8.0.100\",\n    \"rollForward\": \"latestFeature\"\n  }\n}\n"}, {"Path": "Backend/{{{BACKEND_SOLUTION_FILENAME}}}", "Text": "Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.1.32319.34\nMinimumVisualStudioVersion = 10.0.40219.1\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Server\", \"Server\\Server.csproj\", \"{D9241512-4C7C-45FB-A6DE-458CC0A0CAC5}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"SharedCode\", \"SharedCode\\SharedCode.csproj\", \"{D3CE2986-5A54-4300-9AA8-5E0D3434B69F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"BotClient\", \"BotClient\\BotClient.csproj\", \"{7DD0C5D4-A9DB-4095-8131-36A9E279E83F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Metaplay.CodeAnalyzers\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\CodeAnalyzers\\Metaplay.CodeAnalyzers.csproj\", \"{19833824-0860-4B0F-AA4C-9E2F432457BF}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Metaplay.Cloud\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\Cloud\\Metaplay.Cloud.csproj\", \"{29CE7304-7BE6-4FB1-A8FC-D039FB2F887F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Metaplay.Cloud.Tests\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\Cloud.Tests\\Metaplay.Cloud.Tests.csproj\", \"{F02410F5-C1A9-4CFE-AABF-D359DA401414}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Metaplay.BotClient\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\BotClient\\Metaplay.BotClient.csproj\", \"{10486FA8-4C14-4B70-918F-9DCD0D040F2F}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Metaplay.Server\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\Server\\Metaplay.Server.csproj\", \"{4872EC66-CC15-45B5-A04A-9B23738907A3}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Metaplay.Server.Tests\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\Server.Tests\\Metaplay.Server.Tests.csproj\", \"{461C272D-8223-4A9B-A438-81F4191E14CD}\"\nEndProject\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Metaplay.ServerShared\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\ServerShared\\Metaplay.ServerShared.csproj\", \"{9AE1542B-B249-40E3-944F-173794C6A1CB}\"\nEndProject\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Metaplay\", \"Metaplay\", \"{2F8753F0-DE68-46AE-8D03-2839C606D479}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Metaplay.Attributes\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\Attributes\\Metaplay.Attributes.csproj\", \"{EF974D37-B273-4552-90F4-B374AA2DA14B}\"\nEndProject\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Metaplay.CodeAnalyzers.Shared\", \"..\\{{{RELATIVE_PATH_TO_SDK}}}\\Backend\\CodeAnalyzers.Shared\\Metaplay.CodeAnalyzers.Shared.csproj\", \"{28684B9A-265C-4380-8C4F-E5D3A309C30E}\"\nEndProject\nGlobal\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n\t\tDebug|Any CPU = Debug|Any CPU\n\t\tRelease|Any CPU = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n\t\t{D9241512-4C7C-45FB-A6DE-458CC0A0CAC5}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D9241512-4C7C-45FB-A6DE-458CC0A0CAC5}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D9241512-4C7C-45FB-A6DE-458CC0A0CAC5}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D9241512-4C7C-45FB-A6DE-458CC0A0CAC5}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{D3CE2986-5A54-4300-9AA8-5E0D3434B69F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{D3CE2986-5A54-4300-9AA8-5E0D3434B69F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{D3CE2986-5A54-4300-9AA8-5E0D3434B69F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{D3CE2986-5A54-4300-9AA8-5E0D3434B69F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{7DD0C5D4-A9DB-4095-8131-36A9E279E83F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{7DD0C5D4-A9DB-4095-8131-36A9E279E83F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{7DD0C5D4-A9DB-4095-8131-36A9E279E83F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{7DD0C5D4-A9DB-4095-8131-36A9E279E83F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{19833824-0860-4B0F-AA4C-9E2F432457BF}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{19833824-0860-4B0F-AA4C-9E2F432457BF}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{19833824-0860-4B0F-AA4C-9E2F432457BF}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{19833824-0860-4B0F-AA4C-9E2F432457BF}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{29CE7304-7BE6-4FB1-A8FC-D039FB2F887F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{29CE7304-7BE6-4FB1-A8FC-D039FB2F887F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{29CE7304-7BE6-4FB1-A8FC-D039FB2F887F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{29CE7304-7BE6-4FB1-A8FC-D039FB2F887F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{F02410F5-C1A9-4CFE-AABF-D359DA401414}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{F02410F5-C1A9-4CFE-AABF-D359DA401414}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{F02410F5-C1A9-4CFE-AABF-D359DA401414}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{F02410F5-C1A9-4CFE-AABF-D359DA401414}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{10486FA8-4C14-4B70-918F-9DCD0D040F2F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{10486FA8-4C14-4B70-918F-9DCD0D040F2F}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{10486FA8-4C14-4B70-918F-9DCD0D040F2F}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{10486FA8-4C14-4B70-918F-9DCD0D040F2F}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{4872EC66-CC15-45B5-A04A-9B23738907A3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{4872EC66-CC15-45B5-A04A-9B23738907A3}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{4872EC66-CC15-45B5-A04A-9B23738907A3}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{4872EC66-CC15-45B5-A04A-9B23738907A3}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{461C272D-8223-4A9B-A438-81F4191E14CD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{461C272D-8223-4A9B-A438-81F4191E14CD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{461C272D-8223-4A9B-A438-81F4191E14CD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{461C272D-8223-4A9B-A438-81F4191E14CD}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{9AE1542B-B249-40E3-944F-173794C6A1CB}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{9AE1542B-B249-40E3-944F-173794C6A1CB}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{9AE1542B-B249-40E3-944F-173794C6A1CB}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{9AE1542B-B249-40E3-944F-173794C6A1CB}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{EF974D37-B273-4552-90F4-B374AA2DA14B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{EF974D37-B273-4552-90F4-B374AA2DA14B}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{EF974D37-B273-4552-90F4-B374AA2DA14B}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{EF974D37-B273-4552-90F4-B374AA2DA14B}.Release|Any CPU.Build.0 = Release|Any CPU\n\t\t{28684B9A-265C-4380-8C4F-E5D3A309C30E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n\t\t{28684B9A-265C-4380-8C4F-E5D3A309C30E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n\t\t{28684B9A-265C-4380-8C4F-E5D3A309C30E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n\t\t{28684B9A-265C-4380-8C4F-E5D3A309C30E}.Release|Any CPU.Build.0 = Release|Any CPU\n\tEndGlobalSection\n\tGlobalSection(SolutionProperties) = preSolution\n\t\tHideSolutionNode = FALSE\n\tEndGlobalSection\n\tGlobalSection(NestedProjects) = preSolution\n\t\t{19833824-0860-4B0F-AA4C-9E2F432457BF} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{29CE7304-7BE6-4FB1-A8FC-D039FB2F887F} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{F02410F5-C1A9-4CFE-AABF-D359DA401414} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{10486FA8-4C14-4B70-918F-9DCD0D040F2F} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{4872EC66-CC15-45B5-A04A-9B23738907A3} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{461C272D-8223-4A9B-A438-81F4191E14CD} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{9AE1542B-B249-40E3-944F-173794C6A1CB} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{EF974D37-B273-4552-90F4-B374AA2DA14B} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\t\t{28684B9A-265C-4380-8C4F-E5D3A309C30E} = {2F8753F0-DE68-46AE-8D03-2839C606D479}\n\tEndGlobalSection\n\tGlobalSection(ExtensibilityGlobals) = postSolution\n\t\tSolutionGuid = {459DC6E2-C7EC-46EA-8009-EFAE0FBAA10E}\n\tEndGlobalSection\nEndGlobal\n"}]}