// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bigquery_schema.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Metaplay.Cloud.Analytics.BigQuery {

  /// <summary>Holder for reflection information generated from bigquery_schema.proto</summary>
  public static partial class BigquerySchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for bigquery_schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BigquerySchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChViaWdxdWVyeV9zY2hlbWEucHJvdG8i8AMKBUV2ZW50EhEKCXNvdXJjZV9p",
            "ZBgBIAIoCRIQCghldmVudF9pZBgCIAIoCRIXCg9ldmVudF90aW1lc3RhbXAY",
            "AyACKAkSEgoKZXZlbnRfbmFtZRgEIAIoCRIcChRldmVudF9zY2hlbWFfdmVy",
            "c2lvbhgFIAIoBRInCgxldmVudF9wYXJhbXMYBiADKAsyES5FdmVudC5FdmVu",
            "dFBhcmFtEh0KBnBsYXllchgHIAEoCzINLkV2ZW50LlBsYXllchIcCgZsYWJl",
            "bHMYCCADKAsyDC5FdmVudC5MYWJlbBpnCgpFdmVudFBhcmFtEgsKA2tleRgB",
            "IAIoCRIWCgxzdHJpbmdfdmFsdWUYAiABKAlIABITCglpbnRfdmFsdWUYAyAB",
            "KAVIABIWCgxkb3VibGVfdmFsdWUYBCABKAFIAEIHCgV2YWx1ZRoxCgpFeHBl",
            "cmltZW50EhIKCmV4cGVyaW1lbnQYASACKAkSDwoHdmFyaWFudBgCIAIoCRor",
            "CgVMYWJlbBIMCgRuYW1lGAEgAigJEhQKDHN0cmluZ192YWx1ZRgCIAIoCRpI",
            "CgZQbGF5ZXISFgoOc2Vzc2lvbl9udW1iZXIYASABKAUSJgoLZXhwZXJpbWVu",
            "dHMYAiADKAsyES5FdmVudC5FeHBlcmltZW50QiSqAiFNZXRhcGxheS5DbG91",
            "ZC5BbmFseXRpY3MuQmlnUXVlcnk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Metaplay.Cloud.Analytics.BigQuery.Event), global::Metaplay.Cloud.Analytics.BigQuery.Event.Parser, new[]{ "SourceId", "EventId", "EventTimestamp", "EventName", "EventSchemaVersion", "EventParams", "Player", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.EventParam), global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.EventParam.Parser, new[]{ "Key", "StringValue", "IntValue", "DoubleValue" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Experiment), global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Experiment.Parser, new[]{ "Experiment_", "Variant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Label), global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Label.Parser, new[]{ "Name", "StringValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Player), global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Player.Parser, new[]{ "SessionNumber", "Experiments" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Event : pb::IMessage<Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Metaplay.Cloud.Analytics.BigQuery.BigquerySchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event(Event other) : this() {
      _hasBits0 = other._hasBits0;
      sourceId_ = other.sourceId_;
      eventId_ = other.eventId_;
      eventTimestamp_ = other.eventTimestamp_;
      eventName_ = other.eventName_;
      eventSchemaVersion_ = other.eventSchemaVersion_;
      eventParams_ = other.eventParams_.Clone();
      player_ = other.player_ != null ? other.player_.Clone() : null;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "source_id" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private readonly static string SourceIdDefaultValue = "";

    private string sourceId_;
    /// <summary>
    /// EntityId of the source entity. For players, this is for example Player:0a23456789. Can be other entities as well, like Guild:XXX.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceId {
      get { return sourceId_ ?? SourceIdDefaultValue; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceId {
      get { return sourceId_ != null; }
    }
    /// <summary>Clears the value of the "source_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceId() {
      sourceId_ = null;
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private readonly static string EventIdDefaultValue = "";

    private string eventId_;
    /// <summary>
    /// An unique ID of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_ ?? EventIdDefaultValue; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "event_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventId {
      get { return eventId_ != null; }
    }
    /// <summary>Clears the value of the "event_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventId() {
      eventId_ = null;
    }

    /// <summary>Field number for the "event_timestamp" field.</summary>
    public const int EventTimestampFieldNumber = 3;
    private readonly static string EventTimestampDefaultValue = "";

    private string eventTimestamp_;
    /// <summary>
    /// Timestamp of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventTimestamp {
      get { return eventTimestamp_ ?? EventTimestampDefaultValue; }
      set {
        eventTimestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "event_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventTimestamp {
      get { return eventTimestamp_ != null; }
    }
    /// <summary>Clears the value of the "event_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventTimestamp() {
      eventTimestamp_ = null;
    }

    /// <summary>Field number for the "event_name" field.</summary>
    public const int EventNameFieldNumber = 4;
    private readonly static string EventNameDefaultValue = "";

    private string eventName_;
    /// <summary>
    /// Name of the event. The name of the analytics event type in server code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventName {
      get { return eventName_ ?? EventNameDefaultValue; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "event_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventName {
      get { return eventName_ != null; }
    }
    /// <summary>Clears the value of the "event_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventName() {
      eventName_ = null;
    }

    /// <summary>Field number for the "event_schema_version" field.</summary>
    public const int EventSchemaVersionFieldNumber = 5;
    private readonly static int EventSchemaVersionDefaultValue = 0;

    private int eventSchemaVersion_;
    /// <summary>
    /// Schema version of the event parameter data. Developer bumps this if the event class in code changes shape.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventSchemaVersion {
      get { if ((_hasBits0 & 1) != 0) { return eventSchemaVersion_; } else { return EventSchemaVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        eventSchemaVersion_ = value;
      }
    }
    /// <summary>Gets whether the "event_schema_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventSchemaVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "event_schema_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventSchemaVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "event_params" field.</summary>
    public const int EventParamsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.EventParam> _repeated_eventParams_codec
        = pb::FieldCodec.ForMessage(50, global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.EventParam.Parser);
    private readonly pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.EventParam> eventParams_ = new pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.EventParam>();
    /// <summary>
    /// Event-specific key-to-value mapping
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.EventParam> EventParams {
      get { return eventParams_; }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 7;
    private global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Player player_;
    /// <summary>
    /// The context of the player entity. Null for non-player events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Player Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Label> _repeated_labels_codec
        = pb::FieldCodec.ForMessage(66, global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Label.Parser);
    private readonly pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Label> labels_ = new pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Label>();
    /// <summary>
    /// The custom labels assigned by the source entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Label> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (EventId != other.EventId) return false;
      if (EventTimestamp != other.EventTimestamp) return false;
      if (EventName != other.EventName) return false;
      if (EventSchemaVersion != other.EventSchemaVersion) return false;
      if(!eventParams_.Equals(other.eventParams_)) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if(!labels_.Equals(other.labels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSourceId) hash ^= SourceId.GetHashCode();
      if (HasEventId) hash ^= EventId.GetHashCode();
      if (HasEventTimestamp) hash ^= EventTimestamp.GetHashCode();
      if (HasEventName) hash ^= EventName.GetHashCode();
      if (HasEventSchemaVersion) hash ^= EventSchemaVersion.GetHashCode();
      hash ^= eventParams_.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      hash ^= labels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSourceId) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (HasEventId) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      if (HasEventTimestamp) {
        output.WriteRawTag(26);
        output.WriteString(EventTimestamp);
      }
      if (HasEventName) {
        output.WriteRawTag(34);
        output.WriteString(EventName);
      }
      if (HasEventSchemaVersion) {
        output.WriteRawTag(40);
        output.WriteInt32(EventSchemaVersion);
      }
      eventParams_.WriteTo(output, _repeated_eventParams_codec);
      if (player_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Player);
      }
      labels_.WriteTo(output, _repeated_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSourceId) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (HasEventId) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      if (HasEventTimestamp) {
        output.WriteRawTag(26);
        output.WriteString(EventTimestamp);
      }
      if (HasEventName) {
        output.WriteRawTag(34);
        output.WriteString(EventName);
      }
      if (HasEventSchemaVersion) {
        output.WriteRawTag(40);
        output.WriteInt32(EventSchemaVersion);
      }
      eventParams_.WriteTo(ref output, _repeated_eventParams_codec);
      if (player_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Player);
      }
      labels_.WriteTo(ref output, _repeated_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSourceId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (HasEventId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (HasEventTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventTimestamp);
      }
      if (HasEventName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (HasEventSchemaVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventSchemaVersion);
      }
      size += eventParams_.CalculateSize(_repeated_eventParams_codec);
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      size += labels_.CalculateSize(_repeated_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.HasSourceId) {
        SourceId = other.SourceId;
      }
      if (other.HasEventId) {
        EventId = other.EventId;
      }
      if (other.HasEventTimestamp) {
        EventTimestamp = other.EventTimestamp;
      }
      if (other.HasEventName) {
        EventName = other.EventName;
      }
      if (other.HasEventSchemaVersion) {
        EventSchemaVersion = other.EventSchemaVersion;
      }
      eventParams_.Add(other.eventParams_);
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Player();
        }
        Player.MergeFrom(other.Player);
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
          case 26: {
            EventTimestamp = input.ReadString();
            break;
          }
          case 34: {
            EventName = input.ReadString();
            break;
          }
          case 40: {
            EventSchemaVersion = input.ReadInt32();
            break;
          }
          case 50: {
            eventParams_.AddEntriesFrom(input, _repeated_eventParams_codec);
            break;
          }
          case 58: {
            if (player_ == null) {
              Player = new global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
          case 26: {
            EventTimestamp = input.ReadString();
            break;
          }
          case 34: {
            EventName = input.ReadString();
            break;
          }
          case 40: {
            EventSchemaVersion = input.ReadInt32();
            break;
          }
          case 50: {
            eventParams_.AddEntriesFrom(ref input, _repeated_eventParams_codec);
            break;
          }
          case 58: {
            if (player_ == null) {
              Player = new global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Player();
            }
            input.ReadMessage(Player);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Event message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class EventParam : pb::IMessage<EventParam>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EventParam> _parser = new pb::MessageParser<EventParam>(() => new EventParam());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<EventParam> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Metaplay.Cloud.Analytics.BigQuery.Event.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EventParam() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EventParam(EventParam other) : this() {
          key_ = other.key_;
          switch (other.ValueCase) {
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EventParam Clone() {
          return new EventParam(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private readonly static string KeyDefaultValue = "";

        private string key_;
        /// <summary>
        /// Name of the event param.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Key {
          get { return key_ ?? KeyDefaultValue; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "key" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasKey {
          get { return key_ != null; }
        }
        /// <summary>Clears the value of the "key" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearKey() {
          key_ = null;
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 2;
        /// <summary>
        /// String value of the event param if param is string.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string StringValue {
          get { return HasStringValue ? (string) value_ : ""; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.StringValue;
          }
        }
        /// <summary>Gets whether the "string_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStringValue {
          get { return valueCase_ == ValueOneofCase.StringValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "string_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStringValue() {
          if (HasStringValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "int_value" field.</summary>
        public const int IntValueFieldNumber = 3;
        /// <summary>
        /// Integer value of the event param if param is integer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int IntValue {
          get { return HasIntValue ? (int) value_ : 0; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.IntValue;
          }
        }
        /// <summary>Gets whether the "int_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIntValue {
          get { return valueCase_ == ValueOneofCase.IntValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "int_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIntValue() {
          if (HasIntValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 4;
        /// <summary>
        /// Floating point value of the event param if param is floating point.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double DoubleValue {
          get { return HasDoubleValue ? (double) value_ : 0D; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.DoubleValue;
          }
        }
        /// <summary>Gets whether the "double_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDoubleValue {
          get { return valueCase_ == ValueOneofCase.DoubleValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "double_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDoubleValue() {
          if (HasDoubleValue) {
            ClearValue();
          }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase {
          None = 0,
          StringValue = 2,
          IntValue = 3,
          DoubleValue = 4,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ValueOneofCase ValueCase {
          get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValue() {
          valueCase_ = ValueOneofCase.None;
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as EventParam);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(EventParam other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (StringValue != other.StringValue) return false;
          if (IntValue != other.IntValue) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
          if (ValueCase != other.ValueCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasKey) hash ^= Key.GetHashCode();
          if (HasStringValue) hash ^= StringValue.GetHashCode();
          if (HasIntValue) hash ^= IntValue.GetHashCode();
          if (HasDoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
          hash ^= (int) valueCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasKey) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (HasStringValue) {
            output.WriteRawTag(18);
            output.WriteString(StringValue);
          }
          if (HasIntValue) {
            output.WriteRawTag(24);
            output.WriteInt32(IntValue);
          }
          if (HasDoubleValue) {
            output.WriteRawTag(33);
            output.WriteDouble(DoubleValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasKey) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (HasStringValue) {
            output.WriteRawTag(18);
            output.WriteString(StringValue);
          }
          if (HasIntValue) {
            output.WriteRawTag(24);
            output.WriteInt32(IntValue);
          }
          if (HasDoubleValue) {
            output.WriteRawTag(33);
            output.WriteDouble(DoubleValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasKey) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (HasStringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (HasIntValue) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntValue);
          }
          if (HasDoubleValue) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(EventParam other) {
          if (other == null) {
            return;
          }
          if (other.HasKey) {
            Key = other.Key;
          }
          switch (other.ValueCase) {
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                StringValue = input.ReadString();
                break;
              }
              case 24: {
                IntValue = input.ReadInt32();
                break;
              }
              case 33: {
                DoubleValue = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                StringValue = input.ReadString();
                break;
              }
              case 24: {
                IntValue = input.ReadInt32();
                break;
              }
              case 33: {
                DoubleValue = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Experiment : pb::IMessage<Experiment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Experiment> _parser = new pb::MessageParser<Experiment>(() => new Experiment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Experiment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Metaplay.Cloud.Analytics.BigQuery.Event.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Experiment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Experiment(Experiment other) : this() {
          experiment_ = other.experiment_;
          variant_ = other.variant_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Experiment Clone() {
          return new Experiment(this);
        }

        /// <summary>Field number for the "experiment" field.</summary>
        public const int Experiment_FieldNumber = 1;
        private readonly static string Experiment_DefaultValue = "";

        private string experiment_;
        /// <summary>
        /// The Analytics ID of the experiment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Experiment_ {
          get { return experiment_ ?? Experiment_DefaultValue; }
          set {
            experiment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "experiment" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasExperiment_ {
          get { return experiment_ != null; }
        }
        /// <summary>Clears the value of the "experiment" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearExperiment_() {
          experiment_ = null;
        }

        /// <summary>Field number for the "variant" field.</summary>
        public const int VariantFieldNumber = 2;
        private readonly static string VariantDefaultValue = "";

        private string variant_;
        /// <summary>
        /// The Analytics ID of the experiment variant.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Variant {
          get { return variant_ ?? VariantDefaultValue; }
          set {
            variant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "variant" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVariant {
          get { return variant_ != null; }
        }
        /// <summary>Clears the value of the "variant" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVariant() {
          variant_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Experiment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Experiment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Experiment_ != other.Experiment_) return false;
          if (Variant != other.Variant) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasExperiment_) hash ^= Experiment_.GetHashCode();
          if (HasVariant) hash ^= Variant.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasExperiment_) {
            output.WriteRawTag(10);
            output.WriteString(Experiment_);
          }
          if (HasVariant) {
            output.WriteRawTag(18);
            output.WriteString(Variant);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasExperiment_) {
            output.WriteRawTag(10);
            output.WriteString(Experiment_);
          }
          if (HasVariant) {
            output.WriteRawTag(18);
            output.WriteString(Variant);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasExperiment_) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Experiment_);
          }
          if (HasVariant) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Variant);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Experiment other) {
          if (other == null) {
            return;
          }
          if (other.HasExperiment_) {
            Experiment_ = other.Experiment_;
          }
          if (other.HasVariant) {
            Variant = other.Variant;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Experiment_ = input.ReadString();
                break;
              }
              case 18: {
                Variant = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Experiment_ = input.ReadString();
                break;
              }
              case 18: {
                Variant = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Label : pb::IMessage<Label>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Label> _parser = new pb::MessageParser<Label>(() => new Label());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Label> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Metaplay.Cloud.Analytics.BigQuery.Event.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Label() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Label(Label other) : this() {
          name_ = other.name_;
          stringValue_ = other.stringValue_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Label Clone() {
          return new Label(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// The name of the custom label.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 2;
        private readonly static string StringValueDefaultValue = "";

        private string stringValue_;
        /// <summary>
        /// The string value of the custom label.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string StringValue {
          get { return stringValue_ ?? StringValueDefaultValue; }
          set {
            stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "string_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStringValue {
          get { return stringValue_ != null; }
        }
        /// <summary>Clears the value of the "string_value" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStringValue() {
          stringValue_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Label);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Label other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (StringValue != other.StringValue) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasStringValue) hash ^= StringValue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasStringValue) {
            output.WriteRawTag(18);
            output.WriteString(StringValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasStringValue) {
            output.WriteRawTag(18);
            output.WriteString(StringValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasStringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Label other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasStringValue) {
            StringValue = other.StringValue;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                StringValue = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                StringValue = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Player : pb::IMessage<Player>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Player> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Metaplay.Cloud.Analytics.BigQuery.Event.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Player() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Player(Player other) : this() {
          _hasBits0 = other._hasBits0;
          sessionNumber_ = other.sessionNumber_;
          experiments_ = other.experiments_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Player Clone() {
          return new Player(this);
        }

        /// <summary>Field number for the "session_number" field.</summary>
        public const int SessionNumberFieldNumber = 1;
        private readonly static int SessionNumberDefaultValue = 0;

        private int sessionNumber_;
        /// <summary>
        /// The (nullable) session number of the player. For the first session of the player, this will be 1, and increase by one for each subsequent session. If there is no session, the value is null.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SessionNumber {
          get { if ((_hasBits0 & 1) != 0) { return sessionNumber_; } else { return SessionNumberDefaultValue; } }
          set {
            _hasBits0 |= 1;
            sessionNumber_ = value;
          }
        }
        /// <summary>Gets whether the "session_number" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSessionNumber {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "session_number" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSessionNumber() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "experiments" field.</summary>
        public const int ExperimentsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Experiment> _repeated_experiments_codec
            = pb::FieldCodec.ForMessage(18, global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Experiment.Parser);
        private readonly pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Experiment> experiments_ = new pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Experiment>();
        /// <summary>
        /// The active experiments of the player. Empty list for non-player events.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Metaplay.Cloud.Analytics.BigQuery.Event.Types.Experiment> Experiments {
          get { return experiments_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Player);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Player other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SessionNumber != other.SessionNumber) return false;
          if(!experiments_.Equals(other.experiments_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSessionNumber) hash ^= SessionNumber.GetHashCode();
          hash ^= experiments_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSessionNumber) {
            output.WriteRawTag(8);
            output.WriteInt32(SessionNumber);
          }
          experiments_.WriteTo(output, _repeated_experiments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSessionNumber) {
            output.WriteRawTag(8);
            output.WriteInt32(SessionNumber);
          }
          experiments_.WriteTo(ref output, _repeated_experiments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSessionNumber) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionNumber);
          }
          size += experiments_.CalculateSize(_repeated_experiments_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Player other) {
          if (other == null) {
            return;
          }
          if (other.HasSessionNumber) {
            SessionNumber = other.SessionNumber;
          }
          experiments_.Add(other.experiments_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SessionNumber = input.ReadInt32();
                break;
              }
              case 18: {
                experiments_.AddEntriesFrom(input, _repeated_experiments_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SessionNumber = input.ReadInt32();
                break;
              }
              case 18: {
                experiments_.AddEntriesFrom(ref input, _repeated_experiments_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
