import{d as N,x as L,c as u,f as w,h as T,bf as A,C as D,ad as M,aU as q,o as O,e as V,_ as $}from"./index-B7jvAjdE.js";import{E as G,a as K,b as x,w as B,g as F,c as W,M as U}from"./MetaEventStreamCard-D_xDm3jw.js";import{A as E}from"./apiPoller-8-xtB3Lu.js";import{g as H}from"./analyticsEvents-CRLHbRhO.js";import{k as z}from"./keyBy-D62UaquR.js";import"./MInputMultiSelectCheckbox-D_9f7ub1.js";import"./MInputCheckbox-BqateWtE.js";import"./index-B_QkKjtG.js";import"./MInputHintMessage-DbuBS4Kn.js";import"./MInputSingleSelectSwitch-CuptGC6e.js";import"./index-CDBqmjrS.js";import"./MInputSimpleSelectDropdown-DIlBEFcs.js";import"./index-qTA83-by.js";import"./MInputText-CzhsT8yb.js";import"./debounce-B8gTqdZO.js";import"./isSymbol-B7ZrWRtH.js";import"./_baseEach-BTXG47Wn.js";import"./_baseIteratee-BXhw53re.js";import"./toString-DMHXP3G8.js";import"./identity-DKeuBCMA.js";const j=N({__name:"EntityEventLogCard",props:{entityKind:{},entityId:{},entityResetTimestamp:{default:null},utilitiesMode:{default:"filter"},searchPreHighlight:{default:""},freezeSearch:{type:Boolean},keywordPreFilters:{default:()=>[]},eventTypePreFilters:{default:()=>[]},maxHeight:{default:"30rem"},fetchPollingInterval:{default:5e3},fetchPageSize:{default:1e3},folding:{default:"session"},showViewMoreLink:{type:Boolean,default:!0}},emits:["stats"],setup(h,{expose:S,emit:n}){S();const o=q(),y=M(),t=h,P=n,{data:C}=L(H()),I=u(()=>z(C.value,e=>e.type.split(",")[0]));let l,d,s,c;const f=w(!1);T(async()=>{k.value?await m():f.value=!1}),A(()=>{l?.stop(),s?.stop()});const v=u(()=>{let e="";if(typeof t.entityId=="string"?e=t.entityId:e=t.entityId(),!e)throw new Error("Entity Id cannot be empty or undefined.");return e});D([()=>v.value,()=>t.entityResetTimestamp],async()=>{await m()});const p=u(()=>{if(t.entityKind==="Player")return`/players/${v.value}/eventLog`;if(t.entityKind==="Guild")return`/guilds/${v.value}/eventLog`;throw new Error("Invalid entityKind for EntityEventLogCard: "+t.entityKind)}),r=w([]);async function m(){r.value=[],f.value=!0,l&&(l.stop(),l=void 0),s&&(s.stop(),s=void 0);const e=(await y.request({method:"GET",url:p.value,params:{startCursor:"$newest",numEntries:1,scanDirection:"towardsNewer"}})).data;if(e.failedWithDesync)throw new Error("Initial request from cursor $newest should never result in a desync.");const i=e.startCursor;d=i,c=i,l=new E(()=>t.fetchPollingInterval,"GET",p.value,()=>({startCursor:d,numEntries:t.fetchPageSize,scanDirection:"towardsNewer"}),a=>{a.failedWithDesync?m():(a.entries.length>0&&(r.value=r.value.concat(a.entries),g()),d=a.continuationCursor)}),s=new E(100,"GET",p.value,()=>({startCursor:c,numEntries:t.fetchPageSize,scanDirection:"towardsOlder"}),a=>{a.failedWithDesync?m():(a.entries.length>0&&(r.value=a.entries.concat(r.value),g(),c=a.continuationCursor),a.entries.length<t.fetchPageSize&&(s?.stop(),f.value=!1))})}const R=u(()=>{if(r.value.length>0){let e=r.value.map(i=>new G(i.collectedAt,I.value[i.payload.$type].displayName||i.payload.$type,i.payload.eventDescription,i.uniqueId,i,"","timeline",`/entityEventLog/${t.entityKind}/${v.value}?search=${i.uniqueId}`));return t.folding==="session"?e=K(e):t.folding==="day"&&(e=x(e)),e=B(e),P("stats",F(e)),e}else return null});function g(){if(r.value.length>0)for(let e=1;e<r.value.length;e++)r.value[e].sequentialId!==r.value[e-1].sequentialId+1&&console.warn(`Gap in event log: entry ${r.value[e].sequentialId} follows ${r.value[e-1].sequentialId}`)}const k=u(()=>o.doesHavePermission(b.value)),b=u(()=>{if(t.entityKind==="Player")return"api.players.view";if(t.entityKind==="Guild")return"api.guilds.view";throw new Error("Invalid entityKind for EntityEventLogCard: "+t.entityKind)}),_={permissions:o,gameServerApi:y,props:t,emit:P,analyticsEvents:C,analyticsEventsByTypeName:I,get forwardEventsPoller(){return l},set forwardEventsPoller(e){l=e},get forwardEventScanCursor(){return d},set forwardEventScanCursor(e){d=e},get backwardEventsPoller(){return s},set backwardEventsPoller(e){s=e},get backwardEventScanCursor(){return c},set backwardEventScanCursor(e){c=e},backwardsEventsPollerActive:f,entityId:v,apiEndpoint:p,rawEvents:r,startFetchingData:m,eventStream:R,validateEventSequence:g,hasPermissionToGetEvents:k,requiredPermissionToGetEvents:b,get keyBy(){return z},computed:u,onMounted:T,onUnmounted:A,ref:w,watch:D,get EventStreamItemBase(){return W},get EventStreamItemEvent(){return G},get generateStats(){return F},get MetaEventStreamCard(){return U},get wrapDays(){return x},get wrapRepeatingEvents(){return B},get wrapSessions(){return K},get ApiPoller(){return E},get useGameServerApi(){return M},get usePermissions(){return q},get useSubscription(){return L},get getAllAnalyticsEventsSubscriptionOptions(){return H}};return Object.defineProperty(_,"__isScriptSetup",{enumerable:!1,value:!0}),_}});function J(h,S,n,o,y,t){return O(),V(o.MetaEventStreamCard,{title:`Latest ${n.entityKind} Events`,icon:"clipboard-list",eventStream:o.eventStream,eventStreamLoading:o.backwardsEventsPollerActive,utilitiesMode:n.utilitiesMode,searchPreHighlight:n.searchPreHighlight,keywordPreFilters:n.keywordPreFilters,eventTypePreFilters:n.eventTypePreFilters,maxHeight:n.maxHeight,permission:o.requiredPermissionToGetEvents,showTimeDeltas:n.folding!=="day",showViewMoreLink:n.showViewMoreLink,"allow-pausing":"","data-testid":"entity-event-log-card"},null,8,["title","eventStream","eventStreamLoading","utilitiesMode","searchPreHighlight","keywordPreFilters","eventTypePreFilters","maxHeight","permission","showTimeDeltas","showViewMoreLink"])}const ye=$(j,[["render",J],["__file","EntityEventLogCard.vue"]]);export{ye as default};
