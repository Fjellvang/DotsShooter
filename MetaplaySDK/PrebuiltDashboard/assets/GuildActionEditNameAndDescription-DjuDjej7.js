import{d as T,x as D,f as d,C as b,c as v,ad as N,ae as S,o as B,e as V,w as I,k as A,_ as C}from"./index-B7jvAjdE.js";import{m as h}from"./actionDebouncer-CJRtFyZn.js";import{m as y}from"./axiosActionHandler-rx_q8iFy.js";import{M as E}from"./MActionModalButton-CvWVuTB-.js";import{M as R}from"./MInputText-CzhsT8yb.js";import{g as w}from"./guilds-LGK3Q8Wf.js";import"./MActionModal-coQLkvWs.js";import"./index-fVjXqxSF.js";import"./MInputHintMessage-DbuBS4Kn.js";import"./debounce-B8gTqdZO.js";import"./isSymbol-B7ZrWRtH.js";const O=T({__name:"GuildActionEditNameAndDescription",props:{guildId:{}},setup(p,{expose:r}){r();const s=p,e=N(),{data:i,refresh:u}=D(w(s.guildId)),a=d(""),l=d(""),t=d("valid"),n=d("valid");function _(){a.value=i.value.model.displayName,l.value=i.value.model.description}const m=h(y(),o=>{o.data.displayNameWasValid?a.value===i.value?.model.displayName?t.value="no-change":t.value="valid":t.value="invalid",o.data.descriptionWasValid?l.value===i.value?.model.description?n.value="no-change":n.value="valid":n.value="invalid"},()=>{},500);b([a,l],(o,c)=>{a.value===i.value.model.displayName?t.value="no-change":o[0]!==c[0]&&(t.value="validating"),l.value===i.value.model.description?n.value="no-change":o[1]!==c[1]&&(n.value="validating"),m.requestAction({url:`/guilds/${i.value.id}/validateDetails`,method:"post",data:{newDisplayName:a.value,newDescription:l.value}})},{deep:!0});function k(o){return{valid:"success",invalid:"danger","no-change":"default",validating:"loading"}[o]??"danger"}const M=v(()=>t.value==="validating"||n.value==="validating"?"Validating...":t.value==="invalid"?"Invalid name. Check that it is filled in correctly to proceed.":n.value==="invalid"?"Invalid description. Check that it is filled in correctly to proceed.":t.value==="no-change"&&n.value==="no-change"?"Change the name or description to proceed.":void 0),{showSuccessNotification:g}=S();async function x(){try{await e.post(`/guilds/${i.value.id}/changeDetails`,{NewDisplayName:a.value,NewDescription:l.value});const o=`Guild renamed to '${a.value}'.`;g(o)}finally{u()}}const G=v(()=>{if(i.value.model.lifecyclePhase==="Closed")return"Guild is closed."}),f={props:s,gameServerApi:e,guildData:i,guildTriggerRefresh:u,newDisplayName:a,newDescription:l,validationStateDisplayName:t,validationStateDescription:n,resetModal:_,validationDebouncedAction:m,validationStateToVariant:k,okButtonDisabledReason:M,showSuccessNotification:g,updateNameAndDescription:x,triggerButtonDisabledReason:G,computed:v,ref:d,watch:b,get useGameServerApi(){return N},get makeAxiosActionHandler(){return y},get makeActionDebouncer(){return h},get MActionModalButton(){return E},get MInputText(){return R},get useNotifications(){return S},get useSubscription(){return D},get getSingleGuildSubscriptionOptions(){return w}};return Object.defineProperty(f,"__isScriptSetup",{enumerable:!1,value:!0}),f}});function U(p,r,s,e,i,u){return B(),V(e.MActionModalButton,{"modal-title":"Edit Guild Name and Description",action:e.updateNameAndDescription,"trigger-button-label":"Edit Name and Description","trigger-button-disabled-tooltip":e.triggerButtonDisabledReason,"ok-button-label":"Update","ok-button-disabled-tooltip":e.okButtonDisabledReason,permission:"api.guilds.edit_details",onShow:e.resetModal,"data-testid":"action-edit-details"},{default:I(()=>[A(e.MInputText,{class:"tw-mb-4",label:"Display Name","model-value":e.newDisplayName,variant:e.validationStateToVariant(e.validationStateDisplayName),"hint-message":"Same rules are applied to name validation as changing it in-game.","onUpdate:modelValue":r[0]||(r[0]=a=>e.newDisplayName=a)},null,8,["model-value","variant"]),A(e.MInputText,{label:"Description","model-value":e.newDescription,variant:e.validationStateToVariant(e.validationStateDescription),"onUpdate:modelValue":r[1]||(r[1]=a=>e.newDescription=a)},null,8,["model-value","variant"])],void 0,!0),_:1},8,["trigger-button-disabled-tooltip","ok-button-disabled-tooltip"])}const Y=C(O,[["render",U],["__file","GuildActionEditNameAndDescription.vue"]]);export{Y as default};
