import{d as T,x as m,cn as d,f as c,h as p,N as f,c as _,bf as v,L as y,b9 as z,b as E,o as i,e as M,w as b,n as k,t as x,k as g,a as r,p as O,_ as h}from"./index-B7jvAjdE.js";const I=T({__name:"MetaAudienceSizeEstimate",props:{sizeEstimate:{}},setup(l,{expose:s}){s();const e=l,{data:t}=m(d());let a;const n=c();p(()=>{a=setInterval(()=>{t.value?.lastUpdateTime?n.value=f.fromISO(t.value.lastUpdateTime).toRelative():n.value="some time ago"},1e3)});const o=_(()=>{if(e.sizeEstimate!==void 0)return e.sizeEstimate===null?"Audience size estimates have not yet been generated.":`Size estimate based on sampling taken ${n.value}. Actual sizes may differ and change over time.`});v(()=>{clearInterval(a)});const u={props:e,playerSegmentsData:t,get intervalId(){return a},set intervalId(S){a=S},formattedUpdateTime:n,tooltipContent:o,get DateTime(){return f},ref:c,onMounted:p,onUnmounted:v,computed:_,get MTooltip(){return y},get MGameTimeOffsetHint(){return z},get useSubscription(){return m},get getPlayerSegmentsSubscriptionOptions(){return d}};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}}),A={key:0},C={key:1},D={key:2};function w(l,s,e,t,a,n){const o=E("meta-abbreviate-number");return i(),M(t.MTooltip,null,{content:b(()=>[k("div",null,x(t.tooltipContent),1),g(t.MGameTimeOffsetHint,{class:"tw-mt-2"})]),default:b(()=>[e.sizeEstimate===null?(i(),r("span",A,"Estimate pending...")):e.sizeEstimate===void 0?(i(),r("span",C,"Everyone")):(i(),r("span",D,[s[0]||(s[0]=O("~")),g(o,{value:e.sizeEstimate,roundDown:"",disableTooltip:"",unit:"player"},null,8,["value"])]))],void 0,!0),_:1})}const N=h(I,[["render",w],["__file","MetaAudienceSizeEstimate.vue"]]);export{N as M};
