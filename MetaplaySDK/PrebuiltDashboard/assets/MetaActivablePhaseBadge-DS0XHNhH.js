import{d as S,x as u,c as n,M as h,o as f,e as m,w as E,p as A,t as O,_ as P}from"./index-B7jvAjdE.js";import{a as b}from"./players-CydHenLG.js";const p={Preview:{sortOrder:1,displayString:"Preview",badgeVariant:"primary",tooltip:"The [TYPENAME] is in it's preview phase."},Tentative:{sortOrder:2,displayString:"Available",badgeVariant:"primary",tooltip:"The [TYPENAME] is available for [PLAYER] to activate."},Active:{sortOrder:3,displayString:"Active",badgeVariant:"success",tooltip:"The [TYPENAME] is active and visible to [PLAYER]."},EndingSoon:{sortOrder:4,displayString:"Ending Soon",badgeVariant:"success",tooltip:"The [TYPENAME] is active but will be ending soon."},Review:{sortOrder:5,displayString:"Review",badgeVariant:"primary",tooltip:"Not active any more, but still visible to [PLAYER]."},Inactive:{sortOrder:6,displayString:"Not Available",badgeVariant:"neutral",tooltip:"Not available or visible to [PLAYER]."},InCooldown:{sortOrder:7,displayString:"On Cooldown",badgeVariant:"neutral",tooltip:"On cooldown after previous active phase."},TotalLimitsReached:{sortOrder:8,displayString:"Limits Reached",badgeVariant:"neutral",tooltip:"Activation or consumption limits have been reached."},Ineligible:{sortOrder:9,displayString:"Ineligible",badgeVariant:"neutral",tooltip:"[PLAYER] does not fulfill the requirements."},NoSchedule:{sortOrder:10,displayString:"Dynamic",badgeVariant:"primary",tooltip:"Available depending on game state."},ServerError:{sortOrder:11,displayString:"Server Error",badgeVariant:"warning",tooltip:"The server failed to resolve the phase."},Disabled:{sortOrder:12,displayString:"Disabled",badgeVariant:"danger",tooltip:"The [TYPENAME] is disabled."}},v={Preview:{sortOrder:1,displayString:"In Preview",badgeVariant:"primary",tooltip:"Visible to players but not available yet."},Active:{sortOrder:2,displayString:"Available",badgeVariant:"success",tooltip:"Available and visible to players."},EndingSoon:{sortOrder:3,displayString:"Ending Soon",badgeVariant:"success",tooltip:"Available and visible to players, but ending soon."},Review:{sortOrder:4,displayString:"In Review",badgeVariant:"primary",tooltip:"Not available any more, but still visible to players."},Inactive:{sortOrder:5,displayString:"Not Available",badgeVariant:"neutral",tooltip:"Not available or visible to players."},NoSchedule:{sortOrder:6,displayString:"Dynamic",badgeVariant:"primary",tooltip:"Available depending on the players' game state."},ServerError:{sortOrder:7,displayString:"Server Error",badgeVariant:"warning",tooltip:"The server failed to resolve the phase."},Disabled:{sortOrder:8,displayString:"Disabled",badgeVariant:"danger",tooltip:"The [TYPENAME] is disabled."}};function o(a,t,e){const r=e?p:v;let i;if(t===null)if(a.config.activableParams.isEnabled)if(e)if("phase"in a)i=a.phase;else throw new Error("Error getting activable phaseInfo. Is the player data wrapped in a ref?");else i=a.scheduleStatus?.currentPhase.phase??"NoSchedule";else i="Disabled";else i=t;return r[i]}function V(a,t=!0){let r=Object.values(a?p:v).map(i=>i.displayString);return t&&(r=r.filter(i=>i!=="Server Error")),r}function T(a,t=null,e=null){return o(a,t,e).sortOrder||-1}function l(a,t=null,e=null){return o(a,t,e).displayString||`Error: ${t}`}function s(a,t=null,e=null,r=null){return(o(a,t,e).tooltip||`Error: ${t}`).replace(/\[PLAYER\]/g,e?.model?.playerName||"n/a").replace(/\[TYPENAME\]/g,r??"activable")}function d(a,t=null,e=null){return o(a,t,e).badgeVariant||"warning"}function _(a){return p[a].displayString}const D=Object.freeze(Object.defineProperty({__proto__:null,allPhaseDisplayStrings:V,phaseBadgeVariant:d,phaseDisplayString:l,phaseSortOrder:T,phaseToDisplayString:_,phaseTooltip:s},Symbol.toStringTag,{value:"Module"})),w=S({__name:"MetaActivablePhaseBadge",props:{activable:{},phase:{},playerId:{},typeName:{}},setup(a,{expose:t}){t();const e=a,{data:r}=u(()=>e.playerId?b(e.playerId):void 0),i=n(()=>l(e.activable,e.phase,r.value)),g=n(()=>s(e.activable,e.phase,r.value,e.typeName)),y=n(()=>d(e.activable,e.phase,r.value)),c={props:e,playerData:r,displayString:i,tooltip:g,badgeVariant:y,computed:n,get MBadge(){return h},get useSubscription(){return u},get phaseDisplayString(){return l},get phaseTooltip(){return s},get phaseBadgeVariant(){return d},get getSinglePlayerSubscriptionOptions(){return b}};return Object.defineProperty(c,"__isScriptSetup",{enumerable:!1,value:!0}),c}});function N(a,t,e,r,i,g){return f(),m(r.MBadge,{tooltip:r.tooltip,variant:r.badgeVariant},{default:E(()=>[A(O(r.displayString),1)],void 0,!0),_:1},8,["tooltip","variant"])}const Y=P(w,[["render",N],["__file","MetaActivablePhaseBadge.vue"]]);export{D as A,Y as M,l as a,_ as b,V as c,T as p};
