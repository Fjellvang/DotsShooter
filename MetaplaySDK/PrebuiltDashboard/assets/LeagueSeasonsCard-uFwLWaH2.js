import{d as O,x as T,c as L,N as m,M as B,v as b,a8 as h,dX as x,b as E,o as d,e as l,w as n,k as o,B as I,p as r,a as v,t as p,n as k,_ as N}from"./index-B7jvAjdE.js";import{M as g,a as c,b as P,c as y}from"./metaListUtils-B-xQ0HnD.js";import{g as C}from"./leagueUtils-BqF6ffxm.js";import{a as _}from"./leagues-DnPkib1L.js";const V=O({__name:"LeagueSeasonsCard",props:{leagueId:{}},setup(M,{expose:a}){a();const f=M,{data:t}=T(_(f.leagueId)),D=L(()=>{const i=[];if(t.value.state.historicSeasons){const e=t.value.state.historicSeasons.map(s=>({name:"Season "+s.seasonId,id:s.seasonId,endTime:m.fromISO(s.endTime),startTime:m.fromISO(s.startTime),totalParticipants:s.totalParticipants,startedEarly:s.startedEarly,endedEarly:s.endedEarly,onSchedule:!s.startedEarly&&!s.endedEarly}));i.push(...e)}if(t.value.state.currentSeason){const e=t.value.state.currentSeason,s={name:"Season "+e.seasonId,id:e.seasonId,endTime:m.fromISO(e.endTime),startTime:m.fromISO(e.startTime),totalParticipants:t.value.currentParticipantCount,startedEarly:e.startedEarly,endedEarly:e.endedEarly,onSchedule:!e.startedEarly&&!e.endedEarly,currentSeason:!0};i.push(s)}return i}),w=[new g("Start time","startTime",c.Descending),new g("Start time","startTime",c.Ascending),new g("Participants","totalParticipants",c.Descending),new g("Participants","totalParticipants",c.Ascending)],S=[new P("startedEarly",[new y("Started early",i=>i.startedEarly,!1),new y("Ended early",i=>i.endedEarly,!1),new y("On schedule",i=>i.onSchedule,!1)])],u={props:f,singleLeagueData:t,allSeasonsDisplayData:D,sortOptions:w,filterSets:S,get DateTime(){return m},computed:L,get MetaListSortDirection(){return c},get MetaListSortOption(){return g},get MetaListFilterSet(){return P},get MetaListFilterOption(){return y},get MBadge(){return B},get MListItem(){return b},get MTextButton(){return h},get useSubscription(){return T},get schedulePhaseDisplayString(){return x},get getPhaseVariant(){return C},get getSingleLeagueSubscriptionOptions(){return _}};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}}),A={key:0},F={key:1};function j(M,a,f,t,D,w){const S=E("meta-time"),u=E("meta-duration"),i=E("meta-list-card");return d(),l(i,{title:"All Seasons","item-list":t.allSeasonsDisplayData,searchFields:["name"],"sort-options":t.sortOptions,emptyMessage:"No seasons are available to view.",filterSets:t.filterSets,"data-testid":"league-seasons-list-card"},{"item-card":n(({item:e})=>[o(t.MListItem,null,I({"top-right":n(()=>[e.startedEarly&&!e.endedEarly?(d(),l(t.MBadge,{key:0,variant:"warning"},{default:n(()=>a[1]||(a[1]=[r("Started Early")]),void 0,!0),_:1})):!e.startedEarly&&e.endedEarly?(d(),l(t.MBadge,{key:1,variant:"warning"},{default:n(()=>a[2]||(a[2]=[r("Ended Early")]),void 0,!0),_:1})):e.startedEarly&&e.endedEarly?(d(),l(t.MBadge,{key:2,variant:"warning"},{default:n(()=>a[3]||(a[3]=[r("Started & Ended Early")]),void 0,!0),_:1})):(d(),l(t.MBadge,{key:3,variant:"success"},{default:n(()=>a[4]||(a[4]=[r("On Schedule")]),void 0,!0),_:1}))]),"bottom-left":n(()=>[e.endTime.diffNow().toMillis()>0&&t.singleLeagueData.schedule?(d(),v("span",A,[r(p(e.startTime>t.DateTime.now()?"Starting":"Started")+" ",1),o(S,{date:e.startTime},null,8,["date"]),a[5]||(a[5]=r(" and will end in ")),o(u,{duration:e.endTime.diffNow(),showAs:"exactDuration",hideMilliseconds:!0},null,8,["duration"]),a[6]||(a[6]=r("."))])):(d(),v("span",F,[a[7]||(a[7]=r("Ended ")),o(S,{date:e.endTime,showAs:"timeago"},null,8,["date"]),a[8]||(a[8]=r(" after running for ")),o(u,{duration:e.endTime.diff(e.startTime),showAs:"exactDuration",hideMilliseconds:!0},null,8,["duration"]),a[9]||(a[9]=r("."))]))]),"bottom-right":n(()=>[k("div",null,p(e.totalParticipants)+" participants",1),o(t.MTextButton,{to:`/leagues/${f.leagueId}/${e.id}`,permission:"api.leagues.view"},{default:n(()=>a[10]||(a[10]=[r("View season")]),void 0,!0),_:2},1032,["to"])]),default:n(()=>[r(p(e.name),1)],void 0,!0),_:2},[e.currentSeason&&t.singleLeagueData.enabled?{name:"badge",fn:n(()=>[t.singleLeagueData.enabled?(d(),l(t.MBadge,{key:0,variant:t.getPhaseVariant(t.singleLeagueData.currentOrNextSeasonSchedule?.currentPhase.phase)},{default:n(()=>[r(p(t.schedulePhaseDisplayString(t.singleLeagueData.currentOrNextSeasonSchedule?.currentPhase.phase)),1)],void 0,!0),_:1},8,["variant"])):(d(),l(t.MBadge,{key:1,variant:"danger"},{default:n(()=>a[0]||(a[0]=[r("Disabled")]),void 0,!0),_:1}))]),key:"0"}:void 0]),1024)]),_:1},8,["item-list"])}const z=N(V,[["render",j],["__file","LeagueSeasonsCard.vue"]]);export{z as default};
