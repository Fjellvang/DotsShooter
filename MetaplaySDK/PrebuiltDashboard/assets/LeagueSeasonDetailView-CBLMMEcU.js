import{d as A,aj as T,aa as M,al as I,ak as E,x as y,c as L,cM as h,N as B,v as U,a8 as F,b as l,o as d,e as m,w as t,k as a,a as k,p as i,t as g,l as f,n as x,_ as Y}from"./index-B7jvAjdE.js";import{M as R,a as j}from"./MViewContainer-BTeE2xDT.js";import{M as q}from"./MSingleColumnLayout-B4K0ZAFA.js";import{L as z}from"./LeagueProgressCard-Dj48iixJ.js";import{C as G}from"./CoreUiPlacement-CPf1fwrN.js";import{a as P,b as O,d as N}from"./leagues-DnPkib1L.js";import"./leagueUtils-BqF6ffxm.js";import"./progress-GKvrz8Gh.js";const H=A({__name:"LeagueSeasonDetailView",setup(V,{expose:n}){n();const v=T(),e=M(),_=I(v.params.leagueId),S=Number(I(v.params.seasonId)),c=isFinite(S)?void 0:new E("Invalid season ID",`Season ID must be a number, not '${v.params.seasonId.toString()}'.`),{data:r}=y(P(_)),{data:s,error:o}=y(()=>c?void 0:O(_,S)),{data:b}=y(()=>c?void 0:N(_,S)),w=L(()=>c??o.value),C=L(()=>{const u=[];return h(r.value)&&h(s.value)&&(s.value.isCurrent===!1&&u.push({title:"Past Season",message:D.value,variant:"neutral"}),s.value.isCurrent===!0&&r.value.state.currentSeason.endedEarly===!0&&u.push({title:"Season Ended Early",message:"This season ended before its configured schedule.",variant:"warning"}),s.value.isCurrent===!0&&r.value.state.currentSeason.startedEarly===!0&&u.push({title:"Season Started Early",message:"This season started before its configured schedule.",variant:"warning"})),u}),D=L(()=>s.value?.startedEarly===!0&&s.value?.endedEarly===!1?"You are currently viewing a season that has already ended. This season started before its configured schedule.":s.value?.startedEarly===!1&&s.value?.endedEarly===!0?"You are currently viewing a season that has already ended. This season ended before its configured schedule.":s.value?.startedEarly===!0&&s.value?.endedEarly===!0?"You are currently viewing a season that has already ended. This season started and ended before its configured schedule.":"You are currently viewing a season that has already ended."),p={route:v,uiStore:e,leagueId:_,seasonId:S,seasonIdError:c,singleLeagueData:r,singleLeagueSeasonData:s,singleLeagueSeasonError:o,activeDivisionsData:b,pageError:w,alerts:C,pastSeasonAlertMessage:D,get DateTime(){return B},computed:L,get useRoute(){return T},get useUiStore(){return M},get DisplayError(){return E},get MListItem(){return U},get MPageOverviewCard(){return R},get MTextButton(){return F},get MViewContainer(){return j},get MSingleColumnLayout(){return q},get useSubscription(){return y},LeagueProgressCard:z,CoreUiPlacement:G,get routeParamToSingleValue(){return I},get isNullOrUndefined(){return h},get getSingleLeagueSubscriptionOptions(){return P},get getSingleLeagueSeasonSubscriptionOptions(){return O},get getActiveDivisionsForLeagueSeasonSubscriptionOptions(){return N}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}}),J={key:0},K={class:"mt-2"},Q={class:"font-weight-bold tw-mb-1"},W={key:0,class:"tw-mt-3"};function X(V,n,v,e,_,S){const c=l("fa-icon"),r=l("b-td"),s=l("meta-time"),o=l("b-tr"),b=l("meta-duration"),w=l("b-tbody"),C=l("b-table-simple"),D=l("meta-list-card"),p=l("meta-raw-data");return d(),m(e.MViewContainer,{"is-loading":!e.singleLeagueSeasonData,error:e.pageError,alerts:e.alerts,permission:"api.leagues.view"},{overview:t(()=>[a(e.MPageOverviewCard,{title:e.singleLeagueSeasonData.displayName,"data-testid":"league-season-detail-overview-card"},{subtitle:t(()=>[e.singleLeagueData?(d(),k("div",J,[a(e.MTextButton,{to:`/leagues/${e.leagueId}`},{default:t(()=>[i(g(e.singleLeagueData.details.leagueDisplayName),1)],void 0,!0),_:1},8,["to"]),i(" / "+g(e.singleLeagueSeasonData.displayName),1)])):f("",!0),x("p",K,g(e.singleLeagueSeasonData.description),1)]),default:t(()=>[x("div",Q,[a(c,{icon:"chart-bar"}),n[0]||(n[0]=i(" Overview"))]),a(C,{small:""},{default:t(()=>[a(w,null,{default:t(()=>[e.singleLeagueSeasonData.isCurrent?f("",!0):(d(),m(o,{key:0},{default:t(()=>[a(r,null,{default:t(()=>n[1]||(n[1]=[i("Start")]),void 0,!0),_:1}),a(r,{class:"tw-text-right"},{default:t(()=>[a(s,{date:e.singleLeagueSeasonData.startTime,showAs:"datetime"},null,8,["date"])],void 0,!0),_:1})],void 0,!0),_:1})),e.singleLeagueSeasonData.isCurrent?f("",!0):(d(),m(o,{key:1},{default:t(()=>[a(r,null,{default:t(()=>n[2]||(n[2]=[i("End")]),void 0,!0),_:1}),a(r,{class:"tw-text-right"},{default:t(()=>[a(s,{date:e.singleLeagueSeasonData.endTime,showAs:"datetime"},null,8,["date"])],void 0,!0),_:1})],void 0,!0),_:1})),e.singleLeagueSeasonData.isCurrent?f("",!0):(d(),m(o,{key:2},{default:t(()=>[a(r,null,{default:t(()=>n[3]||(n[3]=[i("Duration")]),void 0,!0),_:1}),a(r,{class:"tw-text-right"},{default:t(()=>[a(b,{duration:e.DateTime.fromISO(e.singleLeagueSeasonData.endTime).diff(e.DateTime.fromISO(e.singleLeagueSeasonData.startTime)),showAs:"top-two"},null,8,["duration"])],void 0,!0),_:1})],void 0,!0),_:1})),a(o,null,{default:t(()=>[a(r,null,{default:t(()=>n[4]||(n[4]=[i("Total participants")]),void 0,!0),_:1}),a(r,{class:"text-right"},{default:t(()=>[i(g(e.singleLeagueSeasonData.totalParticipantCount),1)],void 0,!0),_:1})],void 0,!0),_:1}),a(o,null,{default:t(()=>[a(r,null,{default:t(()=>n[5]||(n[5]=[i("First-time participants")]),void 0,!0),_:1}),a(r,{class:"text-right"},{default:t(()=>[i(g(e.singleLeagueSeasonData.newParticipantCount),1)],void 0,!0),_:1})],void 0,!0),_:1}),e.singleLeagueSeasonData.isCurrent?f("",!0):(d(),m(o,{key:3},{default:t(()=>[a(r,null,{default:t(()=>n[6]||(n[6]=[i("Dropped at season's end")]),void 0,!0),_:1}),a(r,{class:"text-right"},{default:t(()=>[i(g(e.singleLeagueSeasonData.numDropped),1)],void 0,!0),_:1})],void 0,!0),_:1})),e.singleLeagueSeasonData.isCurrent?(d(),m(o,{key:4},{default:t(()=>[a(r,{colspan:"2"},{default:t(()=>[e.singleLeagueData&&e.singleLeagueData.enabled?(d(),m(e.LeagueProgressCard,{key:0,leagueId:e.leagueId},null,8,["leagueId"])):f("",!0)],void 0,!0),_:1})],void 0,!0),_:1})):f("",!0)],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1},8,["title"])]),default:t(()=>[a(e.MSingleColumnLayout,null,{default:t(()=>[a(e.CoreUiPlacement,{placementId:"Leagues/Season/Details",leagueId:e.leagueId,seasonId:e.seasonId},null,8,["leagueId","seasonId"]),e.uiStore.showDeveloperUi?(d(),k("div",W,[a(D,{title:"Recently Active Divisions","item-list":e.activeDivisionsData,"empty-message":"No recently active divisions in this season.",description:"This card is only visible in the developer UI mode."},{"item-card":t(({item:u})=>[a(e.MListItem,null,{"bottom-left":t(()=>[n[7]||(n[7]=i("Created ")),a(s,{date:u.createdAt},null,8,["date"]),n[8]||(n[8]=i("."))]),"top-right":t(()=>[i(g(u.participants)+" participants",1)]),"bottom-right":t(()=>[a(e.MTextButton,{link:"",to:`/leagues/${e.leagueId}/${e.seasonId}/${u.entityId}`,permission:"api.leagues.view"},{default:t(()=>n[9]||(n[9]=[i("View division")]),void 0,!0),_:2},1032,["to"])]),default:t(()=>[i(g(u.displayName),1)],void 0,!0),_:2},1024)]),_:1},8,["item-list"])])):f("",!0)],void 0,!0),_:1}),a(p,{kvPair:e.singleLeagueSeasonData,name:"singleLeagueSeasonData"},null,8,["kvPair"]),a(p,{kvPair:e.activeDivisionsData,name:"activeDivisionsData"},null,8,["kvPair"])],void 0,!0),_:1},8,["is-loading","error","alerts"])}const se=Y(H,[["render",X],["__file","LeagueSeasonDetailView.vue"]]);export{se as default};
