import{d as C,x as S,c,f as x,cO as M,cP as w,ac as N,a9 as L,o as u,e as m,w as P,a as b,F as j,r as F,l as I,_ as U}from"./index-B7jvAjdE.js";import{a as O}from"./numberUtils-CkF0oMe2.js";import{M as A}from"./MInputSingleSelectDropdown-D7-YpE7w.js";import{b as f,M as V}from"./MPlot-utpgtI9D.js";import{a as B}from"./matchmaking-3j4jzqL_.js";import"./index-qTA83-by.js";import"./index-B_QkKjtG.js";import"./MInputHintMessage-DbuBS4Kn.js";const X=C({__name:"MatchmakerBucketChart",props:{matchmakerId:{}},setup(g,{expose:h}){h();const d=g,{data:t}=S(B(d.matchmakerId)),k=c(()=>!t.value?.data.hasFinishedBucketUpdate),v=c(()=>t.value?.data.labelInfos.map(n=>({...n,options:[{label:"Not filtered",value:"All"},...n.options.map(a=>({label:a,value:a}))]}))??[]),r=x({});function p(n,a){if(a==="All"){delete r.value[n];return}r.value[n]=a}const D=c(()=>{if(!t.value||t.value.data.bucketInfos.length===0)return;const n=t.value.data.bucketInfos;let a=n.map(e=>({bucket:e.labels[0].dashboardLabel,value:e.numPlayers,labels:[...e.labels],fill:"#2d90dc",fillPercentage:e.fillPercentage})),s=n.map(e=>({bucket:e.labels[0].dashboardLabel,labels:[...e.labels],value:e.capacity}));if(Object.keys(r.value).length>0?(a=a.filter(e=>Object.entries(r.value).every(([l,o])=>e.labels.some(i=>i.$type===l&&i.dashboardLabel===o))),s=s.filter(e=>Object.entries(r.value).every(([l,o])=>e.labels.some(i=>i.$type===l&&i.dashboardLabel===o)))):(a=a.reduce((e,l)=>{const o=e.find(i=>i.bucket===l.bucket);return o?(o.value+=l.value,o.labels.concat(l.labels.slice(1))):e.push(l),e},[]),s=s.reduce((e,l)=>{const o=e.find(i=>i.bucket===l.bucket);return o?(o.value+=l.value,o.labels.concat(l.labels.slice(1))):e.push(l),e},[])),!(a.length===0&&s.length===0))return{x:{label:null,tickRotate:-45},y:{label:null,nice:!0,tickFormat:e=>O(Number(e))},marks:[f(s,{x:"bucket",y:"value",fill:"#d8d8d8",rx:".4rem",sort:{x:"y",order:null}}),f(a,{x:"bucket",y:"value",fill:"#2d90dc",rx:".4rem",sort:{x:"y",order:null}}),M(a,w({x:"bucket",y:"value",title:y,stroke:"#d4d4d4",fontStyle:"red",fill:"#fafafa",fontSize:11}))],marginBottom:50}});function y(n){return`Bucket ${n.labels.map(a=>a.dashboardLabel).join(`
`)}

${L(n.value,"participant",!0)}
${Math.round(n.fillPercentage*1e6)/1e4}% full`}const _={props:d,singleMatchmakerData:t,isLoadingData:k,labelInfos:v,selectedLabelOptions:r,onLabelSelected:p,chartOptions:D,getTooltipContent:y,computed:c,ref:x,get MCard(){return N},get MInputSingleSelectDropdown(){return A},get MPlot(){return V},get abbreviateNumber(){return O},get maybePluralString(){return L},get useSubscription(){return S},get barY(){return f},get pointerX(){return w},get tip(){return M},get getSingleMatchmakerSubscriptionOptions(){return B}};return Object.defineProperty(_,"__isScriptSetup",{enumerable:!1,value:!0}),_}}),Y={key:0,class:"tw-grid tw-grid-cols-1 tw-gap-3 @sm:tw-grid-cols-2 @md:tw-grid-cols-3 @xl:tw-grid-cols-4"},z={key:2,class:"tw-my-10 tw-text-center tw-text-neutral-400"};function E(g,h,d,t,k,v){return u(),m(t.MCard,{title:"Bucket Distribution",subtitle:"Distribution of participants in the matchmaker buckets compared to available capacity.","is-loading":t.isLoadingData,"data-testid":"matchmaker-bucket-chart"},{default:P(()=>[t.singleMatchmakerData?.data.hasFinishedBucketUpdate?(u(),b("div",Y,[(u(!0),b(j,null,F(t.labelInfos,r=>(u(),m(t.MInputSingleSelectDropdown,{key:r.$type,label:r.displayName,options:r.options,"model-value":t.selectedLabelOptions[r.displayName]??"All","onUpdate:modelValue":p=>t.onLabelSelected(r.typeName,p)},null,8,["label","options","model-value","onUpdate:modelValue"]))),128))])):I("",!0),t.chartOptions?(u(),m(t.MPlot,{key:1,options:t.chartOptions},null,8,["options"])):(u(),b("div",z,"No data to show!"))],void 0,!0),_:1},8,["is-loading"])}const W=U(X,[["render",E],["__file","MatchmakerBucketChart.vue"]]);export{W as default};
