import{d as A,c,o as s,a as P,n as l,$ as D,bd as j,t as b,l as v,_ as O,aj as k,al as B,x as E,ak as N,ad as V,M as Y,a8 as z,a0 as F,ae as T,dX as R,b as f,e as i,w as a,k as n,p as r}from"./index-B7jvAjdE.js";import{M as G}from"./MActionModalButton-CvWVuTB-.js";import{a as U,M as X}from"./MViewContainer-BTeE2xDT.js";import{L as q}from"./LeagueProgressCard-Dj48iixJ.js";import{C as H}from"./CoreUiPlacement-CPf1fwrN.js";import{g as J}from"./leagueUtils-BqF6ffxm.js";import{a as I}from"./leagues-DnPkib1L.js";import"./MActionModal-coQLkvWs.js";import"./index-fVjXqxSF.js";import"./progress-GKvrz8Gh.js";const K=A({__name:"MProgressBar",props:{value:{},min:{default:0},max:{default:1},hidePercentageValue:{type:Boolean,default:!1},variant:{default:"primary"}},setup(S,{expose:t}){t();const g=S,e=c(()=>{const o={primary:"tw-bg-blue-500",success:"tw-bg-green-500",warning:"tw-bg-orange-500",danger:"tw-bg-red-500",neutral:"tw-bg-neutral-400"};return o[g.variant]||o.primary}),u=c(()=>{const{value:o,min:d,max:_}=g;return(o-d)/(_-d)*100}),p=c(()=>u.value>54?"tw-text-white":"tw-text-black"),m={props:g,variantClasses:e,progressPercentage:u,textColorClass:p,computed:c};return Object.defineProperty(m,"__isScriptSetup",{enumerable:!1,value:!0}),m}}),Q={class:"tw-relative tw-flex tw-h-5 tw-w-full tw-items-center tw-justify-center tw-rounded-full tw-bg-neutral-200"};function W(S,t,g,e,u,p){return s(),P("div",Q,[l("div",{class:D(["tw-absolute tw-top-0 tw-left-0 tw-h-full tw-rounded-full",e.variantClasses]),style:j({width:`${e.progressPercentage}%`})},null,6),g.hidePercentageValue?v("",!0):(s(),P("span",{key:0,class:D(["tw-text-xs tw-z-10",e.textColorClass])},b(Math.floor(e.progressPercentage))+"%",3))])}const Z=O(K,[["render",W],["__file","MProgressBar.vue"]]),$=A({__name:"LeagueDetailView",setup(S,{expose:t}){t();const g=k(),e=B(g.params.leagueId),{data:u,error:p,refresh:m}=E(I(e)),o=V(),d=c(()=>u.value?.currentOrNextSeasonSchedule?.currentPhase.phase),_=c(()=>{if(u.value?.migrationProgress.error)return new N("Season migration error","Something went wrong during the season migration process. Contact your game team for assistance.",void 0,void 0,[{title:"Internal Error",content:u.value?.migrationProgress.error}])}),M=c(()=>{const w=[];return u.value?.enabled===!1&&w.push({title:"Disabled League",message:"You are currently viewing a disabled league and there are no active seasons. Set up the leagues feature in your runtime options.",variant:"danger"}),u.value?.state.currentSeason?.endedEarly===!0&&w.push({title:"Latest Season Ended Early",message:"The latest season was forced to end before its configured schedule.",variant:"warning"}),u.value?.state.currentSeason?.startedEarly===!0&&w.push({title:"Current Season Started Early",message:"The current season was forced to start before its configured schedule.",variant:"warning"}),w}),{showSuccessNotification:h,showErrorNotification:y}=T();async function L(w){const C=await o.post(`/leagues/${e}/advance`,{isSeasonEnd:w});C.data.success?h(w?"Current season successfully ended early!":"Current season successfully advanced!"):y(C.data.errorMessage),m()}const x={route:g,leagueId:e,singleLeagueData:u,singleLeagueError:p,singleLeagueRefresh:m,gameServerApi:o,seasonCurrentPhase:d,seasonMigrationError:_,alerts:M,showSuccessNotification:h,showErrorNotification:y,forceSeasonChange:L,computed:c,get useRoute(){return k},get useGameServerApi(){return V},get MActionModalButton(){return G},get MBadge(){return Y},get DisplayError(){return N},get MProgressBar(){return Z},get MTextButton(){return z},get MViewContainer(){return U},get MPageOverviewCard(){return X},get MCallout(){return F},get useNotifications(){return T},get useSubscription(){return E},LeagueProgressCard:q,CoreUiPlacement:H,get routeParamToSingleValue(){return B},get schedulePhaseDisplayString(){return R},get getPhaseVariant(){return J},get getSingleLeagueSubscriptionOptions(){return I}};return Object.defineProperty(x,"__isScriptSetup",{enumerable:!1,value:!0}),x}}),ee={class:"font-weight-bold tw-mb-1"},te={"data-testid":"latest-season-link"},ae={key:1,class:"text-right text-muted tw-italic"},ne={class:"small mt-2 tw-text-center tw-italic"},re={key:0},se={class:"tw-font-semibold"};function oe(S,t,g,e,u,p){const m=f("fa-icon"),o=f("b-td"),d=f("b-tr"),_=f("b-tbody"),M=f("b-table-simple"),h=f("meta-no-seatbelts"),y=f("b-alert"),L=f("meta-raw-data");return s(),i(e.MViewContainer,{"is-loading":!e.singleLeagueData,error:e.singleLeagueError,alerts:e.alerts,permission:"api.leagues.view"},{overview:a(()=>[n(e.MPageOverviewCard,{id:e.leagueId,title:e.singleLeagueData.details.leagueDisplayName,error:e.seasonMigrationError,"data-testid":"league-detail-overview-card"},{alerts:a(()=>[e.singleLeagueData.migrationProgress.isInProgress?(s(),i(e.MCallout,{key:0,class:"tw-mb-3",title:"Season Migration in Progress",variant:"neutral"},{default:a(()=>[t[8]||(t[8]=l("div",{class:"tw-text-xs+"},"Players will be able to join this season once the migrations are complete.",-1)),n(e.MProgressBar,{value:e.singleLeagueData.migrationProgress.progressEstimate,max:1},null,8,["value"]),l("div",ne,b(e.singleLeagueData.migrationProgress.phase)+"...",1)],void 0,!0),_:1})):v("",!0),e.singleLeagueData.enabled&&e.singleLeagueData.schedule?(s(),i(e.LeagueProgressCard,{key:1,leagueId:e.leagueId},null,8,["leagueId"])):(s(),i(e.MCallout,{key:2,title:"No Schedule",variant:"warning"},{default:a(()=>t[9]||(t[9]=[r("No schedule defined for this league.")]),void 0,!0),_:1}))]),buttons:a(()=>[e.seasonMigrationError?v("",!0):(s(),P("div",re,[e.seasonCurrentPhase==="Active"||e.seasonCurrentPhase==="EndingSoon"?(s(),i(e.MActionModalButton,{key:0,"modal-title":"Force Season to End",action:()=>e.forceSeasonChange(!0),"trigger-button-label":"End Season Now",variant:"danger",permission:"api.leagues.phase_debug","data-testid":"force-end-season"},{default:a(()=>[l("p",null,[t[10]||(t[10]=r("You can force ")),l("span",se,"season "+b(e.singleLeagueData?.state.currentSeason.seasonId),1),t[11]||(t[11]=r(" to end immediately."))]),t[12]||(t[12]=l("p",null,"The next season will start automatically according to the configured schedule.",-1)),t[13]||(t[13]=l("p",{class:"tw-text-xs+ tw-text-neutral-500"},"Performance note: ending a season early will cause all of the division actors to be woken up. Triggering this in a live game with a large amount of divisions will have a performance impact.",-1)),n(h,{class:"mt-4",message:"This action can't be undone. Are you sure the league participants are okay with this?",variant:"danger"})],void 0,!0),_:1},8,["action"])):e.seasonCurrentPhase==="Preview"?(s(),i(e.MActionModalButton,{key:1,"modal-title":"Force Season To Start",action:()=>e.forceSeasonChange(!1),"trigger-button-label":"Start Season Now","trigger-button-disabled-tooltip":e.singleLeagueData.enabled?void 0:"This league is disabled.","ok-button-disabled-tooltip":e.singleLeagueData.state.currentSeason.migrationComplete?void 0:"You cannot force this season to start as season migrations are still ongoing.",variant:"danger",permission:"api.leagues.phase_debug","data-testid":"force-end-season"},{default:a(()=>[l("p",null,[t[15]||(t[15]=r("You can force the season to go to ")),n(e.MBadge,{variant:e.getPhaseVariant("Active")},{default:a(()=>t[14]||(t[14]=[r("Active")]),void 0,!0),_:1},8,["variant"]),t[16]||(t[16]=r(" immediately."))]),t[18]||(t[18]=l("p",null,"The season will then progress automatically according to its configured schedule.",-1)),n(y,{class:"mt-4 tw-text-center",show:!e.singleLeagueData.state.currentSeason.migrationComplete,variant:"danger"},{default:a(()=>t[17]||(t[17]=[r("Season migrations are still ongoing. Please wait for them to finish before forcing this season to start.")]),void 0,!0),_:1},8,["show"])],void 0,!0),_:1},8,["action","trigger-button-disabled-tooltip","ok-button-disabled-tooltip"])):(s(),i(e.MActionModalButton,{key:2,"modal-title":"Force Preview Next Season",action:()=>e.forceSeasonChange(!1),"trigger-button-label":"Preview Next Season","trigger-button-disabled-tooltip":e.singleLeagueData.enabled?void 0:"This league is disabled.",variant:"danger",permission:"api.leagues.phase_debug","data-testid":"force-preview-season"},{default:a(()=>[l("p",null,[t[20]||(t[20]=r("You can force the next season to go to ")),n(e.MBadge,{variant:e.getPhaseVariant("Preview")},{default:a(()=>t[19]||(t[19]=[r("Preview")]),void 0,!0),_:1},8,["variant"]),t[21]||(t[21]=r(" immediately."))]),t[22]||(t[22]=l("p",null,"The season will progress automatically according to its configured schedule.",-1))],void 0,!0),_:1},8,["action","trigger-button-disabled-tooltip"]))]))]),default:a(()=>[l("p",null,b(e.singleLeagueData.details.leagueDescription),1),l("div",ee,[n(m,{icon:"chart-bar"}),t[0]||(t[0]=r(" Overview"))]),n(M,{class:"mb-0",small:""},{default:a(()=>[n(_,null,{default:a(()=>[n(d,null,{default:a(()=>[n(o,null,{default:a(()=>t[1]||(t[1]=[r("League status")]),void 0,!0),_:1}),n(o,{class:"tw-text-right"},{default:a(()=>[e.singleLeagueData.enabled?(s(),i(e.MBadge,{key:0,variant:"success"},{default:a(()=>t[2]||(t[2]=[r("Enabled")]),void 0,!0),_:1})):(s(),i(e.MBadge,{key:1,variant:"danger"},{default:a(()=>t[3]||(t[3]=[r("Disabled")]),void 0,!0),_:1}))],void 0,!0),_:1})],void 0,!0),_:1}),e.singleLeagueData.enabled?(s(),i(d,{key:0},{default:a(()=>[n(o,null,{default:a(()=>t[4]||(t[4]=[r("Total lifetime participants")]),void 0,!0),_:1}),n(o,{class:"tw-text-right"},{default:a(()=>[r(b(e.singleLeagueData.currentParticipantCount),1)],void 0,!0),_:1})],void 0,!0),_:1})):v("",!0),n(d,null,{default:a(()=>[n(o,null,{default:a(()=>t[5]||(t[5]=[r("Latest season")]),void 0,!0),_:1}),n(o,{class:"tw-text-right"},{default:a(()=>[l("span",te,[e.singleLeagueData.state.currentSeason?(s(),i(e.MTextButton,{key:0,to:`/leagues/${e.leagueId}/${e.singleLeagueData.state.currentSeason.seasonId}`,permission:"api.leagues.view","data-testid":"latest-season-button-link"},{default:a(()=>[r("Season "+b(e.singleLeagueData.state.currentSeason.seasonId),1)],void 0,!0),_:1},8,["to"])):(s(),P("span",ae,"No seasons"))])],void 0,!0),_:1})],void 0,!0),_:1}),e.singleLeagueData.enabled&&e.singleLeagueData.currentOrNextSeasonSchedule?(s(),i(d,{key:1},{default:a(()=>[n(o,null,{default:a(()=>t[6]||(t[6]=[r("Current phase")]),void 0,!0),_:1}),n(o,{class:"tw-text-right"},{default:a(()=>[e.singleLeagueData.enabled?(s(),i(e.MBadge,{key:0,variant:e.getPhaseVariant(e.singleLeagueData.currentOrNextSeasonSchedule?.currentPhase.phase)},{default:a(()=>[r(b(e.schedulePhaseDisplayString(e.singleLeagueData.currentOrNextSeasonSchedule?.currentPhase.phase)),1)],void 0,!0),_:1},8,["variant"])):(s(),i(e.MBadge,{key:1,variant:"danger"},{default:a(()=>t[7]||(t[7]=[r("Disabled")]),void 0,!0),_:1}))],void 0,!0),_:1})],void 0,!0),_:1})):v("",!0),e.singleLeagueData.enabled?(s(),i(d,{key:2},{default:a(()=>[n(o,{colspan:"2"})],void 0,!0),_:1})):v("",!0)],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1},8,["id","title","error"])]),default:a(()=>[n(e.CoreUiPlacement,{"placement-id":"Leagues/Details",leagueId:e.leagueId},null,8,["leagueId"]),n(L,{kvPair:e.singleLeagueData,name:"singleLeagueData"},null,8,["kvPair"])]),_:1},8,["is-loading","error","alerts"])}const ve=O($,[["render",oe],["__file","LeagueDetailView.vue"]]);export{ve as default};
