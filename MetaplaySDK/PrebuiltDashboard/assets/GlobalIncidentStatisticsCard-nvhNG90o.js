import{d as N,f as o,h as b,bf as h,c as m,aU as y,a0 as P,v as k,a8 as D,b as F,o as p,e as C,w as n,p as S,l as V,k as M,a as I,t as f,n as A,_ as G}from"./index-B7jvAjdE.js";import{A as w}from"./apiPoller-8-xtB3Lu.js";import{a as U}from"./numberUtils-CkF0oMe2.js";import{b as L,M as l,a as c}from"./metaListUtils-B-xQ0HnD.js";const E=1,j=N({__name:"GlobalIncidentStatisticsCard",props:{limit:{}},setup(_,{expose:d}){d();const s=_,e=y(),a=o(),u=o(!0),r=o(),t=o();b(()=>{e.doesHavePermission("api.incident_reports.view")&&(a.value=new w(5e3,"GET","/incidentReports/statistics",void 0,i=>{t.value=i,u.value=!1,r.value=null},i=>{u.value=!1,r.value=i}))}),h(()=>{a.value&&a.value.stop()});const v=m(()=>s.limit&&t.value?t.value.slice(0,s.limit):t.value),T=m(()=>t.value?.some(i=>i.countIsLimitedByQuerySize)??!1),x=["type","reason","incidentId"],O=m(()=>[L.asDynamicFilterSet(v.value??[],"type",i=>i.type)]),B=[new l("Count","count",c.Ascending),new l("Count","count",c.Descending),new l("Type","type",c.Ascending),new l("Type","type",c.Descending)],g={props:s,permissions:e,statsPoller:a,loading:u,error:r,incidentCounts:t,limitedIncidentCounts:v,areIncidentCountsCapped:T,searchFields:x,filterSets:O,sortOptions:B,defaultSortOption:E,computed:m,onMounted:b,onUnmounted:h,ref:o,get ApiPoller(){return w},get MetaListFilterSet(){return L},get MetaListSortDirection(){return c},get MetaListSortOption(){return l},get MCallout(){return P},get MListItem(){return k},get MTextButton(){return D},get usePermissions(){return y},get abbreviateNumber(){return U}};return Object.defineProperty(g,"__isScriptSetup",{enumerable:!1,value:!0}),g}}),q={key:0},z={key:1},H={class:"text-danger"};function Q(_,d,s,e,a,u){const r=F("meta-list-card");return p(),C(r,{title:s.limit?`Top ${s.limit} Incident Types in the Last 24h`:"Unique Incident Types in the Last 24h",itemList:e.limitedIncidentCounts,allowPausing:"",dangerous:"",icon:"ambulance",searchFields:e.searchFields,filterSets:e.filterSets,sortOptions:e.sortOptions,defaultSortOption:e.defaultSortOption,emptyMessage:"No incidents reported.",permission:"api.incident_reports.view","data-testid":"global-incident-statistics-card"},{description:n(()=>[e.areIncidentCountsCapped?(p(),C(e.MCallout,{key:0,class:"tw-mx-0 tw-mb-3",title:"Incident Counts Capped",variant:"warning"},{default:n(()=>d[0]||(d[0]=[S("There have been a very high number of incidents in the last 24h! This list does not include all incidents from that time period.")]),void 0,!0),_:1})):V("",!0)]),"item-card":n(t=>[M(e.MListItem,null,{"top-right":n(()=>[M(e.MTextButton,{permission:"api.audit_logs.search",to:`/playerIncidents/${t.item.fingerprint}`},{default:n(()=>[t.item.count===1?(p(),I("span",q,"View incident")):(p(),I("span",z,"View "+f(e.abbreviateNumber(t.item.count))+" incidents",1))],void 0,!0),_:2},1032,["to"])]),"bottom-left":n(()=>[A("div",H,f(t.item.reason),1)]),default:n(()=>[S(f(t.item.type),1)],void 0,!0),_:2},1024)]),_:1},8,["title","itemList","filterSets"])}const X=G(j,[["render",Q],["__file","GlobalIncidentStatisticsCard.vue"]]);export{X as default};
