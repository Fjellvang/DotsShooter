import{d as ue,x as A,f as M,C as j,dE as O,co as G,bf as H,c as q,ad as X,M as pe,a0 as ce,q as ge,v as ve,a8 as fe,ae as z,dX as me,b as L,o as u,e as P,w as r,k as p,p as i,l as B,n as d,a as m,t as l,_ as ye}from"./index-B7jvAjdE.js";import{M as be}from"./MActionModalButton-CvWVuTB-.js";import{M as he}from"./MInputNumber-BOzPEn49.js";import{M as C,a as F,c as x,b as J}from"./metaListUtils-B-xQ0HnD.js";import{g as Se}from"./leagueUtils-BqF6ffxm.js";import{e as K,a as Q,b as W}from"./leagues-DnPkib1L.js";import{a as Z}from"./players-CydHenLG.js";import"./MActionModal-coQLkvWs.js";import"./index-fVjXqxSF.js";import"./index-DZuvHjnn.js";import"./index-B_QkKjtG.js";import"./MInputHintMessage-DbuBS4Kn.js";const ke=ue({__name:"PlayerLeaguesCard",props:{playerId:{}},setup(V,{expose:t}){t();const S=V,a=X(),{data:Y}=A(Z(S.playerId)),{data:y,refresh:k}=A(K(S.playerId)),w=M([]),v=M([]),I=j(()=>y.value,()=>{if(y.value){let n=0;y.value.forEach(s=>{w.value.push(O(Q(s.leagueId))),h(n)?v.value.push(O(W(s.leagueId,"$active"))):v.value.push(void 0),n++}),G(()=>{I()})}},{immediate:!0});H(()=>{for(;w.value.length;){const n=w.value.shift();n&&n.unsubscribe()}for(;v.value.length;){const n=v.value.shift();n&&n.unsubscribe()}});function h(n){return y.value[n].hasActiveSeason}const e=q(()=>{const n=[];for(let s=0;s<y.value?.length;++s){const o=y.value[s],c=w.value[s].data,g=h(s),b=g?v.value[s]?.data:void 0;o&&c&&(!g||b)&&n.push({leagueIndex:s,leagueName:o.leagueName,leagueId:o.leagueId,enabled:c.enabled,season:o.divisionIndex.season,currentSeasonPhase:g?c.currentOrNextSeasonSchedule.currentPhase.phase:"Inactive",participantStatus:o.participantStatus,rankName:g?b.ranks[o.divisionIndex.rank].rankName:"No Current Season",divisionIndex:o.divisionIndex.division,divisionId:o.divisionId,placeInDivision:o.placeInDivision,divisionsPerRank:g?b.ranks.map(_=>_.numDivisions):[]})}return n}),f=M([]);function $(n){N.value=n,D.value=void 0}function ee(n){N.value=void 0,D.value=void 0;const s=v.value[n].data;let o=0;f.value=s?.ranks.map(c=>({id:o.toString(),value:{index:o++,rankName:c.rankName,description:c.description}}))||[]}const N=M(),D=M();function E(n,s,o){let c=!1;if(h(n)&&s!==void 0){const g=e.value[n];if(g.participantStatus==="Participant"){const b=v.value[n].data;g.rankName===b?.ranks[s].rankName&&(o==null?g.divisionsPerRank[s]===1&&(c=!0):o===g.divisionIndex&&(c=!0))}}return c}function ae(n,s){if(!N.value)return"Select a rank to proceed.";if(E(n,N.value.index,D.value))return"This player is already in the selected division.";if(s==="Inactive")return"This league is currently inactive.";if(!h(n))return"No active season for this league."}function te(n){return n.enabled?h(n.leagueIndex)?void 0:"Cannot add or move participants while a league is inactive.":"Cannot add or move participants while a league is disabled."}const{showSuccessNotification:R,showErrorNotification:T}=z();async function ne(n,s,o){let c;const g=e.value[n],b=g.leagueId;if(o==null)c=`/leagues/${b}/participant/${S.playerId}/addRank/${s}`;else{const de=(await a.get(`/divisions/id/${b}/${g.season}/${s}/${o}/`)).data;c=`/leagues/${b}/participant/${S.playerId}/add/${de}`}const _=await a.post(c);_.data.success?(R("Player successfully added to division!"),k()):T(_.data.errorMessage)}function ie(n){return n.enabled?n.participantStatus==="Participant"?void 0:"This player is not a participant in this league.":"You cannot remove participants while a league is disabled."}async function se(n,s){if(y.value){const o=await a.post(`/leagues/${n}/participant/${s}/remove`);o.data.success?(R("Participant successfully removed from division."),k()):T(o.data.errorMessage)}}const oe=["leagueName"],re=[new C("League name","leagueName",F.Descending),new C("League name","leagueName",F.Ascending)],le=[new J("participating",[new x("Participating",n=>n.participantStatus==="Participant"),new x("Not participating",n=>n.participantStatus==="NotParticipant"),new x("Never participated",n=>n.participantStatus==="NeverParticipated")])],U={props:S,gameServerApi:a,playerData:Y,playerLeagueData:y,playerLeagueDataRefresh:k,singleLeagueSubscriptions:w,singleLeagueSeasonSubscriptions:v,unwatchFetchAllLeagueData:I,doesLeagueHaveActiveSeason:h,playerLeagueItems:e,rankOptions:f,onRankSelect:$,resetModal:ee,selectedRank:N,selectedDivision:D,isAlreadyInDivision:E,getDisabledReason:ae,addOrMoveParticipantDisabled:te,showSuccessNotification:R,showErrorNotification:T,addOrMovePlayerToLeague:ne,removeParticipantDisabled:ie,removeParticipant:se,searchFields:oe,sortOptions:re,filterSets:le,computed:q,nextTick:G,onUnmounted:H,ref:M,watch:j,get useGameServerApi(){return X},get MetaListFilterOption(){return x},get MetaListFilterSet(){return J},get MetaListSortDirection(){return F},get MetaListSortOption(){return C},get MActionModalButton(){return be},get MBadge(){return pe},get MCallout(){return ce},get MCollapse(){return ge},get MInputNumber(){return he},get MListItem(){return ve},get MTextButton(){return fe},get useNotifications(){return z},get useSubscription(){return A},get useManuallyManagedStaticSubscription(){return O},get schedulePhaseDisplayString(){return me},get getPhaseVariant(){return Se},get getAllLeaguesForSingleParticipant(){return K},get getSingleLeagueSubscriptionOptions(){return Q},get getSingleLeagueSeasonSubscriptionOptions(){return W},get getSinglePlayerSubscriptionOptions(){return Z}};return Object.defineProperty(U,"__isScriptSetup",{enumerable:!1,value:!0}),U}}),we={key:0},Me={key:1},Pe={key:0},Ie={key:1},Ne={key:2},_e={class:"tw-font-semibold"},Le={key:3},De={class:"tw-font-semibold"},xe={class:"tw-font-semibold"},Re={class:"tw-font-semibold"},Te={class:"border rounded-sm bg-light py-2 tw-px-4"},Ae={class:"font-weight-bold tw-mb-1"},Oe={key:0,class:"small text-muted my-2"},Be={key:1,class:"small text-muted my-2"},Ce={class:"tw-mt-3 tw-inline-flex tw-w-full tw-justify-end tw-space-x-2"},Fe={key:0},Ve={class:"font-weight-bold"},Ye={class:"font-weight-bold"},Ee={class:"font-weight-bold"},Ue={class:"font-weight-bold"},je={key:1};function Ge(V,t,S,a,Y,y){const k=L("meta-ordinal-number"),w=L("fa-icon"),v=L("meta-input-select"),I=L("meta-no-seatbelts"),h=L("meta-list-card");return u(),P(h,{title:"Player Leagues",icon:"trophy",itemList:a.playerLeagueItems,searchFields:a.searchFields,filterSets:a.filterSets,sortOptions:a.sortOptions,emptyMessage:`${a.playerData.model.playerName} isn't participating in any player leagues.`,permission:"api.leagues.view","data-testid":"player-leagues-card"},{"item-card":r(({item:e})=>[p(a.MCollapse,{extraMListItemMargin:""},{header:r(()=>[p(a.MListItem,{noLeftPadding:"","data-testid":"player-leagues-list-entry"},{badge:r(()=>[e.participantStatus==="Participant"?(u(),P(a.MBadge,{key:0,variant:"success"},{default:r(()=>t[1]||(t[1]=[i("Participating")]),void 0,!0),_:1})):B("",!0)]),"top-right":r(()=>[t[3]||(t[3]=d("span",{class:"tw-mr-1"},"Phase:",-1)),e.enabled?(u(),m("span",we,[p(a.MBadge,{variant:a.getPhaseVariant(e.currentSeasonPhase)},{default:r(()=>[i(l(a.schedulePhaseDisplayString(e.currentSeasonPhase)),1)],void 0,!0),_:2},1032,["variant"])])):(u(),m("span",Me,[p(a.MBadge,null,{default:r(()=>t[2]||(t[2]=[i("Disabled")]),void 0,!0),_:1})]))]),"bottom-left":r(()=>[e.participantStatus==="NeverParticipated"?(u(),m("span",Pe,"This player has never participated in "+l(e.leagueName)+".",1)):e.participantStatus==="NotParticipant"?(u(),m("span",Ie,"This player has previously participated in the "+l(e.leagueName)+" but is not part of the ongoing season.",1)):e.participantStatus==="Participant"&&!e.enabled?(u(),m("span",Ne,[i("This player participated in the last active season of the "+l(e.leagueName)+" and was ranked ",1),p(k,{number:e.placeInDivision},null,8,["number"]),t[4]||(t[4]=i(" place in ")),d("span",_e,"Division "+l(e.divisionIndex),1),t[5]||(t[5]=i(" of ")),d("strong",null,l(e.rankName),1),t[6]||(t[6]=i(" in ")),p(a.MTextButton,{to:`/leagues/${e.leagueId}/${e.season}`},{default:r(()=>[i("season "+l(e.season),1)],void 0,!0),_:2},1032,["to"]),t[7]||(t[7]=i("."))])):(u(),m("span",Le,[i("This player is currently part of "+l(e.leagueName)+" and is ranked ",1),d("span",De,[p(k,{number:e.placeInDivision},null,8,["number"])]),t[8]||(t[8]=i(" place in ")),d("span",xe,"Division "+l(e.divisionIndex),1),t[9]||(t[9]=i(" of ")),d("span",Re,l(e.rankName),1),t[10]||(t[10]=i(" in ")),p(a.MTextButton,{to:`/leagues/${e.leagueId}/${e.season}`},{default:r(()=>[i("Season "+l(e.season),1)],void 0,!0),_:2},1032,["to"]),t[11]||(t[11]=i("."))]))]),"bottom-right":r(()=>[e.participantStatus!=="Participant"?(u(),P(a.MTextButton,{key:0,to:`/leagues/${e.leagueId}`},{default:r(()=>t[12]||(t[12]=[i("View league")]),void 0,!0),_:2},1032,["to"])):e.participantStatus==="Participant"?(u(),P(a.MTextButton,{key:1,to:`/leagues/${e.leagueId}/${e.season}/${e.divisionId}`},{default:r(()=>t[13]||(t[13]=[i("View division")]),void 0,!0),_:2},1032,["to"])):B("",!0)]),default:r(()=>[i(l(e.leagueName),1)],void 0,!0),_:2},1024)]),default:r(()=>[d("div",Te,[d("div",Ae,[p(w,{icon:"wrench"}),t[14]||(t[14]=i(" Admin Controls"))]),e.enabled?(u(),m("div",Be,"You can add or remove this player from the league or change their rank and/or division.")):(u(),m("div",Oe,"This league is currently disabled and there are no active seasons. You cannot add or remove a player from a disabled league.")),d("div",Ce,[p(a.MActionModalButton,{"modal-title":e.participantStatus!=="Participant"?"Add to League":"Modify Rank or Division",action:()=>a.addOrMovePlayerToLeague(e.leagueIndex,a.selectedRank?.index,a.selectedDivision),"trigger-button-label":e.participantStatus!=="Participant"?"Add to League":"Modify Rank or Division","trigger-button-disabled-tooltip":a.addOrMoveParticipantDisabled(e),variant:"warning","ok-button-disabled-tooltip":a.getDisabledReason(e.leagueIndex,e.currentSeasonPhase),permission:"api.leagues.participant_edit",onShow:f=>a.resetModal(e.leagueIndex),"data-testid":"action-add-participant"},{default:r(()=>[e.participantStatus==="Participant"?(u(),m("p",Fe,[t[15]||(t[15]=i("This player is already part of ")),d("span",Ve,l(e.leagueName),1),t[16]||(t[16]=i(" and is ranked ")),d("span",Ye,[p(k,{number:e.placeInDivision},null,8,["number"])]),t[17]||(t[17]=i(" place in ")),d("span",Ee,"Division "+l(e.divisionIndex),1),t[18]||(t[18]=i(" of ")),d("span",Ue,l(e.rankName),1),t[19]||(t[19]=i(". You can move this player to another rank or division in this league."))])):(u(),m("p",je,"You are about to add this player to "+l(e.leagueName)+".",1)),t[21]||(t[21]=d("p",null,"If the player is currently playing the game, they will be immediately disconnected so that the changes can be applied.",-1)),t[22]||(t[22]=d("div",{class:"tw-font-semi-bold tw-mb-1"},"New Rank",-1)),p(v,{value:a.selectedRank,options:a.rankOptions,placeholder:"Select a rank ...",searchFields:["rankName"],"no-clear":"",onInput:a.onRankSelect},{option:r(({option:f})=>[p(a.MListItem,{class:"!tw-px-0 !tw-py-0"},{"top-right":r(()=>[i(l(f?.description),1)]),default:r(()=>[i(l(f?.rankName),1)],void 0,!0),_:2},1024)]),selectedOption:r(({option:f})=>[d("div",null,l(f?.rankName),1)]),_:1},8,["value","options"]),p(a.MInputNumber,{class:"tw-mt-1",label:"New Division","model-value":a.selectedDivision,disabled:!a.selectedRank||e.divisionsPerRank[a.selectedRank?.index||0]===0,min:0,max:e.divisionsPerRank[a.selectedRank?.index||0]-1,placeholder:e.divisionsPerRank[a.selectedRank?.index||0]>0?"Assigned randomly":"There are no divisions in this rank. A new division will be created.",allowUndefined:"",variant:a.isAlreadyInDivision(e.leagueIndex,a.selectedRank?.index,a.selectedDivision)?"danger":"default","hint-message":a.isAlreadyInDivision(e.leagueIndex,a.selectedRank?.index,a.selectedDivision)?"Player is already in this division. You cannot move a player to a division that they are already in.":void 0,"onUpdate:modelValue":t[0]||(t[0]=f=>a.selectedDivision=f)},null,8,["model-value","disabled","max","placeholder","variant","hint-message"]),e.currentSeasonPhase==="Inactive"?(u(),P(a.MCallout,{key:2,title:"Past Season",variant:"danger"},{default:r(()=>t[20]||(t[20]=[i("The season has now concluded. You can no longer add participants to this division.")]),void 0,!0),_:1})):e.participantStatus==="Participant"?(u(),P(I,{key:3,class:"tw-mt-3",message:"This action cannot be undone. The player will lose all their progress in the league and will have to start again from scratch."})):B("",!0)],void 0,!0),_:2},1032,["modal-title","action","trigger-button-label","trigger-button-disabled-tooltip","ok-button-disabled-tooltip","onShow"]),p(a.MActionModalButton,{"modal-title":"Remove Player from League",action:()=>a.removeParticipant(e.leagueId,S.playerId),"trigger-button-label":"Remove Player","trigger-button-disabled-tooltip":a.removeParticipantDisabled(e),variant:"warning",permission:"api.leagues.participant_edit","data-testid":"action-remove-participant"},{default:r(()=>[d("p",null,"You are about to remove this player from "+l(e.leagueName)+".",1),p(I,{class:"tw-mt-3",message:"This action can't be undone. The participant will lose all their progress in the league.",name:a.playerData.model.playerName},null,8,["name"])],void 0,!0),_:2},1032,["action","trigger-button-disabled-tooltip"])])])],void 0,!0),_:2},1024)]),_:1},8,["itemList","emptyMessage"])}const na=ye(ke,[["render",Ge],["__file","PlayerLeaguesCard.vue"]]);export{na as default};
