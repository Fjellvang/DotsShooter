var s=t=>t.ownerDocument.defaultView||window;function c(t,n){const{type:e="HTMLInputElement",property:o="value"}=n,r=s(t)[e].prototype;return Object.getOwnPropertyDescriptor(r,o)??{}}function u(t,n){c(t,{type:"HTMLInputElement",property:"checked"}).set?.call(t,n),n?t.setAttribute("checked",""):t.removeAttribute("checked")}function m(t,n){const{checked:e,bubbles:o=!0}=n;if(!t)return;const r=s(t);t instanceof r.HTMLInputElement&&(u(t,e),t.dispatchEvent(new r.Event("click",{bubbles:o})))}function d(t){return a(t)?t.form:t.closest("form")}function a(t){return t.matches("textarea, input, select, button")}function f(t,n){if(!t)return;const e=d(t);return e?.addEventListener("reset",n,{passive:!0}),()=>{e?.removeEventListener("reset",n)}}function p(t,n){const e=t?.closest("fieldset");if(!e)return;n(e.disabled);const o=e.ownerDocument.defaultView||window,r=new o.MutationObserver(()=>n(e.disabled));return r.observe(e,{attributes:!0,attributeFilter:["disabled"]}),()=>r.disconnect()}function b(t,n){if(!t)return;const{onFieldsetDisabledChange:e,onFormReset:o}=n,r=[f(t,o),p(t,e)];return()=>{r.forEach(i=>i?.())}}export{m as d,u as s,b as t};
