import{d as O,f as d,x as f,c as g,ad as S,ae as w,a9 as U,o as _,a as k,k as s,w as y,n as a,$ as C,p as A,l as P,_ as T}from"./index-B7jvAjdE.js";import{M as B}from"./MActionModalButton-CvWVuTB-.js";import{M as V}from"./MInputHintMessage-DbuBS4Kn.js";import{M as j}from"./MInputSwitch-C-Z-JJsG.js";import{M as R}from"./MInputNumber-BOzPEn49.js";import{M as z}from"./MInputSingleSelectDropdown-D7-YpE7w.js";import{a as D}from"./players-CydHenLG.js";import"./MActionModal-coQLkvWs.js";import"./index-fVjXqxSF.js";import"./index-B_QkKjtG.js";import"./index-DZuvHjnn.js";import"./index-qTA83-by.js";const c=3,H=O({__name:"PlayerActionToggleSessionDebugMode",props:{playerId:{}},setup(p,{expose:t}){t();const u=S(),{showSuccessNotification:e}=w(),m=p,n=d(!1),{data:o,refresh:v}=f(D(m.playerId)),r=d(c),i=d(!1),N=[{label:"Normal",value:"Normal"},{label:"Don't upload (keep on client)",value:"SilentlyOmitUploads"},{label:"Don't upload (discard from client)",value:"RejectIncidents"}],l=d("Normal");function h(){n.value=!!o.value.model.sessionDebugModeOverride,r.value=o.value.model.sessionDebugModeOverride?.forNextNumSessions??c,i.value=o.value.model.sessionDebugModeOverride?.parameters.enableEntityDebugConfig??!1,l.value=o.value.model.sessionDebugModeOverride?.parameters.incidentUploadMode??"Normal"}const x=g(()=>!o.value.model.sessionDebugModeOverride&&!n.value?"No changes to save.":o.value.model.sessionDebugModeOverride&&!n.value?void 0:!o.value.model.sessionDebugModeOverride&&n.value?!i.value&&l.value==="Normal"?"At least one of the individual parameters must be enabled in order for the debug mode to take effect.":void 0:r.value!==o.value.model.sessionDebugModeOverride.forNextNumSessions||i.value!==o.value.model.sessionDebugModeOverride.parameters.enableEntityDebugConfig||l.value!==o.value.model.sessionDebugModeOverride.parameters.incidentUploadMode?void 0:"No changes to save."),E=g(()=>({Normal:"Incident reports will be uploaded normally.",SilentlyOmitUploads:"The client won't upload incidents reports to the server, but will keep them locally in case you change this option later.",RejectIncidents:"The client won't upload incidents reports to the server, and will delete them from its local storage."})[l.value]??"<unknown>");async function I(){const b={forNextNumSessions:r.value,parameters:{enableEntityDebugConfig:i.value,incidentUploadMode:l.value}};await u.post(`/players/${o.value.id}/sessionDebugMode?enabled=${n.value}`,b),e(`${o.value.model.playerName||"n/a"} debug mode ${n.value?"enabled":"disabled"}.`),v()}const M={gameServerApi:u,showSuccessNotification:e,props:m,debugModeEnabled:n,playerData:o,playerRefresh:v,defaultForNextNumSessions:c,forNextNumSessions:r,enableEntityDebugConfig:i,incidentUploadModeOptions:N,incidentUploadMode:l,resetModal:h,saveSettingsButtonDisabledText:x,incidentUploadModeDescription:E,toggleSessionDebugMode:I,computed:g,ref:d,get useGameServerApi(){return S},get MInputSwitch(){return j},get MInputNumber(){return R},get MInputSingleSelectDropdown(){return z},get MInputHintMessage(){return V},get MActionModalButton(){return B},get useNotifications(){return w},get maybePluralString(){return U},get useSubscription(){return f},get getSinglePlayerSubscriptionOptions(){return D}};return Object.defineProperty(M,"__isScriptSetup",{enumerable:!1,value:!0}),M}}),G={key:0},F={class:"tw-flex tw-justify-between"},L={class:"tw-mt-3"},q={class:"tw-mt-3 tw-flex tw-justify-between"},J={class:"tw-mt-3"};function K(p,t,u,e,m,n){return e.playerData?(_(),k("div",G,[s(e.MActionModalButton,{"modal-title":"Control Session Debug Mode",action:e.toggleSessionDebugMode,"trigger-button-label":e.playerData.model.sessionDebugModeOverride?"Control Debug Mode":"Enable Debug Mode","trigger-button-full-width":"",variant:"warning","ok-button-label":"Save Settings","ok-button-disabled-tooltip":e.saveSettingsButtonDisabledText,permission:"api.players.toggle_debug_mode",onShow:e.resetModal,"data-testid":"action-toggle-debug-mode"},{default:y(()=>[t[6]||(t[6]=a("div",{class:"tw-mb-3"},"Session debug mode enables additional debug tools for an individual player's sessions, allowing developers to pinpoint issues associated with that player.",-1)),a("div",F,[t[4]||(t[4]=a("span",{class:"tw-font-semibold"},"Session Debug Mode Enabled",-1)),s(e.MInputSwitch,{class:"tw-relative tw-top-1 tw-mr-3","model-value":e.debugModeEnabled,name:"isPlayerSessionDebugModeEnabled",size:"small","onUpdate:modelValue":t[0]||(t[0]=o=>e.debugModeEnabled=o),"data-testid":"player-debug-mode-toggle"},null,8,["model-value"])]),a("div",L,[s(e.MInputNumber,{label:"Number of Sessions",disabled:!e.debugModeEnabled,"model-value":e.forNextNumSessions,min:1,"hint-message":`Session debug mode will automatically become disabled for this player after ${e.maybePluralString(e.forNextNumSessions,"session")}.`,"onUpdate:modelValue":t[1]||(t[1]=o=>e.forNextNumSessions=o??1)},null,8,["disabled","model-value","hint-message"])]),a("div",q,[a("span",{class:C(["tw-font-bold tw-text-sm tw-leading-6",{"tw-text-neutral-900":e.debugModeEnabled,"tw-text-neutral-400":!e.debugModeEnabled}])},"Extra Logic Execution Checks",2),s(e.MInputSwitch,{class:"tw-relative tw-top-1 tw-mr-3",disabled:!e.debugModeEnabled,"model-value":e.enableEntityDebugConfig,name:"enableEntityDebugConfig",size:"small","onUpdate:modelValue":t[2]||(t[2]=o=>e.enableEntityDebugConfig=o)},null,8,["disabled","model-value"])]),s(e.MInputHintMessage,null,{default:y(()=>t[5]||(t[5]=[A("Enable additional consistency checks for game logic execution. These checks are computationally expensive but can help pinpoint bugs more easily.")]),void 0,!0),_:1}),a("div",J,[s(e.MInputSingleSelectDropdown,{label:"Incident Report Uploads",disabled:!e.debugModeEnabled,"model-value":e.incidentUploadMode,options:e.incidentUploadModeOptions,"hint-message":e.incidentUploadModeDescription,"onUpdate:modelValue":t[3]||(t[3]=o=>e.incidentUploadMode=o)},null,8,["disabled","model-value","hint-message"])])]),_:1},8,["trigger-button-label","ok-button-disabled-tooltip"])])):P("",!0)}const se=T(H,[["render",K],["__file","PlayerActionToggleSessionDebugMode.vue"]]);export{se as default};
