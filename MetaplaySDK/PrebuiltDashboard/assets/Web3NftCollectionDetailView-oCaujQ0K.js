import{d as ht,x as j,c as z,af as Y,a9 as A,cM as H,f as g,C as J,ad as F,ak as E,M as bt,ai as Nt,s as Mt,v as It,a8 as _t,L as Ct,ae as K,b as v,o as r,e as M,w as e,k as a,n as s,p as d,l as T,a as f,t as o,F as pt,r as yt,B as Ft,_ as Tt}from"./index-B7jvAjdE.js";import{M as kt}from"./MActionModalButton-CvWVuTB-.js";import{a as xt,M as zt}from"./MViewContainer-BTeE2xDT.js";import{M as St}from"./MInputCheckbox-BqateWtE.js";import{M as Pt}from"./MInputSingleFileContents-tOi-WM9p.js";import{M as Dt}from"./MInputTextArea-BMdoSBpm.js";import{c as U,b as Q}from"./metaListUtils-B-xQ0HnD.js";import Lt from"./AuditLogCard-DZ2AYrj2.js";import{M as Vt}from"./MetaGeneratedForm-BcVgOIy3.js";import{a as X}from"./web3-D0eBpdhj.js";import{d as Z}from"./debounce-B8gTqdZO.js";import"./MActionModal-coQLkvWs.js";import"./index-fVjXqxSF.js";import"./index-B_QkKjtG.js";import"./MInputHintMessage-DbuBS4Kn.js";import"./MInputSingleFile-Dbi3mt5D.js";import"./MetaEventStreamCard-D_xDm3jw.js";import"./MInputMultiSelectCheckbox-D_9f7ub1.js";import"./MInputSingleSelectSwitch-CuptGC6e.js";import"./index-CDBqmjrS.js";import"./MInputSimpleSelectDropdown-DIlBEFcs.js";import"./index-qTA83-by.js";import"./MInputText-CzhsT8yb.js";import"./auditLogs-Cml5ZKP5.js";import"./isSymbol-B7ZrWRtH.js";import"./GeneratedUiFormDynamicComponent-DrqrTIRR.js";const At=5,Ut=ht({__name:"Web3NftCollectionDetailView",props:{collectionId:{}},setup(W,{expose:n}){n();const m=W,{data:t,error:R,refresh:y}=j(X(m.collectionId)),S=z(()=>t.value?.nfts),c=z(()=>t.value?.uninitializedNfts);Y().setDynamicTitle(t,l=>`Manage ${l.value.collectionId||"Collection"}`);const h=z(()=>{const l=[];t.value?.configWarning?.length>0&&l.push({title:t.value.configWarning.title,message:t.value.configWarning.message});const u=k();if(u!==0&&l.push({title:"Metadata write operation in progress",message:`The metadata files of ${A(u,"NFT")} in this collection are currently being written in the background. If new NFTs were just initialized, you should wait for this operation to complete before minting the NFTs.`}),H(t.value))for(const N of t.value.ongoingMetadataDownloads){const mt=N.firstTokenId,gt=N.lastTokenId,vt=N.numDownloaded,wt=N.numTotal;l.push({key:N.taskId,title:"Metadata download in progress",message:`The server is currently downloading the metadata of tokens ${mt} to ${gt}. When the download is finished, the NFTs will get initialized in the server. Progress: ${vt}/${wt}.`})}return l});function k(){if(!t.value)return 0;let l=0;for(const u of t.value.nfts)u.hasPendingMetadataWrite===!0&&(l+=1);return l}const b=g({}),B=g(!1),{showSuccessNotification:I,showErrorNotification:_}=K();async function P(){let l=b.value.tokenId;(l===""||l===null||l===void 0)&&(l="automaticTokenId"),await F().post(`nft/${m.collectionId}/${l}/initialize`,b.value),I("New NFT initialized!"),y(),b.value={}}const w=g(""),C=g(),i=g(),D=g(!1),p=g(),x=g(!1),$=z(()=>L()!=null&&!p.value&&!i.value?null:!!i.value);function tt(l){w.value=l,q()}function et(l){x.value=l,V()}J(C,V);function L(){return w.value.length>0?w.value:C.value?C.value:null}function nt(){w.value="",C.value=void 0,i.value=null,D.value=!1,p.value=void 0,x.value=!1}async function V(){const l=L();if(l!==null){D.value=!0,p.value=void 0,i.value=null;try{const u=await F().post(`nft/${m.collectionId}/batchInitialize`,{csv:l,allowOverwrite:x.value,validateOnly:!0});u.data.isSuccess?(p.value=void 0,i.value={nfts:u.data.nfts,numNftsOverwritten:u.data.numNftsOverwritten}):(p.value=new E("Validation Error",u.data.error.message,void 0,void 0,[{title:"Details",content:u.data.error.details}]),i.value=null)}catch(u){const N=u.response.data.error;p.value=new E("Validation Error",N.message,void 0,void 0,[{title:"Details",content:N.details}]),i.value=null}finally{D.value=!1}}}const q=Z(V,500);async function at(){const l=L(),u=await F().post(`nft/${m.collectionId}/batchInitialize`,{csv:l,allowOverwrite:x.value});u.data.isSuccess?(I(`Batch of ${A(u.data.nfts.length,"NFT")} initialized!`),y()):_(u.data.error.message+" "+u.data.error.details)}const O=g({}),it=g(!1);async function lt(){const l=await F().post(`nft/${m.collectionId}/batchInitializeFromMetadata`,O.value);I(`Batch of ${A(l.data.nfts.length,"NFT")} initialized based on existing metadata!`),y()}function ot(){O.value={}}async function rt(){await F().post(`nft/${m.collectionId}/refresh`,b.value),I("Ledger metadata refreshed!"),y()}const dt=["name","description","tokenId","owner","ownerAddress","typeName"],st=["tokenId","owner","ownerAddress"],ut=[new Q("status",[new U("Player-owned",l=>l.owner!=="None"),new U("Non-player-owned",l=>l.owner==="None"&&l.isMinted),new U("Not minted",l=>!l.isMinted)])];function ft(l){return l.owner!=="None"?"Player-owned":l.ownerAddress!=="None"?"Non-player-owned":"Not minted"}function ct(l){return l==="Authoritative"?"NFT metadata is written by this game.":l==="Foreign"?"NFT metadata is written externally, and this game only reads the metadata.":void 0}const G={props:m,singleNftCollectionData:t,singleNftCollectionError:R,singleNftCollectionRefresh:y,allNfts:S,allUninitializedNfts:c,alerts:h,getNumPendingMetadataWrites:k,nftInitializationParams:b,nftInitializationParamsValid:B,showSuccessNotification:I,showErrorNotification:_,initializeNft:P,batchInitPreviewMaxLength:At,csvString:w,csvFile:C,nftPreview:i,nftPreviewIsLoading:D,csvValidationError:p,batchInitAllowOverwrite:x,isCsvFormValid:$,onCsvStringChange:tt,onAllowOverwriteChange:et,getCsvContent:L,clearBatchInitializationState:nt,validateCsvContentNow:V,validateCsvContentDebounced:q,batchInitializeNfts:at,nftInitializationFromMetadataParams:O,nftInitializationFromMetadataParamsValid:it,batchInitializeNftsFromMetadata:lt,resetMetadataInitializationParams:ot,refreshCollectionLedgerInfo:rt,searchFields:dt,uninitializedNftsSearchFields:st,filterSets:ut,getItemStatusText:ft,getMetadataManagementModeDescription:ct,get debounce(){return Z},computed:z,ref:g,watch:J,get useGameServerApi(){return F},get MetaListFilterOption(){return U},get MetaListFilterSet(){return Q},get DisplayError(){return E},get MActionModalButton(){return kt},get MBadge(){return bt},get MErrorCallout(){return Nt},get MInputCheckbox(){return St},get MInputTextArea(){return Dt},get MInputSingleFileContents(){return Pt},get MList(){return Mt},get MListItem(){return It},get MTextButton(){return _t},get MTooltip(){return Ct},get useHeaderbar(){return Y},get MViewContainer(){return xt},get MPageOverviewCard(){return zt},get useNotifications(){return K},get maybePluralString(){return A},get useSubscription(){return j},AuditLogCard:Lt,MetaGeneratedForm:Vt,get isNullOrUndefined(){return H},get getSingleNftCollectionSubscriptionOptions(){return X}};return Object.defineProperty(G,"__isScriptSetup",{enumerable:!1,value:!0}),G}}),Bt={class:"font-weight-bold tw-mb-1"},Ot={class:"font-weight-bold tw-mb-1"},Et={key:0,class:"tw-w-full tw-text-center"},Wt={class:"text-muted"},Rt={key:1,class:"tw-w-full tw-text-center"},qt={class:"text-muted"},Gt={key:2},jt={class:"tw-flex tw-flex-wrap tw-justify-end tw-gap-1"},Yt={class:"tw-flex tw-flex-col tw-gap-y-2"},Ht={key:3},Jt={key:0},Kt={key:0},Qt={key:1,class:"tw-italic"},Xt={class:"small text-muted tw-ml-1"},Zt={key:0},$t={key:1,class:"tw-italic"},te={class:"small text-muted ml-2"},ee={key:0},ne={key:1},ae={key:2,class:"tw-italic"},ie={class:"small text-muted tw-ml-1"},le={key:0},oe={key:1,class:"tw-italic"},re={key:0},de={key:1};function se(W,n,m,t,R,y){const S=v("fa-icon"),c=v("b-td"),h=v("b-tr"),k=v("b-tbody"),b=v("b-table-simple"),B=v("b-alert"),I=v("b-spinner"),_=v("b-row"),P=v("meta-list-card"),w=v("b-col"),C=v("meta-raw-data");return r(),M(t.MViewContainer,{variant:t.singleNftCollectionData?.configWarning?"warning":void 0,"is-loading":!t.singleNftCollectionData,error:t.singleNftCollectionError,alerts:t.alerts},{overview:e(()=>[a(t.MPageOverviewCard,{id:t.singleNftCollectionData.collectionId,title:t.singleNftCollectionData?.ledgerInfo?.name??"Name unknown",subtitle:t.singleNftCollectionData?.ledgerInfo?.description,avatar:t.singleNftCollectionData?.ledgerInfo?.iconUrl,"data-testid":"nft-collection-overview-card"},{buttons:e(()=>[s("div",jt,[a(t.MActionModalButton,{"modal-title":"Initialize a New NFT",action:t.initializeNft,"trigger-button-label":"Init single NFT","ok-button-label":"Initialize","ok-button-disabled-tooltip":t.nftInitializationParamsValid?void 0:"Missing required fields.",permission:"api.nft.initialize","data-testid":"initialize-nft"},{default:e(()=>[n[13]||(n[13]=s("p",null,"To mint a new NFT, its metadata need to be first initialized on the game server.",-1)),a(t.MetaGeneratedForm,{modelValue:t.nftInitializationParams,"onUpdate:modelValue":n[0]||(n[0]=i=>t.nftInitializationParams=i),typeName:"Metaplay.Server.AdminApi.Controllers.NftController.NftInitializationParams",onStatus:n[1]||(n[1]=i=>t.nftInitializationParamsValid=i)},null,8,["modelValue"])],void 0,!0),_:1},8,["ok-button-disabled-tooltip"]),a(t.MActionModalButton,{"modal-title":"Batch Initialize new NFTs",action:t.batchInitializeNfts,"trigger-button-label":"Init NFTs from CSV","ok-button-label":"Batch Initialize",onShow:t.clearBatchInitializationState,"data-testid":"batch-initialize-nfts"},{default:e(()=>[n[16]||(n[16]=s("h6",null,"Upload NFT Data",-1)),n[17]||(n[17]=s("p",null,"You can upload a list of NFTs in a CSV format to initialize them all in one go.",-1)),s("div",Yt,[a(t.MInputTextArea,{label:"Paste in a CSV string...","model-value":t.csvString,placeholder:t.csvFile!=null?"File upload selected":t.singleNftCollectionData.batchInitPlaceholderText,variant:t.csvString!==""?t.csvString?"success":"danger":"default",rows:5,disabled:t.csvFile!=null,"onUpdate:modelValue":t.onCsvStringChange,"data-testid":"entity-archive-text"},null,8,["model-value","placeholder","variant","disabled"]),a(t.MInputSingleFileContents,{label:"...or upload as a file","model-value":t.csvFile,placeholder:t.csvString?"Manual paste selected":"Choose or drop a CSV file",variant:t.csvFile?t.isCsvFormValid?"success":"danger":"default",disabled:t.csvString!=="","accepted-file-types":".csv","onUpdate:modelValue":n[2]||(n[2]=i=>t.csvFile=i)},null,8,["model-value","placeholder","variant","disabled"]),a(t.MInputCheckbox,{"model-value":t.batchInitAllowOverwrite,name:"allowBatchInitializationOverwrite","onUpdate:modelValue":t.onAllowOverwriteChange},{default:e(()=>[n[15]||(n[15]=d("Allow Overwrite")),a(t.MBadge,{class:"tw-ml-1",tooltip:"If overwriting is allowed, NFTs from this batch will overwrite the state of any existing NFTs with the same ids. Use with caution!",shape:"pill"},{default:e(()=>n[14]||(n[14]=[d("?")]),void 0,!0),_:1})],void 0,!0),_:1},8,["model-value"])])]),"right-panel":e(()=>[n[19]||(n[19]=s("h6",null,"Preview Incoming Data",-1)),t.nftPreview?T("",!0):(r(),M(B,{key:0,show:"",variant:"secondary"},{default:e(()=>n[18]||(n[18]=[d("Paste in a valid list of NFTs compatible with the game server's version to see a preview of the import results.")]),void 0,!0),_:1})),t.nftPreviewIsLoading?(r(),M(I,{key:1})):T("",!0),t.csvValidationError?(r(),M(t.MErrorCallout,{key:2,error:t.csvValidationError},null,8,["error"])):T("",!0),t.nftPreview?(r(),f("div",Ht,[s("div",null,o(t.maybePluralString(t.nftPreview.nfts.length,"NFT"))+" will be initialized.",1),t.batchInitAllowOverwrite?(r(),f("div",Jt,o(t.maybePluralString(t.nftPreview.numNftsOverwritten,"existing NFT"))+" will be overwritten.",1)):T("",!0),a(t.MList,{class:"tw-mt-2","show-border":""},{default:e(()=>[(r(!0),f(pt,null,yt(t.nftPreview.nfts.slice(0,t.batchInitPreviewMaxLength),i=>(r(),M(t.MListItem,{key:i.tokenId,avatarUrl:i.imageUrl},{"top-right":e(()=>[a(t.MBadge,{variant:t.getItemStatusText(i)==="Minted"?"success":void 0},{default:e(()=>[d(o(t.getItemStatusText(i)),1)],void 0,!0),_:2},1032,["variant"])]),"bottom-left":e(()=>[i.description?(r(),f("div",Zt,o(i.description),1)):(r(),f("span",$t,"No description."))]),default:e(()=>[i.name?(r(),f("span",Kt,o(i.name),1)):(r(),f("span",Qt,"Unnamed "+o(i.typeName),1)),s("span",Xt,o(m.collectionId)+"/"+o(i.tokenId),1)],void 0,!0),_:2},1032,["avatarUrl"]))),128)),t.nftPreview.nfts.length>t.batchInitPreviewMaxLength?(r(),M(t.MListItem,{key:"nfts-omitted-dummy"},{default:e(()=>[s("span",te,"... and "+o(t.maybePluralString(t.nftPreview.nfts.length-t.batchInitPreviewMaxLength,"more NFT"))+" omitted from this preview.",1)],void 0,!0),_:1})):T("",!0)],void 0,!0),_:1})])):T("",!0)]),_:1}),a(t.MActionModalButton,{"modal-title":"Initialize NFTs from existing metadata",action:t.batchInitializeNftsFromMetadata,"trigger-button-label":"Init NFTs from metadata","ok-button-label":"Initialize","ok-button-disabled-tooltip":t.nftInitializationFromMetadataParamsValid?void 0:"Missing required fields.",permission:"api.nft.initialize",onShow:t.resetMetadataInitializationParams,"data-testid":"batch-initialize-nfts-from-metadata"},{default:e(()=>[n[20]||(n[20]=s("p",null,"You can initialize a batch of NFTs (with sequential ids) based on existing metadata publicly served at the NFTs' metadata URLs.",-1)),a(t.MetaGeneratedForm,{modelValue:t.nftInitializationFromMetadataParams,"onUpdate:modelValue":n[3]||(n[3]=i=>t.nftInitializationFromMetadataParams=i),typeName:"Metaplay.Server.AdminApi.Controllers.NftController.NftBatchInitializationFromMetadataParams",onStatus:n[4]||(n[4]=i=>t.nftInitializationFromMetadataParamsValid=i)},null,8,["modelValue"])],void 0,!0),_:1},8,["ok-button-disabled-tooltip"]),a(t.MActionModalButton,{"modal-title":"Refresh NFT Collection Metadata",action:t.refreshCollectionLedgerInfo,"trigger-button-label":"Refresh metadata","trigger-button-disabled-tooltip":t.singleNftCollectionData.hasLedger?void 0:`${t.singleNftCollectionData.ledger} mode has no ledger to refresh from.`,permission:"api.nft.refresh_from_ledger","data-testid":"refresh-nft-collection"},{default:e(()=>[s("p",null,"You can immediately trigger a refresh of the collection's ledger metadata from "+o(t.singleNftCollectionData.ledgerName)+".",1),n[21]||(n[21]=s("div",{class:"text-muted small"},"This happens automatically in the background, so manual refreshing is not needed in daily operations.",-1))],void 0,!0),_:1},8,["trigger-button-disabled-tooltip"])])]),default:e(()=>[s("div",Bt,[a(S,{icon:"chart-bar"}),n[5]||(n[5]=d(" Overview"))]),a(b,{small:"",responsive:""},{default:e(()=>[a(k,null,{default:e(()=>[a(h,null,{default:e(()=>[a(c,null,{default:e(()=>n[6]||(n[6]=[d("Ledger")]),void 0,!0),_:1}),a(c,{class:"text-right"},{default:e(()=>[d(o(t.singleNftCollectionData.ledger),1)],void 0,!0),_:1})],void 0,!0),_:1}),a(h,null,{default:e(()=>[a(c,null,{default:e(()=>n[7]||(n[7]=[d("Contract Address")]),void 0,!0),_:1}),t.singleNftCollectionData.hasLedger?(r(),M(c,{key:0,class:"text-right",style:{"word-break":"break-all"}},{default:e(()=>[d(o(t.singleNftCollectionData.contractAddress),1)],void 0,!0),_:1})):(r(),M(c,{key:1,class:"text-right text-muted"},{default:e(()=>[d(o(t.singleNftCollectionData.ledger)+" mode has no contracts",1)],void 0,!0),_:1}))],void 0,!0),_:1}),a(h,null,{default:e(()=>[a(c,null,{default:e(()=>n[8]||(n[8]=[d("Metadata API URL")]),void 0,!0),_:1}),a(c,{class:"text-right"},{default:e(()=>[d(o(t.singleNftCollectionData.metadataApiUrl),1)],void 0,!0),_:1})],void 0,!0),_:1}),a(h,null,{default:e(()=>[a(c,null,{default:e(()=>n[9]||(n[9]=[d("Metadata Management")]),void 0,!0),_:1}),a(c,{class:"text-right"},{default:e(()=>[a(t.MTooltip,{content:t.getMetadataManagementModeDescription(t.singleNftCollectionData.metadataManagementMode)},{default:e(()=>[d(o(t.singleNftCollectionData.metadataManagementMode),1)],void 0,!0),_:1},8,["content"])],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1}),s("div",Ot,[a(S,{icon:"cubes"}),n[10]||(n[10]=d(" Ledger Metadata"))]),t.singleNftCollectionData.hasLedger?t.singleNftCollectionData.ledgerInfo?(r(),f("div",Gt,[a(b,{small:"",responsive:""},{default:e(()=>[a(k,null,{default:e(()=>[a(h,null,{default:e(()=>[a(c,null,{default:e(()=>n[11]||(n[11]=[d("Icon URL")]),void 0,!0),_:1}),a(c,{class:"tw-text-right"},{default:e(()=>[a(t.MTextButton,{to:t.singleNftCollectionData.ledgerInfo.iconUrl},{default:e(()=>[d(o(t.singleNftCollectionData.ledgerInfo.iconUrl),1)],void 0,!0),_:1},8,["to"])],void 0,!0),_:1})],void 0,!0),_:1}),a(h,null,{default:e(()=>[a(c,null,{default:e(()=>n[12]||(n[12]=[d("Image URL")]),void 0,!0),_:1}),a(c,{class:"tw-text-right"},{default:e(()=>[a(t.MTextButton,{to:t.singleNftCollectionData.ledgerInfo.collectionImageUrl},{default:e(()=>[d(o(t.singleNftCollectionData.ledgerInfo.collectionImageUrl),1)],void 0,!0),_:1},8,["to"])],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1})],void 0,!0),_:1})])):(r(),f("div",Rt,[s("p",qt,"Collection not configured in "+o(t.singleNftCollectionData.ledgerName)+".",1)])):(r(),f("div",Et,[s("p",Wt,o(t.singleNftCollectionData.ledger)+" mode has no associated ledger.",1)]))],void 0,!0),_:1},8,["id","title","subtitle","avatar"])]),default:e(()=>[a(_,{class:"mb-2 tw-mt-4","no-gutters":"","align-v":"center"},{default:e(()=>n[22]||(n[22]=[s("h3",null,"Collection Data",-1)]),void 0,!0),_:1}),a(_,{"align-h":"center"},{default:e(()=>[a(w,{class:"tw-mb-4",lg:"6"},{default:e(()=>[a(P,{class:"h-100",itemList:t.allNfts,searchFields:t.searchFields,filterSets:t.filterSets,title:"NFTs",emptyMessage:"No NFTs in this collection","data-testid":"nft-collection-nft-list"},{"item-card":e(({item:i})=>[a(t.MListItem,{avatarUrl:i.imageUrl},Ft({"bottom-right":e(()=>[a(t.MTextButton,{to:`/web3/nft/${m.collectionId}/${i.tokenId}`,permission:"api.nft.view","data-testid":"view-nft"},{default:e(()=>n[23]||(n[23]=[d("View NFT")]),void 0,!0),_:2},1032,["to"])]),default:e(()=>[i.queryError!==null?(r(),f("span",ee,"🛑 Failed to load!")):i.name?(r(),f("span",ne,o(i.name),1)):(r(),f("span",ae,"Unnamed "+o(i.typeName),1)),s("span",ie,o(m.collectionId)+"/"+o(i.tokenId),1)],void 0,!0),_:2},[i.queryError===null?{name:"top-right",fn:e(()=>[d(o(t.getItemStatusText(i)),1)]),key:"0"}:void 0,i.queryError===null?{name:"bottom-left",fn:e(()=>[i.description?(r(),f("div",le,o(i.description),1)):(r(),f("span",oe,"No description."))]),key:"1"}:void 0]),1032,["avatarUrl"])]),_:1},8,["itemList"])],void 0,!0),_:1}),a(w,{class:"tw-mb-4",lg:"6"},{default:e(()=>[a(P,{class:"h-100",itemList:t.allUninitializedNfts,searchFields:t.uninitializedNftsSearchFields,title:"Recent orphan NFTs",emptyMessage:"No orphan NFTs encountered for this collection.",description:`The most recently-encountered NFTs that have been minted in ${t.singleNftCollectionData.ledgerName} but haven't been initialized in the game. Ideally, this should never happen in production.`,dangerous:"","data-testid":"nft-collection-uninitialized-nfts-card"},{"item-card":e(({item:i})=>[a(t.MListItem,null,{"top-right":e(()=>[i.owner==="None"?(r(),f("span",re,"No owning player")):(r(),f("span",de,[n[24]||(n[24]=d("Owning player: ")),a(t.MTextButton,{to:`/players/${i.owner}`,permission:"api.players.view"},{default:e(()=>[d(o(i.owner),1)],void 0,!0),_:2},1032,["to"])]))]),"bottom-left":e(()=>[d("Owner: "+o(i.ownerAddress),1)]),default:e(()=>[d(o(m.collectionId)+"/"+o(i.tokenId),1)],void 0,!0),_:2},1024)]),_:1},8,["itemList","description"])],void 0,!0),_:1})],void 0,!0),_:1}),a(_,{class:"mb-2 tw-mt-4","no-gutters":"","align-v":"center"},{default:e(()=>n[25]||(n[25]=[s("h3",null,"Admin",-1)]),void 0,!0),_:1}),a(_,{"align-h":"center"},{default:e(()=>[a(w,{class:"tw-mb-4",lg:"6"},{default:e(()=>[a(t.AuditLogCard,{class:"h-100",targetType:"$NftCollection",targetId:m.collectionId,"data-testid":"nft-collection-audit-log-card"},null,8,["targetId"])],void 0,!0),_:1})],void 0,!0),_:1}),a(C,{kvPair:t.singleNftCollectionData,name:"collection"},null,8,["kvPair"])],void 0,!0),_:1},8,["variant","is-loading","error","alerts"])}const Ae=Tt(Ut,[["render",se],["__file","Web3NftCollectionDetailView.vue"]]);export{Ae as default};
